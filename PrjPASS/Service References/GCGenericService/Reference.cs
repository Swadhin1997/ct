//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrjPASS.GCGenericService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GMCPlan", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class GMCPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileAsByteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GMCPlanDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.GMCPlanItem[] GMCPlanItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PlanUploadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdField, value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileAsByte {
            get {
                return this.FileAsByteField;
            }
            set {
                if ((object.ReferenceEquals(this.FileAsByteField, value) != true)) {
                    this.FileAsByteField = value;
                    this.RaisePropertyChanged("FileAsByte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GMCPlanDetails {
            get {
                return this.GMCPlanDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.GMCPlanDetailsField, value) != true)) {
                    this.GMCPlanDetailsField = value;
                    this.RaisePropertyChanged("GMCPlanDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.GMCPlanItem[] GMCPlanItems {
            get {
                return this.GMCPlanItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.GMCPlanItemsField, value) != true)) {
                    this.GMCPlanItemsField = value;
                    this.RaisePropertyChanged("GMCPlanItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanCode {
            get {
                return this.PlanCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanCodeField, value) != true)) {
                    this.PlanCodeField = value;
                    this.RaisePropertyChanged("PlanCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanEndDate {
            get {
                return this.PlanEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanEndDateField, value) != true)) {
                    this.PlanEndDateField = value;
                    this.RaisePropertyChanged("PlanEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanName {
            get {
                return this.PlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanNameField, value) != true)) {
                    this.PlanNameField = value;
                    this.RaisePropertyChanged("PlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanStartDate {
            get {
                return this.PlanStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanStartDateField, value) != true)) {
                    this.PlanStartDateField = value;
                    this.RaisePropertyChanged("PlanStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PlanUpload {
            get {
                return this.PlanUploadField;
            }
            set {
                if ((this.PlanUploadField.Equals(value) != true)) {
                    this.PlanUploadField = value;
                    this.RaisePropertyChanged("PlanUpload");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GMCPlanItem", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class GMCPlanItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] AgeGroupListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexofAgeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexofSumInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableDisableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SumInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] SumInsuredListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPremiumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgeGroup {
            get {
                return this.AgeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeGroupField, value) != true)) {
                    this.AgeGroupField = value;
                    this.RaisePropertyChanged("AgeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] AgeGroupList {
            get {
                return this.AgeGroupListField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeGroupListField, value) != true)) {
                    this.AgeGroupListField = value;
                    this.RaisePropertyChanged("AgeGroupList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdField, value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexofAgeGroup {
            get {
                return this.IndexofAgeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexofAgeGroupField, value) != true)) {
                    this.IndexofAgeGroupField = value;
                    this.RaisePropertyChanged("IndexofAgeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexofSumInsured {
            get {
                return this.IndexofSumInsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexofSumInsuredField, value) != true)) {
                    this.IndexofSumInsuredField = value;
                    this.RaisePropertyChanged("IndexofSumInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditable {
            get {
                return this.IsEditableField;
            }
            set {
                if ((this.IsEditableField.Equals(value) != true)) {
                    this.IsEditableField = value;
                    this.RaisePropertyChanged("IsEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnableDisable {
            get {
                return this.IsEnableDisableField;
            }
            set {
                if ((this.IsEnableDisableField.Equals(value) != true)) {
                    this.IsEnableDisableField = value;
                    this.RaisePropertyChanged("IsEnableDisable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanCode {
            get {
                return this.PlanCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanCodeField, value) != true)) {
                    this.PlanCodeField = value;
                    this.RaisePropertyChanged("PlanCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanEffectiveDate {
            get {
                return this.PlanEffectiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanEffectiveDateField, value) != true)) {
                    this.PlanEffectiveDateField = value;
                    this.RaisePropertyChanged("PlanEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanEndDate {
            get {
                return this.PlanEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanEndDateField, value) != true)) {
                    this.PlanEndDateField = value;
                    this.RaisePropertyChanged("PlanEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanName {
            get {
                return this.PlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanNameField, value) != true)) {
                    this.PlanNameField = value;
                    this.RaisePropertyChanged("PlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanStartDate {
            get {
                return this.PlanStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanStartDateField, value) != true)) {
                    this.PlanStartDateField = value;
                    this.RaisePropertyChanged("PlanStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumInsured {
            get {
                return this.SumInsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.SumInsuredField, value) != true)) {
                    this.SumInsuredField = value;
                    this.RaisePropertyChanged("SumInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] SumInsuredList {
            get {
                return this.SumInsuredListField;
            }
            set {
                if ((object.ReferenceEquals(this.SumInsuredListField, value) != true)) {
                    this.SumInsuredListField = value;
                    this.RaisePropertyChanged("SumInsuredList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPremium {
            get {
                return this.TotalPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPremiumField, value) != true)) {
                    this.TotalPremiumField = value;
                    this.RaisePropertyChanged("TotalPremium");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairList", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairList : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericResult", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    public partial class GenericResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] KeyValuePairListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVType[] LOVTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] KeyValuePairList {
            get {
                return this.KeyValuePairListField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyValuePairListField, value) != true)) {
                    this.KeyValuePairListField = value;
                    this.RaisePropertyChanged("KeyValuePairList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVType[] LOVTypes {
            get {
                return this.LOVTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVTypesField, value) != true)) {
                    this.LOVTypesField = value;
                    this.RaisePropertyChanged("LOVTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyService", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class PolicyService : PrjPASS.GCGenericService.GenericResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryCode {
            get {
                return this.InterMediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryCodeField, value) != true)) {
                    this.InterMediaryCodeField = value;
                    this.RaisePropertyChanged("InterMediaryCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVType", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    public partial class LOVType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeAddress", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeAddress : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine3 {
            get {
                return this.AddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine3Field, value) != true)) {
                    this.AddressLine3Field = value;
                    this.RaisePropertyChanged("AddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCodeLocality {
            get {
                return this.PinCodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeLocalityField, value) != true)) {
                    this.PinCodeLocalityField = value;
                    this.RaisePropertyChanged("PinCodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeAadhar", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeAadhar : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AadharNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CareOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PincodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TTLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VTCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AadharNo {
            get {
                return this.AadharNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AadharNoField, value) != true)) {
                    this.AadharNoField = value;
                    this.RaisePropertyChanged("AadharNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CareOf {
            get {
                return this.CareOfField;
            }
            set {
                if ((object.ReferenceEquals(this.CareOfField, value) != true)) {
                    this.CareOfField = value;
                    this.RaisePropertyChanged("CareOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landmark {
            get {
                return this.LandmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.LandmarkField, value) != true)) {
                    this.LandmarkField = value;
                    this.RaisePropertyChanged("Landmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locality {
            get {
                return this.LocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityField, value) != true)) {
                    this.LocalityField = value;
                    this.RaisePropertyChanged("Locality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pincode {
            get {
                return this.PincodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PincodeField, value) != true)) {
                    this.PincodeField = value;
                    this.RaisePropertyChanged("Pincode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostOffice {
            get {
                return this.PostOfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostOfficeField, value) != true)) {
                    this.PostOfficeField = value;
                    this.RaisePropertyChanged("PostOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resident {
            get {
                return this.ResidentField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidentField, value) != true)) {
                    this.ResidentField = value;
                    this.RaisePropertyChanged("Resident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubDistrict {
            get {
                return this.SubDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.SubDistrictField, value) != true)) {
                    this.SubDistrictField = value;
                    this.RaisePropertyChanged("SubDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TTL {
            get {
                return this.TTLField;
            }
            set {
                if ((object.ReferenceEquals(this.TTLField, value) != true)) {
                    this.TTLField = value;
                    this.RaisePropertyChanged("TTL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VTC {
            get {
                return this.VTCField;
            }
            set {
                if ((object.ReferenceEquals(this.VTCField, value) != true)) {
                    this.VTCField = value;
                    this.RaisePropertyChanged("VTC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeCityDistrictMaster", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeCityDistrictMaster : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RSMDZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STFIZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictFlag {
            get {
                return this.CityDistrictFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictFlagField, value) != true)) {
                    this.CityDistrictFlagField = value;
                    this.RaisePropertyChanged("CityDistrictFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQZone {
            get {
                return this.EQZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneField, value) != true)) {
                    this.EQZoneField = value;
                    this.RaisePropertyChanged("EQZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RSMDZone {
            get {
                return this.RSMDZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.RSMDZoneField, value) != true)) {
                    this.RSMDZoneField = value;
                    this.RaisePropertyChanged("RSMDZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STFIZone {
            get {
                return this.STFIZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.STFIZoneField, value) != true)) {
                    this.STFIZoneField = value;
                    this.RaisePropertyChanged("STFIZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypePortalIDLocking", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypePortalIDLocking : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsertDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoofDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseridField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckActive {
            get {
                return this.CheckActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckActiveField, value) != true)) {
                    this.CheckActiveField = value;
                    this.RaisePropertyChanged("CheckActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsertDate {
            get {
                return this.InsertDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InsertDateField, value) != true)) {
                    this.InsertDateField = value;
                    this.RaisePropertyChanged("InsertDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoofDays {
            get {
                return this.NoofDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.NoofDaysField, value) != true)) {
                    this.NoofDaysField = value;
                    this.RaisePropertyChanged("NoofDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerCode {
            get {
                return this.ProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerCodeField, value) != true)) {
                    this.ProducerCodeField = value;
                    this.RaisePropertyChanged("ProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerName {
            get {
                return this.ProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerNameField, value) != true)) {
                    this.ProducerNameField = value;
                    this.RaisePropertyChanged("ProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Userid {
            get {
                return this.UseridField;
            }
            set {
                if ((object.ReferenceEquals(this.UseridField, value) != true)) {
                    this.UseridField = value;
                    this.RaisePropertyChanged("Userid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeVLEUser", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeVLEUser : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerCode {
            get {
                return this.ProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerCodeField, value) != true)) {
                    this.ProducerCodeField = value;
                    this.RaisePropertyChanged("ProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerName {
            get {
                return this.ProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerNameField, value) != true)) {
                    this.ProducerNameField = value;
                    this.RaisePropertyChanged("ProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAnswer {
            get {
                return this.SecurityAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAnswerField, value) != true)) {
                    this.SecurityAnswerField = value;
                    this.RaisePropertyChanged("SecurityAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion {
            get {
                return this.SecurityQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestionField, value) != true)) {
                    this.SecurityQuestionField = value;
                    this.RaisePropertyChanged("SecurityQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeDealer", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeDealer : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerCode {
            get {
                return this.DealerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerCodeField, value) != true)) {
                    this.DealerCodeField = value;
                    this.RaisePropertyChanged("DealerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerName {
            get {
                return this.DealerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerNameField, value) != true)) {
                    this.DealerNameField = value;
                    this.RaisePropertyChanged("DealerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerType {
            get {
                return this.DealerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerTypeField, value) != true)) {
                    this.DealerTypeField = value;
                    this.RaisePropertyChanged("DealerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanNo {
            get {
                return this.PanNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PanNoField, value) != true)) {
                    this.PanNoField = value;
                    this.RaisePropertyChanged("PanNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentProducerCode {
            get {
                return this.ParentProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentProducerCodeField, value) != true)) {
                    this.ParentProducerCodeField = value;
                    this.RaisePropertyChanged("ParentProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentProducerName {
            get {
                return this.ParentProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentProducerNameField, value) != true)) {
                    this.ParentProducerNameField = value;
                    this.RaisePropertyChanged("ParentProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerCode {
            get {
                return this.ProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerCodeField, value) != true)) {
                    this.ProducerCodeField = value;
                    this.RaisePropertyChanged("ProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerName {
            get {
                return this.ProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerNameField, value) != true)) {
                    this.ProducerNameField = value;
                    this.RaisePropertyChanged("ProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeFieldUserDetails", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeFieldUserDetails : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUserCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentProducerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUserCode {
            get {
                return this.FieldUserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUserCodeField, value) != true)) {
                    this.FieldUserCodeField = value;
                    this.RaisePropertyChanged("FieldUserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUserName {
            get {
                return this.FieldUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUserNameField, value) != true)) {
                    this.FieldUserNameField = value;
                    this.RaisePropertyChanged("FieldUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryCode {
            get {
                return this.IntermediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryCodeField, value) != true)) {
                    this.IntermediaryCodeField = value;
                    this.RaisePropertyChanged("IntermediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOfficeCode {
            get {
                return this.ParentOfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOfficeCodeField, value) != true)) {
                    this.ParentOfficeCodeField = value;
                    this.RaisePropertyChanged("ParentOfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentProducerCode {
            get {
                return this.ParentProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentProducerCodeField, value) != true)) {
                    this.ParentProducerCodeField = value;
                    this.RaisePropertyChanged("ParentProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentProducerName {
            get {
                return this.ParentProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentProducerNameField, value) != true)) {
                    this.ParentProducerNameField = value;
                    this.RaisePropertyChanged("ParentProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentProducerType {
            get {
                return this.ParentProducerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentProducerTypeField, value) != true)) {
                    this.ParentProducerTypeField = value;
                    this.RaisePropertyChanged("ParentProducerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerName {
            get {
                return this.ProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerNameField, value) != true)) {
                    this.ProducerNameField = value;
                    this.RaisePropertyChanged("ProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerType {
            get {
                return this.ProducerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerTypeField, value) != true)) {
                    this.ProducerTypeField = value;
                    this.RaisePropertyChanged("ProducerType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UWFetch", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class UWFetch : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancellationreasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChassisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequenoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementEffetiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndtEffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndtSLNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Errortext1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InwardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManualCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MigratedPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeofOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameChangeEndtEffDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldIntermediaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerApplicationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyConvartionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyEnddateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStartdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskExpireyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskInceptionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysApplicationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleRegistrationNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoCoverNoteNo {
            get {
                return this.AutoCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoCoverNoteNoField, value) != true)) {
                    this.AutoCoverNoteNoField = value;
                    this.RaisePropertyChanged("AutoCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseProposalNo {
            get {
                return this.BaseProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseProposalNoField, value) != true)) {
                    this.BaseProposalNoField = value;
                    this.RaisePropertyChanged("BaseProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCNo {
            get {
                return this.CCNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CCNoField, value) != true)) {
                    this.CCNoField = value;
                    this.RaisePropertyChanged("CCNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cancellationreason {
            get {
                return this.CancellationreasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CancellationreasonField, value) != true)) {
                    this.CancellationreasonField = value;
                    this.RaisePropertyChanged("Cancellationreason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateNo {
            get {
                return this.CertificateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateNoField, value) != true)) {
                    this.CertificateNoField = value;
                    this.RaisePropertyChanged("CertificateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChassisNo {
            get {
                return this.ChassisNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChassisNoField, value) != true)) {
                    this.ChassisNoField = value;
                    this.RaisePropertyChanged("ChassisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chequeno {
            get {
                return this.ChequenoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequenoField, value) != true)) {
                    this.ChequenoField = value;
                    this.RaisePropertyChanged("Chequeno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverType {
            get {
                return this.CoverTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTypeField, value) != true)) {
                    this.CoverTypeField = value;
                    this.RaisePropertyChanged("CoverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCardNo {
            get {
                return this.CreditCardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardNoField, value) != true)) {
                    this.CreditCardNoField = value;
                    this.RaisePropertyChanged("CreditCardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementEffetiveDate {
            get {
                return this.EndorsementEffetiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementEffetiveDateField, value) != true)) {
                    this.EndorsementEffetiveDateField = value;
                    this.RaisePropertyChanged("EndorsementEffetiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementType {
            get {
                return this.EndorsementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementTypeField, value) != true)) {
                    this.EndorsementTypeField = value;
                    this.RaisePropertyChanged("EndorsementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndtEffectiveTime {
            get {
                return this.EndtEffectiveTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndtEffectiveTimeField, value) != true)) {
                    this.EndtEffectiveTimeField = value;
                    this.RaisePropertyChanged("EndtEffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndtSLNo {
            get {
                return this.EndtSLNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EndtSLNoField, value) != true)) {
                    this.EndtSLNoField = value;
                    this.RaisePropertyChanged("EndtSLNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineNo {
            get {
                return this.EngineNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineNoField, value) != true)) {
                    this.EngineNoField = value;
                    this.RaisePropertyChanged("EngineNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Errortext")]
        public string Errortext1 {
            get {
                return this.Errortext1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Errortext1Field, value) != true)) {
                    this.Errortext1Field = value;
                    this.RaisePropertyChanged("Errortext1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryCode {
            get {
                return this.InterMediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryCodeField, value) != true)) {
                    this.InterMediaryCodeField = value;
                    this.RaisePropertyChanged("InterMediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InwardNo {
            get {
                return this.InwardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InwardNoField, value) != true)) {
                    this.InwardNoField = value;
                    this.RaisePropertyChanged("InwardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManualCoverNoteNo {
            get {
                return this.ManualCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ManualCoverNoteNoField, value) != true)) {
                    this.ManualCoverNoteNoField = value;
                    this.RaisePropertyChanged("ManualCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MigratedPolicyNo {
            get {
                return this.MigratedPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MigratedPolicyNoField, value) != true)) {
                    this.MigratedPolicyNoField = value;
                    this.RaisePropertyChanged("MigratedPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeofOperation {
            get {
                return this.ModeofOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeofOperationField, value) != true)) {
                    this.ModeofOperationField = value;
                    this.RaisePropertyChanged("ModeofOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motor {
            get {
                return this.MotorField;
            }
            set {
                if ((object.ReferenceEquals(this.MotorField, value) != true)) {
                    this.MotorField = value;
                    this.RaisePropertyChanged("Motor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameChangeEndtEffDate {
            get {
                return this.NameChangeEndtEffDateField;
            }
            set {
                if ((object.ReferenceEquals(this.NameChangeEndtEffDateField, value) != true)) {
                    this.NameChangeEndtEffDateField = value;
                    this.RaisePropertyChanged("NameChangeEndtEffDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetPremium {
            get {
                return this.NetPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.NetPremiumField, value) != true)) {
                    this.NetPremiumField = value;
                    this.RaisePropertyChanged("NetPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldIntermediary {
            get {
                return this.OldIntermediaryField;
            }
            set {
                if ((object.ReferenceEquals(this.OldIntermediaryField, value) != true)) {
                    this.OldIntermediaryField = value;
                    this.RaisePropertyChanged("OldIntermediary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOfficeCode {
            get {
                return this.ParentOfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOfficeCodeField, value) != true)) {
                    this.ParentOfficeCodeField = value;
                    this.RaisePropertyChanged("ParentOfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerApplicationNo {
            get {
                return this.PartnerApplicationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerApplicationNoField, value) != true)) {
                    this.PartnerApplicationNoField = value;
                    this.RaisePropertyChanged("PartnerApplicationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentDetail {
            get {
                return this.PaymentDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentDetailField, value) != true)) {
                    this.PaymentDetailField = value;
                    this.RaisePropertyChanged("PaymentDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentDetails {
            get {
                return this.PaymentDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentDetailsField, value) != true)) {
                    this.PaymentDetailsField = value;
                    this.RaisePropertyChanged("PaymentDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyConvartionDate {
            get {
                return this.PolicyConvartionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyConvartionDateField, value) != true)) {
                    this.PolicyConvartionDateField = value;
                    this.RaisePropertyChanged("PolicyConvartionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyEnddate {
            get {
                return this.PolicyEnddateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyEnddateField, value) != true)) {
                    this.PolicyEnddateField = value;
                    this.RaisePropertyChanged("PolicyEnddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyFromDate {
            get {
                return this.PolicyFromDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyFromDateField, value) != true)) {
                    this.PolicyFromDateField = value;
                    this.RaisePropertyChanged("PolicyFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNo {
            get {
                return this.PolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoField, value) != true)) {
                    this.PolicyNoField = value;
                    this.RaisePropertyChanged("PolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStartdate {
            get {
                return this.PolicyStartdateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStartdateField, value) != true)) {
                    this.PolicyStartdateField = value;
                    this.RaisePropertyChanged("PolicyStartdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStatus {
            get {
                return this.PolicyStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStatusField, value) != true)) {
                    this.PolicyStatusField = value;
                    this.RaisePropertyChanged("PolicyStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyToDate {
            get {
                return this.PolicyToDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyToDateField, value) != true)) {
                    this.PolicyToDateField = value;
                    this.RaisePropertyChanged("PolicyToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerCode {
            get {
                return this.ProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerCodeField, value) != true)) {
                    this.ProducerCodeField = value;
                    this.RaisePropertyChanged("ProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerName {
            get {
                return this.ProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerNameField, value) != true)) {
                    this.ProducerNameField = value;
                    this.RaisePropertyChanged("ProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductIndex {
            get {
                return this.ProductIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIndexField, value) != true)) {
                    this.ProductIndexField = value;
                    this.RaisePropertyChanged("ProductIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatus {
            get {
                return this.ProposalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusField, value) != true)) {
                    this.ProposalStatusField = value;
                    this.RaisePropertyChanged("ProposalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskExpireyDate {
            get {
                return this.RiskExpireyDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskExpireyDateField, value) != true)) {
                    this.RiskExpireyDateField = value;
                    this.RaisePropertyChanged("RiskExpireyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskInceptionDate {
            get {
                return this.RiskInceptionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskInceptionDateField, value) != true)) {
                    this.RiskInceptionDateField = value;
                    this.RaisePropertyChanged("RiskInceptionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysApplicationNo {
            get {
                return this.SysApplicationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SysApplicationNoField, value) != true)) {
                    this.SysApplicationNoField = value;
                    this.RaisePropertyChanged("SysApplicationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalAmountField, value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPremium {
            get {
                return this.TotalPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPremiumField, value) != true)) {
                    this.TotalPremiumField = value;
                    this.RaisePropertyChanged("TotalPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleClass {
            get {
                return this.VehicleClassField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleClassField, value) != true)) {
                    this.VehicleClassField = value;
                    this.RaisePropertyChanged("VehicleClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleRegistrationNo {
            get {
                return this.VehicleRegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleRegistrationNoField, value) != true)) {
                    this.VehicleRegistrationNoField = value;
                    this.RaisePropertyChanged("VehicleRegistrationNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeFieldUser", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeFieldUser : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUserCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUserCode {
            get {
                return this.FieldUserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUserCodeField, value) != true)) {
                    this.FieldUserCodeField = value;
                    this.RaisePropertyChanged("FieldUserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUserName {
            get {
                return this.FieldUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUserNameField, value) != true)) {
                    this.FieldUserNameField = value;
                    this.RaisePropertyChanged("FieldUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryCode {
            get {
                return this.IntermediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryCodeField, value) != true)) {
                    this.IntermediaryCodeField = value;
                    this.RaisePropertyChanged("IntermediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeOffice", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeOffice : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BufferCurrLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BufferMaxLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClusterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseridField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BufferCurrLimit {
            get {
                return this.BufferCurrLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.BufferCurrLimitField, value) != true)) {
                    this.BufferCurrLimitField = value;
                    this.RaisePropertyChanged("BufferCurrLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BufferMaxLimit {
            get {
                return this.BufferMaxLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.BufferMaxLimitField, value) != true)) {
                    this.BufferMaxLimitField = value;
                    this.RaisePropertyChanged("BufferMaxLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClusterCode {
            get {
                return this.ClusterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClusterCodeField, value) != true)) {
                    this.ClusterCodeField = value;
                    this.RaisePropertyChanged("ClusterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalOffice {
            get {
                return this.ExternalOfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalOfficeField, value) != true)) {
                    this.ExternalOfficeField = value;
                    this.RaisePropertyChanged("ExternalOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeType {
            get {
                return this.OfficeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeTypeField, value) != true)) {
                    this.OfficeTypeField = value;
                    this.RaisePropertyChanged("OfficeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOfficeCode {
            get {
                return this.ParentOfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOfficeCodeField, value) != true)) {
                    this.ParentOfficeCodeField = value;
                    this.RaisePropertyChanged("ParentOfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Userid {
            get {
                return this.UseridField;
            }
            set {
                if ((object.ReferenceEquals(this.UseridField, value) != true)) {
                    this.UseridField = value;
                    this.RaisePropertyChanged("Userid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypePolicyDetail", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypePolicyDetail : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChassisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernoteStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeclinedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentCodeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredNameAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryIDAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOBNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOBNameAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastPaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManualCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberIDAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MigratedPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfOperationAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetPremiumAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenCovernoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGatewayTransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGatewayTransactionDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGatewayTransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGatewayTransactionIdAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentIdAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyEndDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyEndTimeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStartDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStartTimeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QCStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QCStatusAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotationNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptModeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenewalStatusAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestStatusAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTaxAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SumInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SumInsuredAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToDateAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPremiumAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadStatusAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleInspectionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleInspectionStatusAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleRegistrationAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleRegistrationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleRegistrationNoAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowIDAPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationNo {
            get {
                return this.ApplicationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNoField, value) != true)) {
                    this.ApplicationNoField = value;
                    this.RaisePropertyChanged("ApplicationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationNoAP {
            get {
                return this.ApplicationNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNoAPField, value) != true)) {
                    this.ApplicationNoAPField = value;
                    this.RaisePropertyChanged("ApplicationNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalStatus {
            get {
                return this.ApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalStatusField, value) != true)) {
                    this.ApprovalStatusField = value;
                    this.RaisePropertyChanged("ApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateNo {
            get {
                return this.CertificateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateNoField, value) != true)) {
                    this.CertificateNoField = value;
                    this.RaisePropertyChanged("CertificateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChassisNo {
            get {
                return this.ChassisNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChassisNoField, value) != true)) {
                    this.ChassisNoField = value;
                    this.RaisePropertyChanged("ChassisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAmount {
            get {
                return this.ClaimAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAmountField, value) != true)) {
                    this.ClaimAmountField = value;
                    this.RaisePropertyChanged("ClaimAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimNo {
            get {
                return this.ClaimNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimNoField, value) != true)) {
                    this.ClaimNoField = value;
                    this.RaisePropertyChanged("ClaimNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimStatus {
            get {
                return this.ClaimStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimStatusField, value) != true)) {
                    this.ClaimStatusField = value;
                    this.RaisePropertyChanged("ClaimStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionMode {
            get {
                return this.CollectionModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionModeField, value) != true)) {
                    this.CollectionModeField = value;
                    this.RaisePropertyChanged("CollectionMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernoteNo {
            get {
                return this.CovernoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernoteNoField, value) != true)) {
                    this.CovernoteNoField = value;
                    this.RaisePropertyChanged("CovernoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernoteStatus {
            get {
                return this.CovernoteStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernoteStatusField, value) != true)) {
                    this.CovernoteStatusField = value;
                    this.RaisePropertyChanged("CovernoteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCodeAP {
            get {
                return this.CustomerCodeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeAPField, value) != true)) {
                    this.CustomerCodeAPField = value;
                    this.RaisePropertyChanged("CustomerCodeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNameAP {
            get {
                return this.CustomerNameAPField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameAPField, value) != true)) {
                    this.CustomerNameAPField = value;
                    this.RaisePropertyChanged("CustomerNameAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeclinedStatus {
            get {
                return this.DeclinedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclinedStatusField, value) != true)) {
                    this.DeclinedStatusField = value;
                    this.RaisePropertyChanged("DeclinedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCode {
            get {
                return this.DepartmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentCodeField, value) != true)) {
                    this.DepartmentCodeField = value;
                    this.RaisePropertyChanged("DepartmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCodeAP {
            get {
                return this.DepartmentCodeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentCodeAPField, value) != true)) {
                    this.DepartmentCodeAPField = value;
                    this.RaisePropertyChanged("DepartmentCodeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineNo {
            get {
                return this.EngineNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineNoField, value) != true)) {
                    this.EngineNoField = value;
                    this.RaisePropertyChanged("EngineNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromDateAP {
            get {
                return this.FromDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.FromDateAPField, value) != true)) {
                    this.FromDateAPField = value;
                    this.RaisePropertyChanged("FromDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuredName {
            get {
                return this.InsuredNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredNameField, value) != true)) {
                    this.InsuredNameField = value;
                    this.RaisePropertyChanged("InsuredName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuredNameAP {
            get {
                return this.InsuredNameAPField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredNameAPField, value) != true)) {
                    this.InsuredNameAPField = value;
                    this.RaisePropertyChanged("InsuredNameAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryIDAP {
            get {
                return this.IntermediaryIDAPField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryIDAPField, value) != true)) {
                    this.IntermediaryIDAPField = value;
                    this.RaisePropertyChanged("IntermediaryIDAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOBName {
            get {
                return this.LOBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LOBNameField, value) != true)) {
                    this.LOBNameField = value;
                    this.RaisePropertyChanged("LOBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOBNameAP {
            get {
                return this.LOBNameAPField;
            }
            set {
                if ((object.ReferenceEquals(this.LOBNameAPField, value) != true)) {
                    this.LOBNameAPField = value;
                    this.RaisePropertyChanged("LOBNameAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastPaymentDate {
            get {
                return this.LastPaymentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPaymentDateField, value) != true)) {
                    this.LastPaymentDateField = value;
                    this.RaisePropertyChanged("LastPaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManualCoverNoteNo {
            get {
                return this.ManualCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ManualCoverNoteNoField, value) != true)) {
                    this.ManualCoverNoteNoField = value;
                    this.RaisePropertyChanged("ManualCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberIDAP {
            get {
                return this.MemberIDAPField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberIDAPField, value) != true)) {
                    this.MemberIDAPField = value;
                    this.RaisePropertyChanged("MemberIDAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MigratedPolicyNo {
            get {
                return this.MigratedPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MigratedPolicyNoField, value) != true)) {
                    this.MigratedPolicyNoField = value;
                    this.RaisePropertyChanged("MigratedPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfOperation {
            get {
                return this.ModeOfOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfOperationField, value) != true)) {
                    this.ModeOfOperationField = value;
                    this.RaisePropertyChanged("ModeOfOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfOperationAP {
            get {
                return this.ModeOfOperationAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfOperationAPField, value) != true)) {
                    this.ModeOfOperationAPField = value;
                    this.RaisePropertyChanged("ModeOfOperationAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetPremium {
            get {
                return this.NetPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.NetPremiumField, value) != true)) {
                    this.NetPremiumField = value;
                    this.RaisePropertyChanged("NetPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetPremiumAP {
            get {
                return this.NetPremiumAPField;
            }
            set {
                if ((object.ReferenceEquals(this.NetPremiumAPField, value) != true)) {
                    this.NetPremiumAPField = value;
                    this.RaisePropertyChanged("NetPremiumAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCodeAP {
            get {
                return this.OfficeCodeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeAPField, value) != true)) {
                    this.OfficeCodeAPField = value;
                    this.RaisePropertyChanged("OfficeCodeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenCovernote {
            get {
                return this.OpenCovernoteField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenCovernoteField, value) != true)) {
                    this.OpenCovernoteField = value;
                    this.RaisePropertyChanged("OpenCovernote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginAP {
            get {
                return this.OriginAPField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginAPField, value) != true)) {
                    this.OriginAPField = value;
                    this.RaisePropertyChanged("OriginAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentDateField, value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentDateAP {
            get {
                return this.PaymentDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentDateAPField, value) != true)) {
                    this.PaymentDateAPField = value;
                    this.RaisePropertyChanged("PaymentDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentGatewayTransactionDate {
            get {
                return this.PaymentGatewayTransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGatewayTransactionDateField, value) != true)) {
                    this.PaymentGatewayTransactionDateField = value;
                    this.RaisePropertyChanged("PaymentGatewayTransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentGatewayTransactionDateAP {
            get {
                return this.PaymentGatewayTransactionDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGatewayTransactionDateAPField, value) != true)) {
                    this.PaymentGatewayTransactionDateAPField = value;
                    this.RaisePropertyChanged("PaymentGatewayTransactionDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentGatewayTransactionId {
            get {
                return this.PaymentGatewayTransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGatewayTransactionIdField, value) != true)) {
                    this.PaymentGatewayTransactionIdField = value;
                    this.RaisePropertyChanged("PaymentGatewayTransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentGatewayTransactionIdAP {
            get {
                return this.PaymentGatewayTransactionIdAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGatewayTransactionIdAPField, value) != true)) {
                    this.PaymentGatewayTransactionIdAPField = value;
                    this.RaisePropertyChanged("PaymentGatewayTransactionIdAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentIdField, value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentIdAP {
            get {
                return this.PaymentIdAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentIdAPField, value) != true)) {
                    this.PaymentIdAPField = value;
                    this.RaisePropertyChanged("PaymentIdAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyEndDate {
            get {
                return this.PolicyEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyEndDateField, value) != true)) {
                    this.PolicyEndDateField = value;
                    this.RaisePropertyChanged("PolicyEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyEndDateAP {
            get {
                return this.PolicyEndDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyEndDateAPField, value) != true)) {
                    this.PolicyEndDateAPField = value;
                    this.RaisePropertyChanged("PolicyEndDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyEndTimeAP {
            get {
                return this.PolicyEndTimeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyEndTimeAPField, value) != true)) {
                    this.PolicyEndTimeAPField = value;
                    this.RaisePropertyChanged("PolicyEndTimeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNo {
            get {
                return this.PolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoField, value) != true)) {
                    this.PolicyNoField = value;
                    this.RaisePropertyChanged("PolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNoAP {
            get {
                return this.PolicyNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoAPField, value) != true)) {
                    this.PolicyNoAPField = value;
                    this.RaisePropertyChanged("PolicyNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStartDate {
            get {
                return this.PolicyStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStartDateField, value) != true)) {
                    this.PolicyStartDateField = value;
                    this.RaisePropertyChanged("PolicyStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStartDateAP {
            get {
                return this.PolicyStartDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStartDateAPField, value) != true)) {
                    this.PolicyStartDateAPField = value;
                    this.RaisePropertyChanged("PolicyStartDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStartTimeAP {
            get {
                return this.PolicyStartTimeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStartTimeAPField, value) != true)) {
                    this.PolicyStartTimeAPField = value;
                    this.RaisePropertyChanged("PolicyStartTimeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyTypeAP {
            get {
                return this.PolicyTypeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeAPField, value) != true)) {
                    this.PolicyTypeAPField = value;
                    this.RaisePropertyChanged("PolicyTypeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCodeAP {
            get {
                return this.ProductCodeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeAPField, value) != true)) {
                    this.ProductCodeAPField = value;
                    this.RaisePropertyChanged("ProductCodeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNameAP {
            get {
                return this.ProductNameAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameAPField, value) != true)) {
                    this.ProductNameAPField = value;
                    this.RaisePropertyChanged("ProductNameAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDateAP {
            get {
                return this.ProposalDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateAPField, value) != true)) {
                    this.ProposalDateAPField = value;
                    this.RaisePropertyChanged("ProposalDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNoAP {
            get {
                return this.ProposalNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoAPField, value) != true)) {
                    this.ProposalNoAPField = value;
                    this.RaisePropertyChanged("ProposalNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QCStatus {
            get {
                return this.QCStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.QCStatusField, value) != true)) {
                    this.QCStatusField = value;
                    this.RaisePropertyChanged("QCStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QCStatusAP {
            get {
                return this.QCStatusAPField;
            }
            set {
                if ((object.ReferenceEquals(this.QCStatusAPField, value) != true)) {
                    this.QCStatusAPField = value;
                    this.RaisePropertyChanged("QCStatusAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuotationNoAP {
            get {
                return this.QuotationNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotationNoAPField, value) != true)) {
                    this.QuotationNoAPField = value;
                    this.RaisePropertyChanged("QuotationNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptDateField, value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptDateAP {
            get {
                return this.ReceiptDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptDateAPField, value) != true)) {
                    this.ReceiptDateAPField = value;
                    this.RaisePropertyChanged("ReceiptDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptMode {
            get {
                return this.ReceiptModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptModeField, value) != true)) {
                    this.ReceiptModeField = value;
                    this.RaisePropertyChanged("ReceiptMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptModeAP {
            get {
                return this.ReceiptModeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptModeAPField, value) != true)) {
                    this.ReceiptModeAPField = value;
                    this.RaisePropertyChanged("ReceiptModeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptNo {
            get {
                return this.ReceiptNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptNoField, value) != true)) {
                    this.ReceiptNoField = value;
                    this.RaisePropertyChanged("ReceiptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptNoAP {
            get {
                return this.ReceiptNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptNoAPField, value) != true)) {
                    this.ReceiptNoAPField = value;
                    this.RaisePropertyChanged("ReceiptNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenewalDate {
            get {
                return this.RenewalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalDateField, value) != true)) {
                    this.RenewalDateField = value;
                    this.RaisePropertyChanged("RenewalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenewalDateAP {
            get {
                return this.RenewalDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalDateAPField, value) != true)) {
                    this.RenewalDateAPField = value;
                    this.RaisePropertyChanged("RenewalDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenewalStatus {
            get {
                return this.RenewalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalStatusField, value) != true)) {
                    this.RenewalStatusField = value;
                    this.RaisePropertyChanged("RenewalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenewalStatusAP {
            get {
                return this.RenewalStatusAPField;
            }
            set {
                if ((object.ReferenceEquals(this.RenewalStatusAPField, value) != true)) {
                    this.RenewalStatusAPField = value;
                    this.RaisePropertyChanged("RenewalStatusAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestStatus {
            get {
                return this.RequestStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestStatusField, value) != true)) {
                    this.RequestStatusField = value;
                    this.RaisePropertyChanged("RequestStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestStatusAP {
            get {
                return this.RequestStatusAPField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestStatusAPField, value) != true)) {
                    this.RequestStatusAPField = value;
                    this.RaisePropertyChanged("RequestStatusAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNoAP {
            get {
                return this.SerialNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoAPField, value) != true)) {
                    this.SerialNoAPField = value;
                    this.RaisePropertyChanged("SerialNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTax {
            get {
                return this.ServiceTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTaxField, value) != true)) {
                    this.ServiceTaxField = value;
                    this.RaisePropertyChanged("ServiceTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTaxAP {
            get {
                return this.ServiceTaxAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTaxAPField, value) != true)) {
                    this.ServiceTaxAPField = value;
                    this.RaisePropertyChanged("ServiceTaxAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusAP {
            get {
                return this.StatusAPField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusAPField, value) != true)) {
                    this.StatusAPField = value;
                    this.RaisePropertyChanged("StatusAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCodeAP {
            get {
                return this.StatusCodeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeAPField, value) != true)) {
                    this.StatusCodeAPField = value;
                    this.RaisePropertyChanged("StatusCodeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumInsured {
            get {
                return this.SumInsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.SumInsuredField, value) != true)) {
                    this.SumInsuredField = value;
                    this.RaisePropertyChanged("SumInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumInsuredAP {
            get {
                return this.SumInsuredAPField;
            }
            set {
                if ((object.ReferenceEquals(this.SumInsuredAPField, value) != true)) {
                    this.SumInsuredAPField = value;
                    this.RaisePropertyChanged("SumInsuredAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToDateAP {
            get {
                return this.ToDateAPField;
            }
            set {
                if ((object.ReferenceEquals(this.ToDateAPField, value) != true)) {
                    this.ToDateAPField = value;
                    this.RaisePropertyChanged("ToDateAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPremium {
            get {
                return this.TotalPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPremiumField, value) != true)) {
                    this.TotalPremiumField = value;
                    this.RaisePropertyChanged("TotalPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPremiumAP {
            get {
                return this.TotalPremiumAPField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPremiumAPField, value) != true)) {
                    this.TotalPremiumAPField = value;
                    this.RaisePropertyChanged("TotalPremiumAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionTypeAP {
            get {
                return this.TransactionTypeAPField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeAPField, value) != true)) {
                    this.TransactionTypeAPField = value;
                    this.RaisePropertyChanged("TransactionTypeAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadStatusAP {
            get {
                return this.UploadStatusAPField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadStatusAPField, value) != true)) {
                    this.UploadStatusAPField = value;
                    this.RaisePropertyChanged("UploadStatusAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleInspectionStatus {
            get {
                return this.VehicleInspectionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleInspectionStatusField, value) != true)) {
                    this.VehicleInspectionStatusField = value;
                    this.RaisePropertyChanged("VehicleInspectionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleInspectionStatusAP {
            get {
                return this.VehicleInspectionStatusAPField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleInspectionStatusAPField, value) != true)) {
                    this.VehicleInspectionStatusAPField = value;
                    this.RaisePropertyChanged("VehicleInspectionStatusAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleManufacturer {
            get {
                return this.VehicleManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleManufacturerField, value) != true)) {
                    this.VehicleManufacturerField = value;
                    this.RaisePropertyChanged("VehicleManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModel {
            get {
                return this.VehicleModelField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelField, value) != true)) {
                    this.VehicleModelField = value;
                    this.RaisePropertyChanged("VehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleRegistrationAddress {
            get {
                return this.VehicleRegistrationAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleRegistrationAddressField, value) != true)) {
                    this.VehicleRegistrationAddressField = value;
                    this.RaisePropertyChanged("VehicleRegistrationAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleRegistrationNo {
            get {
                return this.VehicleRegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleRegistrationNoField, value) != true)) {
                    this.VehicleRegistrationNoField = value;
                    this.RaisePropertyChanged("VehicleRegistrationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleRegistrationNoAP {
            get {
                return this.VehicleRegistrationNoAPField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleRegistrationNoAPField, value) != true)) {
                    this.VehicleRegistrationNoAPField = value;
                    this.RaisePropertyChanged("VehicleRegistrationNoAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowID {
            get {
                return this.WorkflowIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowIDField, value) != true)) {
                    this.WorkflowIDField = value;
                    this.RaisePropertyChanged("WorkflowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowIDAP {
            get {
                return this.WorkflowIDAPField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowIDAPField, value) != true)) {
                    this.WorkflowIDAPField = value;
                    this.RaisePropertyChanged("WorkflowIDAP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVDuplicateCustomerList", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVDuplicateCustomerList : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeCityDistrict", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeCityDistrict : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RSMDZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STFIZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictFlag {
            get {
                return this.CityDistrictFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictFlagField, value) != true)) {
                    this.CityDistrictFlagField = value;
                    this.RaisePropertyChanged("CityDistrictFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQZone {
            get {
                return this.EQZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneField, value) != true)) {
                    this.EQZoneField = value;
                    this.RaisePropertyChanged("EQZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RSMDZone {
            get {
                return this.RSMDZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.RSMDZoneField, value) != true)) {
                    this.RSMDZoneField = value;
                    this.RaisePropertyChanged("RSMDZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STFIZone {
            get {
                return this.STFIZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.STFIZoneField, value) != true)) {
                    this.STFIZoneField = value;
                    this.RaisePropertyChanged("STFIZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeCoverNote", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeCoverNote : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNEndingBookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNStartingBookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndLeafNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartLeafNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNEndingBookCode {
            get {
                return this.CNEndingBookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CNEndingBookCodeField, value) != true)) {
                    this.CNEndingBookCodeField = value;
                    this.RaisePropertyChanged("CNEndingBookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNStartingBookCode {
            get {
                return this.CNStartingBookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CNStartingBookCodeField, value) != true)) {
                    this.CNStartingBookCodeField = value;
                    this.RaisePropertyChanged("CNStartingBookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndLeafNo {
            get {
                return this.EndLeafNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EndLeafNoField, value) != true)) {
                    this.EndLeafNoField = value;
                    this.RaisePropertyChanged("EndLeafNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartLeafNo {
            get {
                return this.StartLeafNoField;
            }
            set {
                if ((object.ReferenceEquals(this.StartLeafNoField, value) != true)) {
                    this.StartLeafNoField = value;
                    this.RaisePropertyChanged("StartLeafNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeStateMaster", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeStateMaster : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeCustomer", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeCustomer : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaVillageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EIANumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EIARequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsertDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine3 {
            get {
                return this.AddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine3Field, value) != true)) {
                    this.AddressLine3Field = value;
                    this.RaisePropertyChanged("AddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalStatus {
            get {
                return this.ApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalStatusField, value) != true)) {
                    this.ApprovalStatusField = value;
                    this.RaisePropertyChanged("ApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaVillage {
            get {
                return this.AreaVillageField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageField, value) != true)) {
                    this.AreaVillageField = value;
                    this.RaisePropertyChanged("AreaVillage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrict {
            get {
                return this.CityDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictField, value) != true)) {
                    this.CityDistrictField = value;
                    this.RaisePropertyChanged("CityDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerStatus {
            get {
                return this.CustomerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerStatusField, value) != true)) {
                    this.CustomerStatusField = value;
                    this.RaisePropertyChanged("CustomerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EIANumber {
            get {
                return this.EIANumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EIANumberField, value) != true)) {
                    this.EIANumberField = value;
                    this.RaisePropertyChanged("EIANumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EIARequired {
            get {
                return this.EIARequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.EIARequiredField, value) != true)) {
                    this.EIARequiredField = value;
                    this.RaisePropertyChanged("EIARequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IR {
            get {
                return this.IRField;
            }
            set {
                if ((object.ReferenceEquals(this.IRField, value) != true)) {
                    this.IRField = value;
                    this.RaisePropertyChanged("IR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsertDate {
            get {
                return this.InsertDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InsertDateField, value) != true)) {
                    this.InsertDateField = value;
                    this.RaisePropertyChanged("InsertDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCodeLocality {
            get {
                return this.PinCodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeLocalityField, value) != true)) {
                    this.PinCodeLocalityField = value;
                    this.RaisePropertyChanged("PinCodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateSerialNo {
            get {
                return this.UpdateSerialNoField;
            }
            set {
                if ((this.UpdateSerialNoField.Equals(value) != true)) {
                    this.UpdateSerialNoField = value;
                    this.RaisePropertyChanged("UpdateSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeDeal", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeDeal : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParientIntermediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildIndex {
            get {
                return this.ChildIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildIndexField, value) != true)) {
                    this.ChildIndexField = value;
                    this.RaisePropertyChanged("ChildIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildName {
            get {
                return this.ChildNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildNameField, value) != true)) {
                    this.ChildNameField = value;
                    this.RaisePropertyChanged("ChildName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealStatus {
            get {
                return this.DealStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DealStatusField, value) != true)) {
                    this.DealStatusField = value;
                    this.RaisePropertyChanged("DealStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryCode {
            get {
                return this.IntermediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryCodeField, value) != true)) {
                    this.IntermediaryCodeField = value;
                    this.RaisePropertyChanged("IntermediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryName {
            get {
                return this.IntermediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryNameField, value) != true)) {
                    this.IntermediaryNameField = value;
                    this.RaisePropertyChanged("IntermediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentIndex {
            get {
                return this.ParentIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIndexField, value) != true)) {
                    this.ParentIndexField = value;
                    this.RaisePropertyChanged("ParentIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParientIntermediaryCode {
            get {
                return this.ParientIntermediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParientIntermediaryCodeField, value) != true)) {
                    this.ParientIntermediaryCodeField = value;
                    this.RaisePropertyChanged("ParientIntermediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeGeneric", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeGeneric : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LovTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlName {
            get {
                return this.ControlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlNameField, value) != true)) {
                    this.ControlNameField = value;
                    this.RaisePropertyChanged("ControlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LovType {
            get {
                return this.LovTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LovTypeField, value) != true)) {
                    this.LovTypeField = value;
                    this.RaisePropertyChanged("LovType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyClass {
            get {
                return this.PropertyClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyClassField, value) != true)) {
                    this.PropertyClassField = value;
                    this.RaisePropertyChanged("PropertyClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultList {
            get {
                return this.ResultListField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultListField, value) != true)) {
                    this.ResultListField = value;
                    this.RaisePropertyChanged("ResultList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicySearchResult", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class PolicySearchResult : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManualCovernoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MigratedPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyEnddateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyStartdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StampDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SumInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleRegistrationNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoCoverNoteNo {
            get {
                return this.AutoCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoCoverNoteNoField, value) != true)) {
                    this.AutoCoverNoteNoField = value;
                    this.RaisePropertyChanged("AutoCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverType {
            get {
                return this.CoverTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverTypeField, value) != true)) {
                    this.CoverTypeField = value;
                    this.RaisePropertyChanged("CoverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryCode {
            get {
                return this.InterMediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryCodeField, value) != true)) {
                    this.InterMediaryCodeField = value;
                    this.RaisePropertyChanged("InterMediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryName {
            get {
                return this.InterMediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryNameField, value) != true)) {
                    this.InterMediaryNameField = value;
                    this.RaisePropertyChanged("InterMediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOB {
            get {
                return this.LOBField;
            }
            set {
                if ((object.ReferenceEquals(this.LOBField, value) != true)) {
                    this.LOBField = value;
                    this.RaisePropertyChanged("LOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManualCovernoteNo {
            get {
                return this.ManualCovernoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ManualCovernoteNoField, value) != true)) {
                    this.ManualCovernoteNoField = value;
                    this.RaisePropertyChanged("ManualCovernoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MigratedPolicyNo {
            get {
                return this.MigratedPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MigratedPolicyNoField, value) != true)) {
                    this.MigratedPolicyNoField = value;
                    this.RaisePropertyChanged("MigratedPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetPremium {
            get {
                return this.NetPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.NetPremiumField, value) != true)) {
                    this.NetPremiumField = value;
                    this.RaisePropertyChanged("NetPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentID {
            get {
                return this.PaymentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentIDField, value) != true)) {
                    this.PaymentIDField = value;
                    this.RaisePropertyChanged("PaymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyEnddate {
            get {
                return this.PolicyEnddateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyEnddateField, value) != true)) {
                    this.PolicyEnddateField = value;
                    this.RaisePropertyChanged("PolicyEnddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyStartdate {
            get {
                return this.PolicyStartdateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyStartdateField, value) != true)) {
                    this.PolicyStartdateField = value;
                    this.RaisePropertyChanged("PolicyStartdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTax {
            get {
                return this.ServiceTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTaxField, value) != true)) {
                    this.ServiceTaxField = value;
                    this.RaisePropertyChanged("ServiceTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StampDuty {
            get {
                return this.StampDutyField;
            }
            set {
                if ((object.ReferenceEquals(this.StampDutyField, value) != true)) {
                    this.StampDutyField = value;
                    this.RaisePropertyChanged("StampDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumInsured {
            get {
                return this.SumInsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.SumInsuredField, value) != true)) {
                    this.SumInsuredField = value;
                    this.RaisePropertyChanged("SumInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalPremium {
            get {
                return this.TotalPremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalPremiumField, value) != true)) {
                    this.TotalPremiumField = value;
                    this.RaisePropertyChanged("TotalPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleClass {
            get {
                return this.VehicleClassField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleClassField, value) != true)) {
                    this.VehicleClassField = value;
                    this.RaisePropertyChanged("VehicleClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleRegistrationNo {
            get {
                return this.VehicleRegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleRegistrationNoField, value) != true)) {
                    this.VehicleRegistrationNoField = value;
                    this.RaisePropertyChanged("VehicleRegistrationNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeCustomerSearch", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeCustomerSearch : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerUniqueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDProofDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandLineNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccNumber {
            get {
                return this.BankAccNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccNumberField, value) != true)) {
                    this.BankAccNumberField = value;
                    this.RaisePropertyChanged("BankAccNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerUniqueID {
            get {
                return this.CustomerUniqueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerUniqueIDField, value) != true)) {
                    this.CustomerUniqueIDField = value;
                    this.RaisePropertyChanged("CustomerUniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDProofDetails {
            get {
                return this.IDProofDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.IDProofDetailsField, value) != true)) {
                    this.IDProofDetailsField = value;
                    this.RaisePropertyChanged("IDProofDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandLineNo {
            get {
                return this.LandLineNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineNoField, value) != true)) {
                    this.LandLineNoField = value;
                    this.RaisePropertyChanged("LandLineNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportNo {
            get {
                return this.PassportNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportNoField, value) != true)) {
                    this.PassportNoField = value;
                    this.RaisePropertyChanged("PassportNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeAllOffice", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeAllOffice : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine3 {
            get {
                return this.AddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine3Field, value) != true)) {
                    this.AddressLine3Field = value;
                    this.RaisePropertyChanged("AddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CityIdField, value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landmark {
            get {
                return this.LandmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.LandmarkField, value) != true)) {
                    this.LandmarkField = value;
                    this.RaisePropertyChanged("Landmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCodeLocality {
            get {
                return this.PinCodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeLocalityField, value) != true)) {
                    this.PinCodeLocalityField = value;
                    this.RaisePropertyChanged("PinCodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeRoutingCovernote", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeRoutingCovernote : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChassisNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernoteIssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernoteIssueTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleRegistrationNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChassisNo {
            get {
                return this.ChassisNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChassisNoField, value) != true)) {
                    this.ChassisNoField = value;
                    this.RaisePropertyChanged("ChassisNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernoteIssueDate {
            get {
                return this.CovernoteIssueDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernoteIssueDateField, value) != true)) {
                    this.CovernoteIssueDateField = value;
                    this.RaisePropertyChanged("CovernoteIssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernoteIssueTime {
            get {
                return this.CovernoteIssueTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernoteIssueTimeField, value) != true)) {
                    this.CovernoteIssueTimeField = value;
                    this.RaisePropertyChanged("CovernoteIssueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernoteNo {
            get {
                return this.CovernoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernoteNoField, value) != true)) {
                    this.CovernoteNoField = value;
                    this.RaisePropertyChanged("CovernoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineNo {
            get {
                return this.EngineNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineNoField, value) != true)) {
                    this.EngineNoField = value;
                    this.RaisePropertyChanged("EngineNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceDate {
            get {
                return this.ReferenceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceDateField, value) != true)) {
                    this.ReferenceDateField = value;
                    this.RaisePropertyChanged("ReferenceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNo {
            get {
                return this.ReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNoField, value) != true)) {
                    this.ReferenceNoField = value;
                    this.RaisePropertyChanged("ReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleRegistrationNo {
            get {
                return this.VehicleRegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleRegistrationNoField, value) != true)) {
                    this.VehicleRegistrationNoField = value;
                    this.RaisePropertyChanged("VehicleRegistrationNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVDuplicateCustomer", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVDuplicateCustomer : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuplicateCustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuplicateCustomerFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuplicateCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DuplicateCustomerStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DuplicateCustomerCode {
            get {
                return this.DuplicateCustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplicateCustomerCodeField, value) != true)) {
                    this.DuplicateCustomerCodeField = value;
                    this.RaisePropertyChanged("DuplicateCustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DuplicateCustomerFlag {
            get {
                return this.DuplicateCustomerFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplicateCustomerFlagField, value) != true)) {
                    this.DuplicateCustomerFlagField = value;
                    this.RaisePropertyChanged("DuplicateCustomerFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DuplicateCustomerName {
            get {
                return this.DuplicateCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplicateCustomerNameField, value) != true)) {
                    this.DuplicateCustomerNameField = value;
                    this.RaisePropertyChanged("DuplicateCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DuplicateCustomerStatus {
            get {
                return this.DuplicateCustomerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplicateCustomerStatusField, value) != true)) {
                    this.DuplicateCustomerStatusField = value;
                    this.RaisePropertyChanged("DuplicateCustomerStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVParentCustomer", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVParentCustomer : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VIPStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIPStatus {
            get {
                return this.VIPStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.VIPStatusField, value) != true)) {
                    this.VIPStatusField = value;
                    this.RaisePropertyChanged("VIPStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeRole", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeRole : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentRoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentRoleName {
            get {
                return this.ParentRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentRoleNameField, value) != true)) {
                    this.ParentRoleNameField = value;
                    this.RaisePropertyChanged("ParentRoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeField, value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LovForCoverNote", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LovForCoverNote : PrjPASS.GCGenericService.LOVType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessSrvChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNBookPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNEndingBookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNLeafPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNNoOfLeafField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNStartingBookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteAssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CoverNoteGenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteGenTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CoverNotePrintCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndSrlNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryNameForCoverNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryOrEmloyeeIdForCoverNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartSrlNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessOffice {
            get {
                return this.BusinessOfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessOfficeField, value) != true)) {
                    this.BusinessOfficeField = value;
                    this.RaisePropertyChanged("BusinessOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessSrvChannelName {
            get {
                return this.BusinessSrvChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessSrvChannelNameField, value) != true)) {
                    this.BusinessSrvChannelNameField = value;
                    this.RaisePropertyChanged("BusinessSrvChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNBookPrefix {
            get {
                return this.CNBookPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.CNBookPrefixField, value) != true)) {
                    this.CNBookPrefixField = value;
                    this.RaisePropertyChanged("CNBookPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNEndingBookCode {
            get {
                return this.CNEndingBookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CNEndingBookCodeField, value) != true)) {
                    this.CNEndingBookCodeField = value;
                    this.RaisePropertyChanged("CNEndingBookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNLeafPrefix {
            get {
                return this.CNLeafPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.CNLeafPrefixField, value) != true)) {
                    this.CNLeafPrefixField = value;
                    this.RaisePropertyChanged("CNLeafPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNNoOfLeaf {
            get {
                return this.CNNoOfLeafField;
            }
            set {
                if ((object.ReferenceEquals(this.CNNoOfLeafField, value) != true)) {
                    this.CNNoOfLeafField = value;
                    this.RaisePropertyChanged("CNNoOfLeaf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNStartingBookCode {
            get {
                return this.CNStartingBookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CNStartingBookCodeField, value) != true)) {
                    this.CNStartingBookCodeField = value;
                    this.RaisePropertyChanged("CNStartingBookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteAssignedTo {
            get {
                return this.CoverNoteAssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteAssignedToField, value) != true)) {
                    this.CoverNoteAssignedToField = value;
                    this.RaisePropertyChanged("CoverNoteAssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CoverNoteGenDate {
            get {
                return this.CoverNoteGenDateField;
            }
            set {
                if ((this.CoverNoteGenDateField.Equals(value) != true)) {
                    this.CoverNoteGenDateField = value;
                    this.RaisePropertyChanged("CoverNoteGenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteGenTime {
            get {
                return this.CoverNoteGenTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteGenTimeField, value) != true)) {
                    this.CoverNoteGenTimeField = value;
                    this.RaisePropertyChanged("CoverNoteGenTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CoverNotePrintCount {
            get {
                return this.CoverNotePrintCountField;
            }
            set {
                if ((this.CoverNotePrintCountField.Equals(value) != true)) {
                    this.CoverNotePrintCountField = value;
                    this.RaisePropertyChanged("CoverNotePrintCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndSrlNo {
            get {
                return this.EndSrlNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EndSrlNoField, value) != true)) {
                    this.EndSrlNoField = value;
                    this.RaisePropertyChanged("EndSrlNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryID {
            get {
                return this.InterMediaryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryIDField, value) != true)) {
                    this.InterMediaryIDField = value;
                    this.RaisePropertyChanged("InterMediaryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryNameForCoverNote {
            get {
                return this.IntermediaryNameForCoverNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryNameForCoverNoteField, value) != true)) {
                    this.IntermediaryNameForCoverNoteField = value;
                    this.RaisePropertyChanged("IntermediaryNameForCoverNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryOrEmloyeeIdForCoverNote {
            get {
                return this.IntermediaryOrEmloyeeIdForCoverNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryOrEmloyeeIdForCoverNoteField, value) != true)) {
                    this.IntermediaryOrEmloyeeIdForCoverNoteField = value;
                    this.RaisePropertyChanged("IntermediaryOrEmloyeeIdForCoverNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryType {
            get {
                return this.IntermediaryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryTypeField, value) != true)) {
                    this.IntermediaryTypeField = value;
                    this.RaisePropertyChanged("IntermediaryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuedBy {
            get {
                return this.IssuedByField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedByField, value) != true)) {
                    this.IssuedByField = value;
                    this.RaisePropertyChanged("IssuedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOB {
            get {
                return this.LOBField;
            }
            set {
                if ((object.ReferenceEquals(this.LOBField, value) != true)) {
                    this.LOBField = value;
                    this.RaisePropertyChanged("LOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Office {
            get {
                return this.OfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeField, value) != true)) {
                    this.OfficeField = value;
                    this.RaisePropertyChanged("Office");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartSrlNo {
            get {
                return this.StartSrlNoField;
            }
            set {
                if ((object.ReferenceEquals(this.StartSrlNoField, value) != true)) {
                    this.StartSrlNoField = value;
                    this.RaisePropertyChanged("StartSrlNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Customer : PrjPASS.GCGenericService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffiliationFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateCustCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateEmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnualIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlacklistedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BloodGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequeAcceptenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerInitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerOrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerTierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] CustomerTierListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerUniqueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DBNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeDupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DematAccNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoNotCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DoNotDirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrivingLicensenoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EIANumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EIARequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENDTSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENDTTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationQualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeOrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GSTNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDProofField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDProofDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ISOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryOthersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceRepositoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterEmpTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsBlacklistedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChildCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char IsCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDoNotCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsDocsCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char IsEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsJapaneseClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPortalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPriorityClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsThinCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaidenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaritalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ModeOfCommunication ModeOfCommunicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeExtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PCGClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaidUpCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Location PermanentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentLocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermanentLocationSameAsMailLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PincodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationOthersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTaxRegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceOfFundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TanNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeOfCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerfiedCRNField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffiliationFlag {
            get {
                return this.AffiliationFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.AffiliationFlagField, value) != true)) {
                    this.AffiliationFlagField = value;
                    this.RaisePropertyChanged("AffiliationFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateCustCode {
            get {
                return this.AlternateCustCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateCustCodeField, value) != true)) {
                    this.AlternateCustCodeField = value;
                    this.RaisePropertyChanged("AlternateCustCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmailId {
            get {
                return this.AlternateEmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailIdField, value) != true)) {
                    this.AlternateEmailIdField = value;
                    this.RaisePropertyChanged("AlternateEmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnnualIncome {
            get {
                return this.AnnualIncomeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnualIncomeField, value) != true)) {
                    this.AnnualIncomeField = value;
                    this.RaisePropertyChanged("AnnualIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Blacklisted {
            get {
                return this.BlacklistedField;
            }
            set {
                if ((object.ReferenceEquals(this.BlacklistedField, value) != true)) {
                    this.BlacklistedField = value;
                    this.RaisePropertyChanged("Blacklisted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodGroup {
            get {
                return this.BloodGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodGroupField, value) != true)) {
                    this.BloodGroupField = value;
                    this.RaisePropertyChanged("BloodGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessName {
            get {
                return this.BusinessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessNameField, value) != true)) {
                    this.BusinessNameField = value;
                    this.RaisePropertyChanged("BusinessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CAP {
            get {
                return this.CAPField;
            }
            set {
                if ((object.ReferenceEquals(this.CAPField, value) != true)) {
                    this.CAPField = value;
                    this.RaisePropertyChanged("CAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChequeAcceptence {
            get {
                return this.ChequeAcceptenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeAcceptenceField, value) != true)) {
                    this.ChequeAcceptenceField = value;
                    this.RaisePropertyChanged("ChequeAcceptence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildCustomer {
            get {
                return this.ChildCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildCustomerField, value) != true)) {
                    this.ChildCustomerField = value;
                    this.RaisePropertyChanged("ChildCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNoField, value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerInitials {
            get {
                return this.CustomerInitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerInitialsField, value) != true)) {
                    this.CustomerInitialsField = value;
                    this.RaisePropertyChanged("CustomerInitials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNo {
            get {
                return this.CustomerNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNoField, value) != true)) {
                    this.CustomerNoField = value;
                    this.RaisePropertyChanged("CustomerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerOrg {
            get {
                return this.CustomerOrgField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerOrgField, value) != true)) {
                    this.CustomerOrgField = value;
                    this.RaisePropertyChanged("CustomerOrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerStatus {
            get {
                return this.CustomerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerStatusField, value) != true)) {
                    this.CustomerStatusField = value;
                    this.RaisePropertyChanged("CustomerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerTier {
            get {
                return this.CustomerTierField;
            }
            set {
                if ((this.CustomerTierField.Equals(value) != true)) {
                    this.CustomerTierField = value;
                    this.RaisePropertyChanged("CustomerTier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] CustomerTierList {
            get {
                return this.CustomerTierListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTierListField, value) != true)) {
                    this.CustomerTierListField = value;
                    this.RaisePropertyChanged("CustomerTierList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerTierName {
            get {
                return this.CustomerTierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTierNameField, value) != true)) {
                    this.CustomerTierNameField = value;
                    this.RaisePropertyChanged("CustomerTierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerUniqueID {
            get {
                return this.CustomerUniqueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerUniqueIDField, value) != true)) {
                    this.CustomerUniqueIDField = value;
                    this.RaisePropertyChanged("CustomerUniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DBNo {
            get {
                return this.DBNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DBNoField, value) != true)) {
                    this.DBNoField = value;
                    this.RaisePropertyChanged("DBNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeDupID {
            get {
                return this.DeDupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeDupIDField, value) != true)) {
                    this.DeDupIDField = value;
                    this.RaisePropertyChanged("DeDupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DematAccNo {
            get {
                return this.DematAccNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DematAccNoField, value) != true)) {
                    this.DematAccNoField = value;
                    this.RaisePropertyChanged("DematAccNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoNotCall {
            get {
                return this.DoNotCallField;
            }
            set {
                if ((object.ReferenceEquals(this.DoNotCallField, value) != true)) {
                    this.DoNotCallField = value;
                    this.RaisePropertyChanged("DoNotCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DoNotDirectory {
            get {
                return this.DoNotDirectoryField;
            }
            set {
                if ((this.DoNotDirectoryField.Equals(value) != true)) {
                    this.DoNotDirectoryField = value;
                    this.RaisePropertyChanged("DoNotDirectory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domainname {
            get {
                return this.DomainnameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainnameField, value) != true)) {
                    this.DomainnameField = value;
                    this.RaisePropertyChanged("Domainname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrivingLicenseno {
            get {
                return this.DrivingLicensenoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrivingLicensenoField, value) != true)) {
                    this.DrivingLicensenoField = value;
                    this.RaisePropertyChanged("DrivingLicenseno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EIANumber {
            get {
                return this.EIANumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EIANumberField, value) != true)) {
                    this.EIANumberField = value;
                    this.RaisePropertyChanged("EIANumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EIARequired {
            get {
                return this.EIARequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.EIARequiredField, value) != true)) {
                    this.EIARequiredField = value;
                    this.RaisePropertyChanged("EIARequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDTSubType {
            get {
                return this.ENDTSubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDTSubTypeField, value) != true)) {
                    this.ENDTSubTypeField = value;
                    this.RaisePropertyChanged("ENDTSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDTType {
            get {
                return this.ENDTTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDTTypeField, value) != true)) {
                    this.ENDTTypeField = value;
                    this.RaisePropertyChanged("ENDTType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationQualification {
            get {
                return this.EducationQualificationField;
            }
            set {
                if ((this.EducationQualificationField.Equals(value) != true)) {
                    this.EducationQualificationField = value;
                    this.RaisePropertyChanged("EducationQualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeNo {
            get {
                return this.EmployeeNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNoField, value) != true)) {
                    this.EmployeeNoField = value;
                    this.RaisePropertyChanged("EmployeeNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeOrg {
            get {
                return this.EmployeeOrgField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeOrgField, value) != true)) {
                    this.EmployeeOrgField = value;
                    this.RaisePropertyChanged("EmployeeOrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GSTNumber {
            get {
                return this.GSTNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GSTNumberField, value) != true)) {
                    this.GSTNumberField = value;
                    this.RaisePropertyChanged("GSTNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDProof {
            get {
                return this.IDProofField;
            }
            set {
                if ((this.IDProofField.Equals(value) != true)) {
                    this.IDProofField = value;
                    this.RaisePropertyChanged("IDProof");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDProofDetails {
            get {
                return this.IDProofDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.IDProofDetailsField, value) != true)) {
                    this.IDProofDetailsField = value;
                    this.RaisePropertyChanged("IDProofDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IR {
            get {
                return this.IRField;
            }
            set {
                if ((object.ReferenceEquals(this.IRField, value) != true)) {
                    this.IRField = value;
                    this.RaisePropertyChanged("IR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ISOffline {
            get {
                return this.ISOfflineField;
            }
            set {
                if ((this.ISOfflineField.Equals(value) != true)) {
                    this.ISOfflineField = value;
                    this.RaisePropertyChanged("ISOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndustryOthers {
            get {
                return this.IndustryOthersField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryOthersField, value) != true)) {
                    this.IndustryOthersField = value;
                    this.RaisePropertyChanged("IndustryOthers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceRepository {
            get {
                return this.InsuranceRepositoryField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceRepositoryField, value) != true)) {
                    this.InsuranceRepositoryField = value;
                    this.RaisePropertyChanged("InsuranceRepository");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterEmpTag {
            get {
                return this.InterEmpTagField;
            }
            set {
                if ((object.ReferenceEquals(this.InterEmpTagField, value) != true)) {
                    this.InterEmpTagField = value;
                    this.RaisePropertyChanged("InterEmpTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsBlacklisted {
            get {
                return this.IsBlacklistedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsBlacklistedField, value) != true)) {
                    this.IsBlacklistedField = value;
                    this.RaisePropertyChanged("IsBlacklisted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCAP {
            get {
                return this.IsCAPField;
            }
            set {
                if ((this.IsCAPField.Equals(value) != true)) {
                    this.IsCAPField = value;
                    this.RaisePropertyChanged("IsCAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChildCustomer {
            get {
                return this.IsChildCustomerField;
            }
            set {
                if ((this.IsChildCustomerField.Equals(value) != true)) {
                    this.IsChildCustomerField = value;
                    this.RaisePropertyChanged("IsChildCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char IsCustomer {
            get {
                return this.IsCustomerField;
            }
            set {
                if ((this.IsCustomerField.Equals(value) != true)) {
                    this.IsCustomerField = value;
                    this.RaisePropertyChanged("IsCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoNotCall {
            get {
                return this.IsDoNotCallField;
            }
            set {
                if ((this.IsDoNotCallField.Equals(value) != true)) {
                    this.IsDoNotCallField = value;
                    this.RaisePropertyChanged("IsDoNotCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsDocsCustomer {
            get {
                return this.IsDocsCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.IsDocsCustomerField, value) != true)) {
                    this.IsDocsCustomerField = value;
                    this.RaisePropertyChanged("IsDocsCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char IsEmployee {
            get {
                return this.IsEmployeeField;
            }
            set {
                if ((this.IsEmployeeField.Equals(value) != true)) {
                    this.IsEmployeeField = value;
                    this.RaisePropertyChanged("IsEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobalClient {
            get {
                return this.IsGlobalClientField;
            }
            set {
                if ((this.IsGlobalClientField.Equals(value) != true)) {
                    this.IsGlobalClientField = value;
                    this.RaisePropertyChanged("IsGlobalClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsJapaneseClient {
            get {
                return this.IsJapaneseClientField;
            }
            set {
                if ((this.IsJapaneseClientField.Equals(value) != true)) {
                    this.IsJapaneseClientField = value;
                    this.RaisePropertyChanged("IsJapaneseClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMAP {
            get {
                return this.IsMAPField;
            }
            set {
                if ((this.IsMAPField.Equals(value) != true)) {
                    this.IsMAPField = value;
                    this.RaisePropertyChanged("IsMAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParent {
            get {
                return this.IsParentField;
            }
            set {
                if ((this.IsParentField.Equals(value) != true)) {
                    this.IsParentField = value;
                    this.RaisePropertyChanged("IsParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPortal {
            get {
                return this.IsPortalField;
            }
            set {
                if ((this.IsPortalField.Equals(value) != true)) {
                    this.IsPortalField = value;
                    this.RaisePropertyChanged("IsPortal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPriorityClient {
            get {
                return this.IsPriorityClientField;
            }
            set {
                if ((this.IsPriorityClientField.Equals(value) != true)) {
                    this.IsPriorityClientField = value;
                    this.RaisePropertyChanged("IsPriorityClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsThinCustomer {
            get {
                return this.IsThinCustomerField;
            }
            set {
                if ((this.IsThinCustomerField.Equals(value) != true)) {
                    this.IsThinCustomerField = value;
                    this.RaisePropertyChanged("IsThinCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAP {
            get {
                return this.MAPField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPField, value) != true)) {
                    this.MAPField = value;
                    this.RaisePropertyChanged("MAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOP {
            get {
                return this.MOPField;
            }
            set {
                if ((object.ReferenceEquals(this.MOPField, value) != true)) {
                    this.MOPField = value;
                    this.RaisePropertyChanged("MOP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaidenName {
            get {
                return this.MaidenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaidenNameField, value) != true)) {
                    this.MaidenNameField = value;
                    this.RaisePropertyChanged("MaidenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaritalStatus {
            get {
                return this.MaritalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MaritalStatusField, value) != true)) {
                    this.MaritalStatusField = value;
                    this.RaisePropertyChanged("MaritalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterPinCode {
            get {
                return this.MasterPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterPinCodeField, value) != true)) {
                    this.MasterPinCodeField = value;
                    this.RaisePropertyChanged("MasterPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ModeOfCommunication ModeOfCommunication {
            get {
                return this.ModeOfCommunicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfCommunicationField, value) != true)) {
                    this.ModeOfCommunicationField = value;
                    this.RaisePropertyChanged("ModeOfCommunication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotherName {
            get {
                return this.MotherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MotherNameField, value) != true)) {
                    this.MotherNameField = value;
                    this.RaisePropertyChanged("MotherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((this.OccupationField.Equals(value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeExtn {
            get {
                return this.OfficeExtnField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeExtnField, value) != true)) {
                    this.OfficeExtnField = value;
                    this.RaisePropertyChanged("OfficeExtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PCGClient {
            get {
                return this.PCGClientField;
            }
            set {
                if ((this.PCGClientField.Equals(value) != true)) {
                    this.PCGClientField = value;
                    this.RaisePropertyChanged("PCGClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaidUpCapital {
            get {
                return this.PaidUpCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.PaidUpCapitalField, value) != true)) {
                    this.PaidUpCapitalField = value;
                    this.RaisePropertyChanged("PaidUpCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCustomerCode {
            get {
                return this.ParentCustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCustomerCodeField, value) != true)) {
                    this.ParentCustomerCodeField = value;
                    this.RaisePropertyChanged("ParentCustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCustomerName {
            get {
                return this.ParentCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCustomerNameField, value) != true)) {
                    this.ParentCustomerNameField = value;
                    this.RaisePropertyChanged("ParentCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportNo {
            get {
                return this.PassportNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportNoField, value) != true)) {
                    this.PassportNoField = value;
                    this.RaisePropertyChanged("PassportNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMode {
            get {
                return this.PaymentModeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentModeField, value) != true)) {
                    this.PaymentModeField = value;
                    this.RaisePropertyChanged("PaymentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Location PermanentLocation {
            get {
                return this.PermanentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentLocationField, value) != true)) {
                    this.PermanentLocationField = value;
                    this.RaisePropertyChanged("PermanentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentLocationCode {
            get {
                return this.PermanentLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentLocationCodeField, value) != true)) {
                    this.PermanentLocationCodeField = value;
                    this.RaisePropertyChanged("PermanentLocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermanentLocationSameAsMailLocation {
            get {
                return this.PermanentLocationSameAsMailLocationField;
            }
            set {
                if ((this.PermanentLocationSameAsMailLocationField.Equals(value) != true)) {
                    this.PermanentLocationSameAsMailLocationField = value;
                    this.RaisePropertyChanged("PermanentLocationSameAsMailLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PincodeLocality {
            get {
                return this.PincodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PincodeLocalityField, value) != true)) {
                    this.PincodeLocalityField = value;
                    this.RaisePropertyChanged("PincodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorityClient {
            get {
                return this.PriorityClientField;
            }
            set {
                if ((this.PriorityClientField.Equals(value) != true)) {
                    this.PriorityClientField = value;
                    this.RaisePropertyChanged("PriorityClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationOffice {
            get {
                return this.RegistrationOfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationOfficeField, value) != true)) {
                    this.RegistrationOfficeField = value;
                    this.RaisePropertyChanged("RegistrationOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalutationOthers {
            get {
                return this.SalutationOthersField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationOthersField, value) != true)) {
                    this.SalutationOthersField = value;
                    this.RaisePropertyChanged("SalutationOthers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTaxRegNo {
            get {
                return this.ServiceTaxRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTaxRegNoField, value) != true)) {
                    this.ServiceTaxRegNoField = value;
                    this.RaisePropertyChanged("ServiceTaxRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceOfFund {
            get {
                return this.SourceOfFundField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceOfFundField, value) != true)) {
                    this.SourceOfFundField = value;
                    this.RaisePropertyChanged("SourceOfFund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TanNo {
            get {
                return this.TanNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TanNoField, value) != true)) {
                    this.TanNoField = value;
                    this.RaisePropertyChanged("TanNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeOfCompany {
            get {
                return this.TypeOfCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeOfCompanyField, value) != true)) {
                    this.TypeOfCompanyField = value;
                    this.RaisePropertyChanged("TypeOfCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerfiedCRN {
            get {
                return this.VerfiedCRNField;
            }
            set {
                if ((object.ReferenceEquals(this.VerfiedCRNField, value) != true)) {
                    this.VerfiedCRNField = value;
                    this.RaisePropertyChanged("VerfiedCRN");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppSessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Bank BankDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ContactDetails ContactDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IFSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MICRCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Location MailLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailLocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppSessionID {
            get {
                return this.AppSessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AppSessionIDField, value) != true)) {
                    this.AppSessionIDField = value;
                    this.RaisePropertyChanged("AppSessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Bank BankDetails {
            get {
                return this.BankDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.BankDetailsField, value) != true)) {
                    this.BankDetailsField = value;
                    this.RaisePropertyChanged("BankDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ContactDetails ContactDetails {
            get {
                return this.ContactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactDetailsField, value) != true)) {
                    this.ContactDetailsField = value;
                    this.RaisePropertyChanged("ContactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IFSCode {
            get {
                return this.IFSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IFSCodeField, value) != true)) {
                    this.IFSCodeField = value;
                    this.RaisePropertyChanged("IFSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MICRCode {
            get {
                return this.MICRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MICRCodeField, value) != true)) {
                    this.MICRCodeField = value;
                    this.RaisePropertyChanged("MICRCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Location MailLocation {
            get {
                return this.MailLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.MailLocationField, value) != true)) {
                    this.MailLocationField = value;
                    this.RaisePropertyChanged("MailLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailLocationCode {
            get {
                return this.MailLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MailLocationCodeField, value) != true)) {
                    this.MailLocationCodeField = value;
                    this.RaisePropertyChanged("MailLocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanNo {
            get {
                return this.PanNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PanNoField, value) != true)) {
                    this.PanNoField = value;
                    this.RaisePropertyChanged("PanNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bank", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Bank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountHolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccounttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequeDispatchLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IFSCCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MICRCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolderName {
            get {
                return this.AccountHolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderNameField, value) != true)) {
                    this.AccountHolderNameField = value;
                    this.RaisePropertyChanged("AccountHolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccNumber {
            get {
                return this.BankAccNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccNumberField, value) != true)) {
                    this.BankAccNumberField = value;
                    this.RaisePropertyChanged("BankAccNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccounttype {
            get {
                return this.BankAccounttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccounttypeField, value) != true)) {
                    this.BankAccounttypeField = value;
                    this.RaisePropertyChanged("BankAccounttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchCode {
            get {
                return this.BankBranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchCodeField, value) != true)) {
                    this.BankBranchCodeField = value;
                    this.RaisePropertyChanged("BankBranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchName {
            get {
                return this.BankBranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchNameField, value) != true)) {
                    this.BankBranchNameField = value;
                    this.RaisePropertyChanged("BankBranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankCode {
            get {
                return this.BankCodeField;
            }
            set {
                if ((this.BankCodeField.Equals(value) != true)) {
                    this.BankCodeField = value;
                    this.RaisePropertyChanged("BankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChequeDispatchLocation {
            get {
                return this.ChequeDispatchLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeDispatchLocationField, value) != true)) {
                    this.ChequeDispatchLocationField = value;
                    this.RaisePropertyChanged("ChequeDispatchLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IFSCCode {
            get {
                return this.IFSCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IFSCCodeField, value) != true)) {
                    this.IFSCCodeField = value;
                    this.RaisePropertyChanged("IFSCCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MICRCode {
            get {
                return this.MICRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MICRCodeField, value) != true)) {
                    this.MICRCodeField = value;
                    this.RaisePropertyChanged("MICRCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDetails", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class ContactDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateDNDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateMobileISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateMobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateMobileNoCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoNotCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoNotCallAlternateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Extension1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDoNotCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDoNotCallAlternateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandLineISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandLineNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandLineSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileDNDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfCommunicationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateDND {
            get {
                return this.AlternateDNDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateDNDField, value) != true)) {
                    this.AlternateDNDField = value;
                    this.RaisePropertyChanged("AlternateDND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateISD {
            get {
                return this.AlternateISDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateISDField, value) != true)) {
                    this.AlternateISDField = value;
                    this.RaisePropertyChanged("AlternateISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateMobileISD {
            get {
                return this.AlternateMobileISDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateMobileISDField, value) != true)) {
                    this.AlternateMobileISDField = value;
                    this.RaisePropertyChanged("AlternateMobileISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateMobileNo {
            get {
                return this.AlternateMobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateMobileNoField, value) != true)) {
                    this.AlternateMobileNoField = value;
                    this.RaisePropertyChanged("AlternateMobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateMobileNoCountryCode {
            get {
                return this.AlternateMobileNoCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateMobileNoCountryCodeField, value) != true)) {
                    this.AlternateMobileNoCountryCodeField = value;
                    this.RaisePropertyChanged("AlternateMobileNoCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateNo {
            get {
                return this.AlternateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateNoField, value) != true)) {
                    this.AlternateNoField = value;
                    this.RaisePropertyChanged("AlternateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateSTD {
            get {
                return this.AlternateSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateSTDField, value) != true)) {
                    this.AlternateSTDField = value;
                    this.RaisePropertyChanged("AlternateSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoNotCall {
            get {
                return this.DoNotCallField;
            }
            set {
                if ((this.DoNotCallField.Equals(value) != true)) {
                    this.DoNotCallField = value;
                    this.RaisePropertyChanged("DoNotCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoNotCallAlternate {
            get {
                return this.DoNotCallAlternateField;
            }
            set {
                if ((this.DoNotCallAlternateField.Equals(value) != true)) {
                    this.DoNotCallAlternateField = value;
                    this.RaisePropertyChanged("DoNotCallAlternate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension1 {
            get {
                return this.Extension1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extension1Field, value) != true)) {
                    this.Extension1Field = value;
                    this.RaisePropertyChanged("Extension1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxISD {
            get {
                return this.FaxISDField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxISDField, value) != true)) {
                    this.FaxISDField = value;
                    this.RaisePropertyChanged("FaxISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNo {
            get {
                return this.FaxNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNoField, value) != true)) {
                    this.FaxNoField = value;
                    this.RaisePropertyChanged("FaxNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxSTD {
            get {
                return this.FaxSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxSTDField, value) != true)) {
                    this.FaxSTDField = value;
                    this.RaisePropertyChanged("FaxSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoNotCall {
            get {
                return this.IsDoNotCallField;
            }
            set {
                if ((this.IsDoNotCallField.Equals(value) != true)) {
                    this.IsDoNotCallField = value;
                    this.RaisePropertyChanged("IsDoNotCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoNotCallAlternate {
            get {
                return this.IsDoNotCallAlternateField;
            }
            set {
                if ((this.IsDoNotCallAlternateField.Equals(value) != true)) {
                    this.IsDoNotCallAlternateField = value;
                    this.RaisePropertyChanged("IsDoNotCallAlternate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmail {
            get {
                return this.IsEmailField;
            }
            set {
                if ((this.IsEmailField.Equals(value) != true)) {
                    this.IsEmailField = value;
                    this.RaisePropertyChanged("IsEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSMS {
            get {
                return this.IsSMSField;
            }
            set {
                if ((this.IsSMSField.Equals(value) != true)) {
                    this.IsSMSField = value;
                    this.RaisePropertyChanged("IsSMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandLineISD {
            get {
                return this.LandLineISDField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineISDField, value) != true)) {
                    this.LandLineISDField = value;
                    this.RaisePropertyChanged("LandLineISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandLineNo {
            get {
                return this.LandLineNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineNoField, value) != true)) {
                    this.LandLineNoField = value;
                    this.RaisePropertyChanged("LandLineNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandLineSTD {
            get {
                return this.LandLineSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineSTDField, value) != true)) {
                    this.LandLineSTDField = value;
                    this.RaisePropertyChanged("LandLineSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileDND {
            get {
                return this.MobileDNDField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileDNDField, value) != true)) {
                    this.MobileDNDField = value;
                    this.RaisePropertyChanged("MobileDND");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileISD {
            get {
                return this.MobileISDField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileISDField, value) != true)) {
                    this.MobileISDField = value;
                    this.RaisePropertyChanged("MobileISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfCommunication {
            get {
                return this.ModeOfCommunicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfCommunicationField, value) != true)) {
                    this.ModeOfCommunicationField = value;
                    this.RaisePropertyChanged("ModeOfCommunication");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Location : PrjPASS.GCGenericService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApartmentName {
            get {
                return this.ApartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentNameField, value) != true)) {
                    this.ApartmentNameField = value;
                    this.RaisePropertyChanged("ApartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQZone {
            get {
                return this.EQZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneField, value) != true)) {
                    this.EQZoneField = value;
                    this.RaisePropertyChanged("EQZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverNoteEntry", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class CoverNoteEntry : PrjPASS.GCGenericService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AWBNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocatedBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookReceiptStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancelledRsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckAllOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteBookCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNotePODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteSequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernoteBookStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CovernotePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentStartingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscrepencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscrepencyRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndBookNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndLeafNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GridCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsertDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsertTransIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuedToAgentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuedtoBrnachNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] ListofBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyTransIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoOfBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoofLeafsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PSMIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedByBrnachNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetReceiveStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartBookNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartLeafNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartLeafNoPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YNLocationAssignCompleteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AWBNo {
            get {
                return this.AWBNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AWBNoField, value) != true)) {
                    this.AWBNoField = value;
                    this.RaisePropertyChanged("AWBNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentId {
            get {
                return this.AgentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentIdField, value) != true)) {
                    this.AgentIdField = value;
                    this.RaisePropertyChanged("AgentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocatedBuffer {
            get {
                return this.AllocatedBufferField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocatedBufferField, value) != true)) {
                    this.AllocatedBufferField = value;
                    this.RaisePropertyChanged("AllocatedBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Basis {
            get {
                return this.BasisField;
            }
            set {
                if ((object.ReferenceEquals(this.BasisField, value) != true)) {
                    this.BasisField = value;
                    this.RaisePropertyChanged("Basis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookReceiptStatus {
            get {
                return this.BookReceiptStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BookReceiptStatusField, value) != true)) {
                    this.BookReceiptStatusField = value;
                    this.RaisePropertyChanged("BookReceiptStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookType {
            get {
                return this.BookTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookTypeField, value) != true)) {
                    this.BookTypeField = value;
                    this.RaisePropertyChanged("BookType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancelledRsn {
            get {
                return this.CancelledRsnField;
            }
            set {
                if ((object.ReferenceEquals(this.CancelledRsnField, value) != true)) {
                    this.CancelledRsnField = value;
                    this.RaisePropertyChanged("CancelledRsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckAllOption {
            get {
                return this.CheckAllOptionField;
            }
            set {
                if ((this.CheckAllOptionField.Equals(value) != true)) {
                    this.CheckAllOptionField = value;
                    this.RaisePropertyChanged("CheckAllOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteBookCode {
            get {
                return this.CoverNoteBookCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteBookCodeField, value) != true)) {
                    this.CoverNoteBookCodeField = value;
                    this.RaisePropertyChanged("CoverNoteBookCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNotePOD {
            get {
                return this.CoverNotePODField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNotePODField, value) != true)) {
                    this.CoverNotePODField = value;
                    this.RaisePropertyChanged("CoverNotePOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteSequence {
            get {
                return this.CoverNoteSequenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteSequenceField, value) != true)) {
                    this.CoverNoteSequenceField = value;
                    this.RaisePropertyChanged("CoverNoteSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernoteBookStatus {
            get {
                return this.CovernoteBookStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernoteBookStatusField, value) != true)) {
                    this.CovernoteBookStatusField = value;
                    this.RaisePropertyChanged("CovernoteBookStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CovernotePrefix {
            get {
                return this.CovernotePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.CovernotePrefixField, value) != true)) {
                    this.CovernotePrefixField = value;
                    this.RaisePropertyChanged("CovernotePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentStartingNo {
            get {
                return this.CurrentStartingNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStartingNoField, value) != true)) {
                    this.CurrentStartingNoField = value;
                    this.RaisePropertyChanged("CurrentStartingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealId {
            get {
                return this.DealIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DealIdField, value) != true)) {
                    this.DealIdField = value;
                    this.RaisePropertyChanged("DealId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscrepencyId {
            get {
                return this.DiscrepencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscrepencyIdField, value) != true)) {
                    this.DiscrepencyIdField = value;
                    this.RaisePropertyChanged("DiscrepencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscrepencyRemarks {
            get {
                return this.DiscrepencyRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscrepencyRemarksField, value) != true)) {
                    this.DiscrepencyRemarksField = value;
                    this.RaisePropertyChanged("DiscrepencyRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocType {
            get {
                return this.DocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeField, value) != true)) {
                    this.DocTypeField = value;
                    this.RaisePropertyChanged("DocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndBookNo {
            get {
                return this.EndBookNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EndBookNoField, value) != true)) {
                    this.EndBookNoField = value;
                    this.RaisePropertyChanged("EndBookNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndLeafNo {
            get {
                return this.EndLeafNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EndLeafNoField, value) != true)) {
                    this.EndLeafNoField = value;
                    this.RaisePropertyChanged("EndLeafNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryDateField, value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionText {
            get {
                return this.ExceptionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTextField, value) != true)) {
                    this.ExceptionTextField = value;
                    this.RaisePropertyChanged("ExceptionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUserId {
            get {
                return this.FieldUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUserIdField, value) != true)) {
                    this.FieldUserIdField = value;
                    this.RaisePropertyChanged("FieldUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUserName {
            get {
                return this.FieldUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUserNameField, value) != true)) {
                    this.FieldUserNameField = value;
                    this.RaisePropertyChanged("FieldUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirDate {
            get {
                return this.FirDateField;
            }
            set {
                if ((object.ReferenceEquals(this.FirDateField, value) != true)) {
                    this.FirDateField = value;
                    this.RaisePropertyChanged("FirDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirLocation {
            get {
                return this.FirLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FirLocationField, value) != true)) {
                    this.FirLocationField = value;
                    this.RaisePropertyChanged("FirLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirNo {
            get {
                return this.FirNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FirNoField, value) != true)) {
                    this.FirNoField = value;
                    this.RaisePropertyChanged("FirNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GridCount {
            get {
                return this.GridCountField;
            }
            set {
                if ((this.GridCountField.Equals(value) != true)) {
                    this.GridCountField = value;
                    this.RaisePropertyChanged("GridCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsertDate {
            get {
                return this.InsertDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InsertDateField, value) != true)) {
                    this.InsertDateField = value;
                    this.RaisePropertyChanged("InsertDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsertTransId {
            get {
                return this.InsertTransIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InsertTransIdField, value) != true)) {
                    this.InsertTransIdField = value;
                    this.RaisePropertyChanged("InsertTransId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuedToAgentNo {
            get {
                return this.IssuedToAgentNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedToAgentNoField, value) != true)) {
                    this.IssuedToAgentNoField = value;
                    this.RaisePropertyChanged("IssuedToAgentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuedtoBrnachNo {
            get {
                return this.IssuedtoBrnachNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedtoBrnachNoField, value) != true)) {
                    this.IssuedtoBrnachNoField = value;
                    this.RaisePropertyChanged("IssuedtoBrnachNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] ListofBusiness {
            get {
                return this.ListofBusinessField;
            }
            set {
                if ((object.ReferenceEquals(this.ListofBusinessField, value) != true)) {
                    this.ListofBusinessField = value;
                    this.RaisePropertyChanged("ListofBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyDate {
            get {
                return this.ModifyDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyDateField, value) != true)) {
                    this.ModifyDateField = value;
                    this.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyTransId {
            get {
                return this.ModifyTransIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyTransIdField, value) != true)) {
                    this.ModifyTransIdField = value;
                    this.RaisePropertyChanged("ModifyTransId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoOfBooks {
            get {
                return this.NoOfBooksField;
            }
            set {
                if ((object.ReferenceEquals(this.NoOfBooksField, value) != true)) {
                    this.NoOfBooksField = value;
                    this.RaisePropertyChanged("NoOfBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoofLeafs {
            get {
                return this.NoofLeafsField;
            }
            set {
                if ((object.ReferenceEquals(this.NoofLeafsField, value) != true)) {
                    this.NoofLeafsField = value;
                    this.RaisePropertyChanged("NoofLeafs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Office {
            get {
                return this.OfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeField, value) != true)) {
                    this.OfficeField = value;
                    this.RaisePropertyChanged("Office");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PSMId {
            get {
                return this.PSMIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PSMIdField, value) != true)) {
                    this.PSMIdField = value;
                    this.RaisePropertyChanged("PSMId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNo {
            get {
                return this.PolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoField, value) != true)) {
                    this.PolicyNoField = value;
                    this.RaisePropertyChanged("PolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevStatus {
            get {
                return this.PrevStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevStatusField, value) != true)) {
                    this.PrevStatusField = value;
                    this.RaisePropertyChanged("PrevStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedByBrnachNo {
            get {
                return this.ReceivedByBrnachNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedByBrnachNoField, value) != true)) {
                    this.ReceivedByBrnachNoField = value;
                    this.RaisePropertyChanged("ReceivedByBrnachNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetReceiveStatus {
            get {
                return this.RetReceiveStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RetReceiveStatusField, value) != true)) {
                    this.RetReceiveStatusField = value;
                    this.RaisePropertyChanged("RetReceiveStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartBookNo {
            get {
                return this.StartBookNoField;
            }
            set {
                if ((object.ReferenceEquals(this.StartBookNoField, value) != true)) {
                    this.StartBookNoField = value;
                    this.RaisePropertyChanged("StartBookNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartLeafNo {
            get {
                return this.StartLeafNoField;
            }
            set {
                if ((object.ReferenceEquals(this.StartLeafNoField, value) != true)) {
                    this.StartLeafNoField = value;
                    this.RaisePropertyChanged("StartLeafNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartLeafNoPrefix {
            get {
                return this.StartLeafNoPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.StartLeafNoPrefixField, value) != true)) {
                    this.StartLeafNoPrefixField = value;
                    this.RaisePropertyChanged("StartLeafNoPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessText {
            get {
                return this.SuccessTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessTextField, value) != true)) {
                    this.SuccessTextField = value;
                    this.RaisePropertyChanged("SuccessText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedStatus {
            get {
                return this.UpdatedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedStatusField, value) != true)) {
                    this.UpdatedStatusField = value;
                    this.RaisePropertyChanged("UpdatedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YNLocationAssignComplete {
            get {
                return this.YNLocationAssignCompleteField;
            }
            set {
                if ((object.ReferenceEquals(this.YNLocationAssignCompleteField, value) != true)) {
                    this.YNLocationAssignCompleteField = value;
                    this.RaisePropertyChanged("YNLocationAssignComplete");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Intermediary", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Intermediary : PrjPASS.GCGenericService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActualStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffiliationFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlterNateEmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateIntermediaryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateIntermediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BulkPrint_FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessPartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CDMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancellationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckAcceptanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckAllLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequeDispatchedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequedisbursementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommissionRemunerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonISdNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonSTdNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonTelephoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevelopmentOfficerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevelopmentOfficerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] EducationalQualificationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencyContactPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GSTNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISLocationWiseCDMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCategoryChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLicenseRqdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSuBproducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuingCompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.License LicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListOfLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Mail_FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeLocation1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeLocation1NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldIntermediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldLicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPanNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldServiceTaxRegistrationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PanAppliedForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIntermediaryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIntermediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyMobileISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyMobilenoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonForSuspentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonForSuspentionothersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevocationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMSEmailModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMS_FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SPNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STD2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTaxRegistrationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusEfectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuBTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubProducerDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTransfercategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuspensionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneNo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TieUpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TieUpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TieUpTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VLEIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActualStartDate {
            get {
                return this.ActualStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualStartDateField, value) != true)) {
                    this.ActualStartDateField = value;
                    this.RaisePropertyChanged("ActualStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffiliationFlag {
            get {
                return this.AffiliationFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.AffiliationFlagField, value) != true)) {
                    this.AffiliationFlagField = value;
                    this.RaisePropertyChanged("AffiliationFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlterNateEmailId {
            get {
                return this.AlterNateEmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlterNateEmailIdField, value) != true)) {
                    this.AlterNateEmailIdField = value;
                    this.RaisePropertyChanged("AlterNateEmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalStatus {
            get {
                return this.ApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalStatusField, value) != true)) {
                    this.ApprovalStatusField = value;
                    this.RaisePropertyChanged("ApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociateIntermediaryId {
            get {
                return this.AssociateIntermediaryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateIntermediaryIdField, value) != true)) {
                    this.AssociateIntermediaryIdField = value;
                    this.RaisePropertyChanged("AssociateIntermediaryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociateIntermediaryName {
            get {
                return this.AssociateIntermediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateIntermediaryNameField, value) != true)) {
                    this.AssociateIntermediaryNameField = value;
                    this.RaisePropertyChanged("AssociateIntermediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BulkPrint_Flag {
            get {
                return this.BulkPrint_FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.BulkPrint_FlagField, value) != true)) {
                    this.BulkPrint_FlagField = value;
                    this.RaisePropertyChanged("BulkPrint_Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessPartner {
            get {
                return this.BusinessPartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessPartnerField, value) != true)) {
                    this.BusinessPartnerField = value;
                    this.RaisePropertyChanged("BusinessPartner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CDM {
            get {
                return this.CDMField;
            }
            set {
                if ((object.ReferenceEquals(this.CDMField, value) != true)) {
                    this.CDMField = value;
                    this.RaisePropertyChanged("CDM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancellationDate {
            get {
                return this.CancellationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CancellationDateField, value) != true)) {
                    this.CancellationDateField = value;
                    this.RaisePropertyChanged("CancellationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caste {
            get {
                return this.CasteField;
            }
            set {
                if ((object.ReferenceEquals(this.CasteField, value) != true)) {
                    this.CasteField = value;
                    this.RaisePropertyChanged("Caste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((this.CategoryCodeField.Equals(value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryDesc {
            get {
                return this.CategoryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryDescField, value) != true)) {
                    this.CategoryDescField = value;
                    this.RaisePropertyChanged("CategoryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelDesc {
            get {
                return this.ChannelDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelDescField, value) != true)) {
                    this.ChannelDescField = value;
                    this.RaisePropertyChanged("ChannelDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelType {
            get {
                return this.ChannelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelTypeField, value) != true)) {
                    this.ChannelTypeField = value;
                    this.RaisePropertyChanged("ChannelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckAcceptance {
            get {
                return this.CheckAcceptanceField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckAcceptanceField, value) != true)) {
                    this.CheckAcceptanceField = value;
                    this.RaisePropertyChanged("CheckAcceptance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckAllLocation {
            get {
                return this.CheckAllLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckAllLocationField, value) != true)) {
                    this.CheckAllLocationField = value;
                    this.RaisePropertyChanged("CheckAllLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChequeDispatchedTo {
            get {
                return this.ChequeDispatchedToField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeDispatchedToField, value) != true)) {
                    this.ChequeDispatchedToField = value;
                    this.RaisePropertyChanged("ChequeDispatchedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chequedisbursement {
            get {
                return this.ChequedisbursementField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequedisbursementField, value) != true)) {
                    this.ChequedisbursementField = value;
                    this.RaisePropertyChanged("Chequedisbursement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommissionRemunerationType {
            get {
                return this.CommissionRemunerationTypeField;
            }
            set {
                if ((this.CommissionRemunerationTypeField.Equals(value) != true)) {
                    this.CommissionRemunerationTypeField = value;
                    this.RaisePropertyChanged("CommissionRemunerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPersonISdNumber {
            get {
                return this.ContactPersonISdNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonISdNumberField, value) != true)) {
                    this.ContactPersonISdNumberField = value;
                    this.RaisePropertyChanged("ContactPersonISdNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPersonSTdNumber {
            get {
                return this.ContactPersonSTdNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonSTdNumberField, value) != true)) {
                    this.ContactPersonSTdNumberField = value;
                    this.RaisePropertyChanged("ContactPersonSTdNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPersonTelephoneNumber {
            get {
                return this.ContactPersonTelephoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonTelephoneNumberField, value) != true)) {
                    this.ContactPersonTelephoneNumberField = value;
                    this.RaisePropertyChanged("ContactPersonTelephoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerCode {
            get {
                return this.DealerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerCodeField, value) != true)) {
                    this.DealerCodeField = value;
                    this.RaisePropertyChanged("DealerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerName {
            get {
                return this.DealerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerNameField, value) != true)) {
                    this.DealerNameField = value;
                    this.RaisePropertyChanged("DealerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevelopmentOfficerCode {
            get {
                return this.DevelopmentOfficerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DevelopmentOfficerCodeField, value) != true)) {
                    this.DevelopmentOfficerCodeField = value;
                    this.RaisePropertyChanged("DevelopmentOfficerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevelopmentOfficerName {
            get {
                return this.DevelopmentOfficerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevelopmentOfficerNameField, value) != true)) {
                    this.DevelopmentOfficerNameField = value;
                    this.RaisePropertyChanged("DevelopmentOfficerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] EducationalQualificationList {
            get {
                return this.EducationalQualificationListField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationalQualificationListField, value) != true)) {
                    this.EducationalQualificationListField = value;
                    this.RaisePropertyChanged("EducationalQualificationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencyContactPersonName {
            get {
                return this.EmergencyContactPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencyContactPersonNameField, value) != true)) {
                    this.EmergencyContactPersonNameField = value;
                    this.RaisePropertyChanged("EmergencyContactPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GSTNumber {
            get {
                return this.GSTNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GSTNumberField, value) != true)) {
                    this.GSTNumberField = value;
                    this.RaisePropertyChanged("GSTNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISD2 {
            get {
                return this.ISD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ISD2Field, value) != true)) {
                    this.ISD2Field = value;
                    this.RaisePropertyChanged("ISD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISLocationWiseCDM {
            get {
                return this.ISLocationWiseCDMField;
            }
            set {
                if ((object.ReferenceEquals(this.ISLocationWiseCDMField, value) != true)) {
                    this.ISLocationWiseCDMField = value;
                    this.RaisePropertyChanged("ISLocationWiseCDM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryStatus {
            get {
                return this.IntermediaryStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryStatusField, value) != true)) {
                    this.IntermediaryStatusField = value;
                    this.RaisePropertyChanged("IntermediaryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategoryChanged {
            get {
                return this.IsCategoryChangedField;
            }
            set {
                if ((this.IsCategoryChangedField.Equals(value) != true)) {
                    this.IsCategoryChangedField = value;
                    this.RaisePropertyChanged("IsCategoryChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLicenseRqd {
            get {
                return this.IsLicenseRqdField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLicenseRqdField, value) != true)) {
                    this.IsLicenseRqdField = value;
                    this.RaisePropertyChanged("IsLicenseRqd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSuBproducer {
            get {
                return this.IsSuBproducerField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSuBproducerField, value) != true)) {
                    this.IsSuBproducerField = value;
                    this.RaisePropertyChanged("IsSuBproducer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuingCompanyCode {
            get {
                return this.IssuingCompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuingCompanyCodeField, value) != true)) {
                    this.IssuingCompanyCodeField = value;
                    this.RaisePropertyChanged("IssuingCompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOB {
            get {
                return this.LOBField;
            }
            set {
                if ((object.ReferenceEquals(this.LOBField, value) != true)) {
                    this.LOBField = value;
                    this.RaisePropertyChanged("LOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.License License {
            get {
                return this.LicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseField, value) != true)) {
                    this.LicenseField = value;
                    this.RaisePropertyChanged("License");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNo {
            get {
                return this.LicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNoField, value) != true)) {
                    this.LicenseNoField = value;
                    this.RaisePropertyChanged("LicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListOfLocation {
            get {
                return this.ListOfLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfLocationField, value) != true)) {
                    this.ListOfLocationField = value;
                    this.RaisePropertyChanged("ListOfLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail_Flag {
            get {
                return this.Mail_FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.Mail_FlagField, value) != true)) {
                    this.Mail_FlagField = value;
                    this.RaisePropertyChanged("Mail_Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeLocation1 {
            get {
                return this.OfficeLocation1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeLocation1Field, value) != true)) {
                    this.OfficeLocation1Field = value;
                    this.RaisePropertyChanged("OfficeLocation1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeLocation1Name {
            get {
                return this.OfficeLocation1NameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeLocation1NameField, value) != true)) {
                    this.OfficeLocation1NameField = value;
                    this.RaisePropertyChanged("OfficeLocation1Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCategoryCode {
            get {
                return this.OldCategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCategoryCodeField, value) != true)) {
                    this.OldCategoryCodeField = value;
                    this.RaisePropertyChanged("OldCategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldIntermediaryName {
            get {
                return this.OldIntermediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OldIntermediaryNameField, value) != true)) {
                    this.OldIntermediaryNameField = value;
                    this.RaisePropertyChanged("OldIntermediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldLicenseNo {
            get {
                return this.OldLicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OldLicenseNoField, value) != true)) {
                    this.OldLicenseNoField = value;
                    this.RaisePropertyChanged("OldLicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPanNO {
            get {
                return this.OldPanNOField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPanNOField, value) != true)) {
                    this.OldPanNOField = value;
                    this.RaisePropertyChanged("OldPanNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldServiceTaxRegistrationNo {
            get {
                return this.OldServiceTaxRegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OldServiceTaxRegistrationNoField, value) != true)) {
                    this.OldServiceTaxRegistrationNoField = value;
                    this.RaisePropertyChanged("OldServiceTaxRegistrationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanAppliedFor {
            get {
                return this.PanAppliedForField;
            }
            set {
                if ((object.ReferenceEquals(this.PanAppliedForField, value) != true)) {
                    this.PanAppliedForField = value;
                    this.RaisePropertyChanged("PanAppliedFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentIntermediaryID {
            get {
                return this.ParentIntermediaryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIntermediaryIDField, value) != true)) {
                    this.ParentIntermediaryIDField = value;
                    this.RaisePropertyChanged("ParentIntermediaryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentIntermediaryName {
            get {
                return this.ParentIntermediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIntermediaryNameField, value) != true)) {
                    this.ParentIntermediaryNameField = value;
                    this.RaisePropertyChanged("ParentIntermediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMode {
            get {
                return this.PaymentModeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentModeField, value) != true)) {
                    this.PaymentModeField = value;
                    this.RaisePropertyChanged("PaymentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyMobileISD {
            get {
                return this.PolicyMobileISDField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyMobileISDField, value) != true)) {
                    this.PolicyMobileISDField = value;
                    this.RaisePropertyChanged("PolicyMobileISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyMobileno {
            get {
                return this.PolicyMobilenoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyMobilenoField, value) != true)) {
                    this.PolicyMobilenoField = value;
                    this.RaisePropertyChanged("PolicyMobileno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerProfile {
            get {
                return this.ProducerProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerProfileField, value) != true)) {
                    this.ProducerProfileField = value;
                    this.RaisePropertyChanged("ProducerProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileDesc {
            get {
                return this.ProfileDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileDescField, value) != true)) {
                    this.ProfileDescField = value;
                    this.RaisePropertyChanged("ProfileDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonForSuspention {
            get {
                return this.ReasonForSuspentionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonForSuspentionField, value) != true)) {
                    this.ReasonForSuspentionField = value;
                    this.RaisePropertyChanged("ReasonForSuspention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonForSuspentionothers {
            get {
                return this.ReasonForSuspentionothersField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonForSuspentionothersField, value) != true)) {
                    this.ReasonForSuspentionothersField = value;
                    this.RaisePropertyChanged("ReasonForSuspentionothers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNo {
            get {
                return this.RegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNoField, value) != true)) {
                    this.RegistrationNoField = value;
                    this.RaisePropertyChanged("RegistrationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevocationDate {
            get {
                return this.RevocationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RevocationDateField, value) != true)) {
                    this.RevocationDateField = value;
                    this.RaisePropertyChanged("RevocationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMSEmailMode {
            get {
                return this.SMSEmailModeField;
            }
            set {
                if ((object.ReferenceEquals(this.SMSEmailModeField, value) != true)) {
                    this.SMSEmailModeField = value;
                    this.RaisePropertyChanged("SMSEmailMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMS_Flag {
            get {
                return this.SMS_FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.SMS_FlagField, value) != true)) {
                    this.SMS_FlagField = value;
                    this.RaisePropertyChanged("SMS_Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPCode {
            get {
                return this.SPCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SPCodeField, value) != true)) {
                    this.SPCodeField = value;
                    this.RaisePropertyChanged("SPCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SPName {
            get {
                return this.SPNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SPNameField, value) != true)) {
                    this.SPNameField = value;
                    this.RaisePropertyChanged("SPName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STD2 {
            get {
                return this.STD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.STD2Field, value) != true)) {
                    this.STD2Field = value;
                    this.RaisePropertyChanged("STD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTaxRegistrationNo {
            get {
                return this.ServiceTaxRegistrationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTaxRegistrationNoField, value) != true)) {
                    this.ServiceTaxRegistrationNoField = value;
                    this.RaisePropertyChanged("ServiceTaxRegistrationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusEfectiveDate {
            get {
                return this.StatusEfectiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusEfectiveDateField, value) != true)) {
                    this.StatusEfectiveDateField = value;
                    this.RaisePropertyChanged("StatusEfectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuBType {
            get {
                return this.SuBTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuBTypeField, value) != true)) {
                    this.SuBTypeField = value;
                    this.RaisePropertyChanged("SuBType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubProducerDate {
            get {
                return this.SubProducerDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SubProducerDateField, value) != true)) {
                    this.SubProducerDateField = value;
                    this.RaisePropertyChanged("SubProducerDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubTransfercategory {
            get {
                return this.SubTransfercategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTransfercategoryField, value) != true)) {
                    this.SubTransfercategoryField = value;
                    this.RaisePropertyChanged("SubTransfercategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuspensionDate {
            get {
                return this.SuspensionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SuspensionDateField, value) != true)) {
                    this.SuspensionDateField = value;
                    this.RaisePropertyChanged("SuspensionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneNo2 {
            get {
                return this.TelephoneNo2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneNo2Field, value) != true)) {
                    this.TelephoneNo2Field = value;
                    this.RaisePropertyChanged("TelephoneNo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TieUpCode {
            get {
                return this.TieUpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TieUpCodeField, value) != true)) {
                    this.TieUpCodeField = value;
                    this.RaisePropertyChanged("TieUpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TieUpName {
            get {
                return this.TieUpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TieUpNameField, value) != true)) {
                    this.TieUpNameField = value;
                    this.RaisePropertyChanged("TieUpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TieUpType {
            get {
                return this.TieUpTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TieUpTypeField, value) != true)) {
                    this.TieUpTypeField = value;
                    this.RaisePropertyChanged("TieUpType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleDesc {
            get {
                return this.TitleDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleDescField, value) != true)) {
                    this.TitleDescField = value;
                    this.RaisePropertyChanged("TitleDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionTime {
            get {
                return this.TransactionTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTimeField, value) != true)) {
                    this.TransactionTimeField = value;
                    this.RaisePropertyChanged("TransactionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UIDNo {
            get {
                return this.UIDNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDNoField, value) != true)) {
                    this.UIDNoField = value;
                    this.RaisePropertyChanged("UIDNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VLEId {
            get {
                return this.VLEIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VLEIdField, value) != true)) {
                    this.VLEIdField = value;
                    this.RaisePropertyChanged("VLEId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dealer", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Dealer : PrjPASS.GCGenericService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerCode {
            get {
                return this.DealerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerCodeField, value) != true)) {
                    this.DealerCodeField = value;
                    this.RaisePropertyChanged("DealerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerName {
            get {
                return this.DealerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerNameField, value) != true)) {
                    this.DealerNameField = value;
                    this.RaisePropertyChanged("DealerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerType {
            get {
                return this.DealerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerTypeField, value) != true)) {
                    this.DealerTypeField = value;
                    this.RaisePropertyChanged("DealerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerCode {
            get {
                return this.ProducerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerCodeField, value) != true)) {
                    this.ProducerCodeField = value;
                    this.RaisePropertyChanged("ProducerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerName {
            get {
                return this.ProducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerNameField, value) != true)) {
                    this.ProducerNameField = value;
                    this.RaisePropertyChanged("ProducerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDatee {
            get {
                return this.StartDateeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateeField, value) != true)) {
                    this.StartDateeField = value;
                    this.RaisePropertyChanged("StartDatee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Employee : PrjPASS.GCGenericService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CanHaveChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivisionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivisionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeOldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalEmployeeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeExtensionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportingManagerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportingManagerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubVerticalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubVerticalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerticalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerticalNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentDate {
            get {
                return this.AppointmentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentDateField, value) != true)) {
                    this.AppointmentDateField = value;
                    this.RaisePropertyChanged("AppointmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CanHaveChannelID {
            get {
                return this.CanHaveChannelIDField;
            }
            set {
                if ((this.CanHaveChannelIDField.Equals(value) != true)) {
                    this.CanHaveChannelIDField = value;
                    this.RaisePropertyChanged("CanHaveChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmationDateField, value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignationChanged {
            get {
                return this.DesignationChangedField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationChangedField, value) != true)) {
                    this.DesignationChangedField = value;
                    this.RaisePropertyChanged("DesignationChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivisionCode {
            get {
                return this.DivisionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionCodeField, value) != true)) {
                    this.DivisionCodeField = value;
                    this.RaisePropertyChanged("DivisionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivisionName {
            get {
                return this.DivisionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionNameField, value) != true)) {
                    this.DivisionNameField = value;
                    this.RaisePropertyChanged("DivisionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeDesignation {
            get {
                return this.EmployeeDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeDesignationField, value) != true)) {
                    this.EmployeeDesignationField = value;
                    this.RaisePropertyChanged("EmployeeDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeOldName {
            get {
                return this.EmployeeOldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeOldNameField, value) != true)) {
                    this.EmployeeOldNameField = value;
                    this.RaisePropertyChanged("EmployeeOldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeType {
            get {
                return this.EmployeeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeTypeField, value) != true)) {
                    this.EmployeeTypeField = value;
                    this.RaisePropertyChanged("EmployeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalEmployeeCode {
            get {
                return this.InternalEmployeeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalEmployeeCodeField, value) != true)) {
                    this.InternalEmployeeCodeField = value;
                    this.RaisePropertyChanged("InternalEmployeeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditable {
            get {
                return this.IsEditableField;
            }
            set {
                if ((this.IsEditableField.Equals(value) != true)) {
                    this.IsEditableField = value;
                    this.RaisePropertyChanged("IsEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((this.OfficeCodeField.Equals(value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeExtensionNo {
            get {
                return this.OfficeExtensionNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeExtensionNoField, value) != true)) {
                    this.OfficeExtensionNoField = value;
                    this.RaisePropertyChanged("OfficeExtensionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeName {
            get {
                return this.OfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeNameField, value) != true)) {
                    this.OfficeNameField = value;
                    this.RaisePropertyChanged("OfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportingManagerCode {
            get {
                return this.ReportingManagerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportingManagerCodeField, value) != true)) {
                    this.ReportingManagerCodeField = value;
                    this.RaisePropertyChanged("ReportingManagerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportingManagerName {
            get {
                return this.ReportingManagerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportingManagerNameField, value) != true)) {
                    this.ReportingManagerNameField = value;
                    this.RaisePropertyChanged("ReportingManagerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubVerticalCode {
            get {
                return this.SubVerticalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubVerticalCodeField, value) != true)) {
                    this.SubVerticalCodeField = value;
                    this.RaisePropertyChanged("SubVerticalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubVerticalName {
            get {
                return this.SubVerticalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubVerticalNameField, value) != true)) {
                    this.SubVerticalNameField = value;
                    this.RaisePropertyChanged("SubVerticalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vertical {
            get {
                return this.VerticalField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticalField, value) != true)) {
                    this.VerticalField = value;
                    this.RaisePropertyChanged("Vertical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerticalCode {
            get {
                return this.VerticalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticalCodeField, value) != true)) {
                    this.VerticalCodeField = value;
                    this.RaisePropertyChanged("VerticalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerticalName {
            get {
                return this.VerticalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticalNameField, value) != true)) {
                    this.VerticalNameField = value;
                    this.RaisePropertyChanged("VerticalName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModeOfCommunication", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class ModeOfCommunication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailCanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailEndtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailRenewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailRenewNoticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSMSCanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSMSEndtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSMSNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSMSRenewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSMSRenewNoticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfOperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailCan {
            get {
                return this.IsEmailCanField;
            }
            set {
                if ((this.IsEmailCanField.Equals(value) != true)) {
                    this.IsEmailCanField = value;
                    this.RaisePropertyChanged("IsEmailCan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailEndt {
            get {
                return this.IsEmailEndtField;
            }
            set {
                if ((this.IsEmailEndtField.Equals(value) != true)) {
                    this.IsEmailEndtField = value;
                    this.RaisePropertyChanged("IsEmailEndt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailNew {
            get {
                return this.IsEmailNewField;
            }
            set {
                if ((this.IsEmailNewField.Equals(value) != true)) {
                    this.IsEmailNewField = value;
                    this.RaisePropertyChanged("IsEmailNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailRenew {
            get {
                return this.IsEmailRenewField;
            }
            set {
                if ((this.IsEmailRenewField.Equals(value) != true)) {
                    this.IsEmailRenewField = value;
                    this.RaisePropertyChanged("IsEmailRenew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailRenewNotice {
            get {
                return this.IsEmailRenewNoticeField;
            }
            set {
                if ((this.IsEmailRenewNoticeField.Equals(value) != true)) {
                    this.IsEmailRenewNoticeField = value;
                    this.RaisePropertyChanged("IsEmailRenewNotice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSMSCan {
            get {
                return this.IsSMSCanField;
            }
            set {
                if ((this.IsSMSCanField.Equals(value) != true)) {
                    this.IsSMSCanField = value;
                    this.RaisePropertyChanged("IsSMSCan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSMSEndt {
            get {
                return this.IsSMSEndtField;
            }
            set {
                if ((this.IsSMSEndtField.Equals(value) != true)) {
                    this.IsSMSEndtField = value;
                    this.RaisePropertyChanged("IsSMSEndt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSMSNew {
            get {
                return this.IsSMSNewField;
            }
            set {
                if ((this.IsSMSNewField.Equals(value) != true)) {
                    this.IsSMSNewField = value;
                    this.RaisePropertyChanged("IsSMSNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSMSRenew {
            get {
                return this.IsSMSRenewField;
            }
            set {
                if ((this.IsSMSRenewField.Equals(value) != true)) {
                    this.IsSMSRenewField = value;
                    this.RaisePropertyChanged("IsSMSRenew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSMSRenewNotice {
            get {
                return this.IsSMSRenewNoticeField;
            }
            set {
                if ((this.IsSMSRenewNoticeField.Equals(value) != true)) {
                    this.IsSMSRenewNoticeField = value;
                    this.RaisePropertyChanged("IsSMSRenewNotice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfOperation {
            get {
                return this.ModeOfOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfOperationField, value) != true)) {
                    this.ModeOfOperationField = value;
                    this.RaisePropertyChanged("ModeOfOperation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaVillageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaVillageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ContactDetails ContactDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivisionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine3 {
            get {
                return this.AddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine3Field, value) != true)) {
                    this.AddressLine3Field = value;
                    this.RaisePropertyChanged("AddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaVillageCode {
            get {
                return this.AreaVillageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageCodeField, value) != true)) {
                    this.AreaVillageCodeField = value;
                    this.RaisePropertyChanged("AreaVillageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaVillageName {
            get {
                return this.AreaVillageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageNameField, value) != true)) {
                    this.AreaVillageNameField = value;
                    this.RaisePropertyChanged("AreaVillageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CityIdField, value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ContactDetails ContactDetails {
            get {
                return this.ContactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactDetailsField, value) != true)) {
                    this.ContactDetailsField = value;
                    this.RaisePropertyChanged("ContactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Division {
            get {
                return this.DivisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionField, value) != true)) {
                    this.DivisionField = value;
                    this.RaisePropertyChanged("Division");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivisionCode {
            get {
                return this.DivisionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionCodeField, value) != true)) {
                    this.DivisionCodeField = value;
                    this.RaisePropertyChanged("DivisionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landmark {
            get {
                return this.LandmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.LandmarkField, value) != true)) {
                    this.LandmarkField = value;
                    this.RaisePropertyChanged("Landmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediatorName {
            get {
                return this.MediatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MediatorNameField, value) != true)) {
                    this.MediatorNameField = value;
                    this.RaisePropertyChanged("MediatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POBox {
            get {
                return this.POBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.POBoxField, value) != true)) {
                    this.POBoxField = value;
                    this.RaisePropertyChanged("POBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCodeLocality {
            get {
                return this.PinCodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeLocalityField, value) != true)) {
                    this.PinCodeLocalityField = value;
                    this.RaisePropertyChanged("PinCodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Office", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Office : PrjPASS.GCGenericService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllowabledaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanStockManualCNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClusterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] DesignationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GSTNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelHeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Landmark1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocHeadDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocHeadEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocHeadISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocHeadNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocHeadSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocHeadTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationHeadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodetxtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] OfficeTypeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PANNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOfficeCodetxtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionalManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TanNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneFaxNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZonePhoneNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Allowabledays {
            get {
                return this.AllowabledaysField;
            }
            set {
                if ((this.AllowabledaysField.Equals(value) != true)) {
                    this.AllowabledaysField = value;
                    this.RaisePropertyChanged("Allowabledays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessLimit {
            get {
                return this.BusinessLimitField;
            }
            set {
                if ((this.BusinessLimitField.Equals(value) != true)) {
                    this.BusinessLimitField = value;
                    this.RaisePropertyChanged("BusinessLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanStockManualCN {
            get {
                return this.CanStockManualCNField;
            }
            set {
                if ((this.CanStockManualCNField.Equals(value) != true)) {
                    this.CanStockManualCNField = value;
                    this.RaisePropertyChanged("CanStockManualCN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClusterCode {
            get {
                return this.ClusterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClusterCodeField, value) != true)) {
                    this.ClusterCodeField = value;
                    this.RaisePropertyChanged("ClusterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] DesignationList {
            get {
                return this.DesignationListField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationListField, value) != true)) {
                    this.DesignationListField = value;
                    this.RaisePropertyChanged("DesignationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalOffice {
            get {
                return this.ExternalOfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalOfficeField, value) != true)) {
                    this.ExternalOfficeField = value;
                    this.RaisePropertyChanged("ExternalOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GSTNumber {
            get {
                return this.GSTNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GSTNumberField, value) != true)) {
                    this.GSTNumberField = value;
                    this.RaisePropertyChanged("GSTNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelHeading {
            get {
                return this.LabelHeadingField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelHeadingField, value) != true)) {
                    this.LabelHeadingField = value;
                    this.RaisePropertyChanged("LabelHeading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Landmark")]
        public string Landmark1 {
            get {
                return this.Landmark1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Landmark1Field, value) != true)) {
                    this.Landmark1Field = value;
                    this.RaisePropertyChanged("Landmark1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocHeadDesignation {
            get {
                return this.LocHeadDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocHeadDesignationField, value) != true)) {
                    this.LocHeadDesignationField = value;
                    this.RaisePropertyChanged("LocHeadDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocHeadEmail {
            get {
                return this.LocHeadEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.LocHeadEmailField, value) != true)) {
                    this.LocHeadEmailField = value;
                    this.RaisePropertyChanged("LocHeadEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocHeadISD {
            get {
                return this.LocHeadISDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocHeadISDField, value) != true)) {
                    this.LocHeadISDField = value;
                    this.RaisePropertyChanged("LocHeadISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocHeadName {
            get {
                return this.LocHeadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocHeadNameField, value) != true)) {
                    this.LocHeadNameField = value;
                    this.RaisePropertyChanged("LocHeadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocHeadSTD {
            get {
                return this.LocHeadSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocHeadSTDField, value) != true)) {
                    this.LocHeadSTDField = value;
                    this.RaisePropertyChanged("LocHeadSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocHeadTelephone {
            get {
                return this.LocHeadTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.LocHeadTelephoneField, value) != true)) {
                    this.LocHeadTelephoneField = value;
                    this.RaisePropertyChanged("LocHeadTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationHeadID {
            get {
                return this.LocationHeadIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationHeadIDField, value) != true)) {
                    this.LocationHeadIDField = value;
                    this.RaisePropertyChanged("LocationHeadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCodetxt {
            get {
                return this.OfficeCodetxtField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodetxtField, value) != true)) {
                    this.OfficeCodetxtField = value;
                    this.RaisePropertyChanged("OfficeCodetxt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeLocality {
            get {
                return this.OfficeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeLocalityField, value) != true)) {
                    this.OfficeLocalityField = value;
                    this.RaisePropertyChanged("OfficeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeType {
            get {
                return this.OfficeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeTypeField, value) != true)) {
                    this.OfficeTypeField = value;
                    this.RaisePropertyChanged("OfficeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] OfficeTypeList {
            get {
                return this.OfficeTypeListField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeTypeListField, value) != true)) {
                    this.OfficeTypeListField = value;
                    this.RaisePropertyChanged("OfficeTypeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PANNO {
            get {
                return this.PANNOField;
            }
            set {
                if ((object.ReferenceEquals(this.PANNOField, value) != true)) {
                    this.PANNOField = value;
                    this.RaisePropertyChanged("PANNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOfficeCode {
            get {
                return this.ParentOfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOfficeCodeField, value) != true)) {
                    this.ParentOfficeCodeField = value;
                    this.RaisePropertyChanged("ParentOfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOfficeCodetxt {
            get {
                return this.ParentOfficeCodetxtField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOfficeCodetxtField, value) != true)) {
                    this.ParentOfficeCodetxtField = value;
                    this.RaisePropertyChanged("ParentOfficeCodetxt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOfficeName {
            get {
                return this.ParentOfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOfficeNameField, value) != true)) {
                    this.ParentOfficeNameField = value;
                    this.RaisePropertyChanged("ParentOfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionalManager {
            get {
                return this.RegionalManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionalManagerField, value) != true)) {
                    this.RegionalManagerField = value;
                    this.RaisePropertyChanged("RegionalManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TanNO {
            get {
                return this.TanNOField;
            }
            set {
                if ((object.ReferenceEquals(this.TanNOField, value) != true)) {
                    this.TanNOField = value;
                    this.RaisePropertyChanged("TanNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneAddress {
            get {
                return this.ZoneAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneAddressField, value) != true)) {
                    this.ZoneAddressField = value;
                    this.RaisePropertyChanged("ZoneAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneCode {
            get {
                return this.ZoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneCodeField, value) != true)) {
                    this.ZoneCodeField = value;
                    this.RaisePropertyChanged("ZoneCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneFaxNo {
            get {
                return this.ZoneFaxNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneFaxNoField, value) != true)) {
                    this.ZoneFaxNoField = value;
                    this.RaisePropertyChanged("ZoneFaxNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneName {
            get {
                return this.ZoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneNameField, value) != true)) {
                    this.ZoneNameField = value;
                    this.RaisePropertyChanged("ZoneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZonePhoneNo {
            get {
                return this.ZonePhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZonePhoneNoField, value) != true)) {
                    this.ZonePhoneNoField = value;
                    this.RaisePropertyChanged("ZonePhoneNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="License", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class License : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] CategoryListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalLicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseHoldersNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string oldLicenseHoldersNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string oldLicenseNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryIDField, value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] CategoryList {
            get {
                return this.CategoryListField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryListField, value) != true)) {
                    this.CategoryListField = value;
                    this.RaisePropertyChanged("CategoryList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalLicenseNo {
            get {
                return this.InternalLicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalLicenseNoField, value) != true)) {
                    this.InternalLicenseNoField = value;
                    this.RaisePropertyChanged("InternalLicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseEffectiveDate {
            get {
                return this.LicenseEffectiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseEffectiveDateField, value) != true)) {
                    this.LicenseEffectiveDateField = value;
                    this.RaisePropertyChanged("LicenseEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseExpiryDate {
            get {
                return this.LicenseExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseExpiryDateField, value) != true)) {
                    this.LicenseExpiryDateField = value;
                    this.RaisePropertyChanged("LicenseExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseHoldersName {
            get {
                return this.LicenseHoldersNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseHoldersNameField, value) != true)) {
                    this.LicenseHoldersNameField = value;
                    this.RaisePropertyChanged("LicenseHoldersName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNo {
            get {
                return this.LicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNoField, value) != true)) {
                    this.LicenseNoField = value;
                    this.RaisePropertyChanged("LicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oldLicenseHoldersName {
            get {
                return this.oldLicenseHoldersNameField;
            }
            set {
                if ((object.ReferenceEquals(this.oldLicenseHoldersNameField, value) != true)) {
                    this.oldLicenseHoldersNameField = value;
                    this.RaisePropertyChanged("oldLicenseHoldersName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oldLicenseNo {
            get {
                return this.oldLicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.oldLicenseNoField, value) != true)) {
                    this.oldLicenseNoField = value;
                    this.RaisePropertyChanged("oldLicenseNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyCustData", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class PolicyCustData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EIAInsuranceRepositoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EIANumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsEIARequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PincodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskStartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthDateField, value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EIAInsuranceRepository {
            get {
                return this.EIAInsuranceRepositoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EIAInsuranceRepositoryField, value) != true)) {
                    this.EIAInsuranceRepositoryField = value;
                    this.RaisePropertyChanged("EIAInsuranceRepository");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EIANumber {
            get {
                return this.EIANumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EIANumberField, value) != true)) {
                    this.EIANumberField = value;
                    this.RaisePropertyChanged("EIANumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsEIARequired {
            get {
                return this.IsEIARequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEIARequiredField, value) != true)) {
                    this.IsEIARequiredField = value;
                    this.RaisePropertyChanged("IsEIARequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pincode {
            get {
                return this.PincodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PincodeField, value) != true)) {
                    this.PincodeField = value;
                    this.RaisePropertyChanged("Pincode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskDate {
            get {
                return this.RiskDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskDateField, value) != true)) {
                    this.RiskDateField = value;
                    this.RaisePropertyChanged("RiskDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskStartDate {
            get {
                return this.RiskStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskStartDateField, value) != true)) {
                    this.RiskStartDateField = value;
                    this.RaisePropertyChanged("RiskStartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LovFetchInput", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial struct LovFetchInput : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColoumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeForLovFetchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContinueProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentSessionProdutIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentSessionPseudoProductIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataDllReturnValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatatypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementProposalModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobhalUserCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ILPOSPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsEntityNeedToConfigurableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOVFindIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOVFindJField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManualCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumYnCreateDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PseudoProductIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionAppUseridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionContinueProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionModeOFoperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object SessionOtherFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionQueryStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionSubModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionTransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificProposalModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubModeOperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateForLovFetchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeCatagoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewProposalForABCConfigurableField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoCoverNoteNo {
            get {
                return this.AutoCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoCoverNoteNoField, value) != true)) {
                    this.AutoCoverNoteNoField = value;
                    this.RaisePropertyChanged("AutoCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColoumName {
            get {
                return this.ColoumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColoumNameField, value) != true)) {
                    this.ColoumNameField = value;
                    this.RaisePropertyChanged("ColoumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCodeForLovFetch {
            get {
                return this.CompanyCodeForLovFetchField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeForLovFetchField, value) != true)) {
                    this.CompanyCodeForLovFetchField = value;
                    this.RaisePropertyChanged("CompanyCodeForLovFetch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContinueProposal {
            get {
                return this.ContinueProposalField;
            }
            set {
                if ((object.ReferenceEquals(this.ContinueProposalField, value) != true)) {
                    this.ContinueProposalField = value;
                    this.RaisePropertyChanged("ContinueProposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentSessionProdutIndex {
            get {
                return this.CurrentSessionProdutIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentSessionProdutIndexField, value) != true)) {
                    this.CurrentSessionProdutIndexField = value;
                    this.RaisePropertyChanged("CurrentSessionProdutIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentSessionPseudoProductIndex {
            get {
                return this.CurrentSessionPseudoProductIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentSessionPseudoProductIndexField, value) != true)) {
                    this.CurrentSessionPseudoProductIndexField = value;
                    this.RaisePropertyChanged("CurrentSessionPseudoProductIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataDllReturnValue {
            get {
                return this.DataDllReturnValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DataDllReturnValueField, value) != true)) {
                    this.DataDllReturnValueField = value;
                    this.RaisePropertyChanged("DataDllReturnValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Datatype {
            get {
                return this.DatatypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DatatypeField, value) != true)) {
                    this.DatatypeField = value;
                    this.RaisePropertyChanged("Datatype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementProposalModification {
            get {
                return this.EndorsementProposalModificationField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementProposalModificationField, value) != true)) {
                    this.EndorsementProposalModificationField = value;
                    this.RaisePropertyChanged("EndorsementProposalModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobhalUserCode {
            get {
                return this.GlobhalUserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobhalUserCodeField, value) != true)) {
                    this.GlobhalUserCodeField = value;
                    this.RaisePropertyChanged("GlobhalUserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ILPOSPolicyNo {
            get {
                return this.ILPOSPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ILPOSPolicyNoField, value) != true)) {
                    this.ILPOSPolicyNoField = value;
                    this.RaisePropertyChanged("ILPOSPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsEntityNeedToConfigurable {
            get {
                return this.InsEntityNeedToConfigurableField;
            }
            set {
                if ((object.ReferenceEquals(this.InsEntityNeedToConfigurableField, value) != true)) {
                    this.InsEntityNeedToConfigurableField = value;
                    this.RaisePropertyChanged("InsEntityNeedToConfigurable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryCode {
            get {
                return this.InterMediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryCodeField, value) != true)) {
                    this.InterMediaryCodeField = value;
                    this.RaisePropertyChanged("InterMediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryName {
            get {
                return this.InterMediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryNameField, value) != true)) {
                    this.InterMediaryNameField = value;
                    this.RaisePropertyChanged("InterMediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOVFindI {
            get {
                return this.LOVFindIField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVFindIField, value) != true)) {
                    this.LOVFindIField = value;
                    this.RaisePropertyChanged("LOVFindI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOVFindJ {
            get {
                return this.LOVFindJField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVFindJField, value) != true)) {
                    this.LOVFindJField = value;
                    this.RaisePropertyChanged("LOVFindJ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManualCoverNoteNo {
            get {
                return this.ManualCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ManualCoverNoteNoField, value) != true)) {
                    this.ManualCoverNoteNoField = value;
                    this.RaisePropertyChanged("ManualCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfOperation {
            get {
                return this.ModeOfOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfOperationField, value) != true)) {
                    this.ModeOfOperationField = value;
                    this.RaisePropertyChanged("ModeOfOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumYnCreateDeal {
            get {
                return this.NumYnCreateDealField;
            }
            set {
                if ((object.ReferenceEquals(this.NumYnCreateDealField, value) != true)) {
                    this.NumYnCreateDealField = value;
                    this.RaisePropertyChanged("NumYnCreateDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherFilters {
            get {
                return this.OtherFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherFiltersField, value) != true)) {
                    this.OtherFiltersField = value;
                    this.RaisePropertyChanged("OtherFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNo {
            get {
                return this.PolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoField, value) != true)) {
                    this.PolicyNoField = value;
                    this.RaisePropertyChanged("PolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductIndex {
            get {
                return this.ProductIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIndexField, value) != true)) {
                    this.ProductIndexField = value;
                    this.RaisePropertyChanged("ProductIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNode {
            get {
                return this.ProductNodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNodeField, value) != true)) {
                    this.ProductNodeField = value;
                    this.RaisePropertyChanged("ProductNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatus {
            get {
                return this.ProposalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusField, value) != true)) {
                    this.ProposalStatusField = value;
                    this.RaisePropertyChanged("ProposalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PseudoProductIndex {
            get {
                return this.PseudoProductIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.PseudoProductIndexField, value) != true)) {
                    this.PseudoProductIndexField = value;
                    this.RaisePropertyChanged("PseudoProductIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueryString {
            get {
                return this.QueryStringField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryStringField, value) != true)) {
                    this.QueryStringField = value;
                    this.RaisePropertyChanged("QueryString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuotationNumber {
            get {
                return this.QuotationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotationNumberField, value) != true)) {
                    this.QuotationNumberField = value;
                    this.RaisePropertyChanged("QuotationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaveType {
            get {
                return this.SaveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SaveTypeField, value) != true)) {
                    this.SaveTypeField = value;
                    this.RaisePropertyChanged("SaveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionAppUserid {
            get {
                return this.SessionAppUseridField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionAppUseridField, value) != true)) {
                    this.SessionAppUseridField = value;
                    this.RaisePropertyChanged("SessionAppUserid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionContinueProposal {
            get {
                return this.SessionContinueProposalField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionContinueProposalField, value) != true)) {
                    this.SessionContinueProposalField = value;
                    this.RaisePropertyChanged("SessionContinueProposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionModeOFoperation {
            get {
                return this.SessionModeOFoperationField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionModeOFoperationField, value) != true)) {
                    this.SessionModeOFoperationField = value;
                    this.RaisePropertyChanged("SessionModeOFoperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object SessionOtherFilters {
            get {
                return this.SessionOtherFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionOtherFiltersField, value) != true)) {
                    this.SessionOtherFiltersField = value;
                    this.RaisePropertyChanged("SessionOtherFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionQueryString {
            get {
                return this.SessionQueryStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionQueryStringField, value) != true)) {
                    this.SessionQueryStringField = value;
                    this.RaisePropertyChanged("SessionQueryString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionSubMode {
            get {
                return this.SessionSubModeField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionSubModeField, value) != true)) {
                    this.SessionSubModeField = value;
                    this.RaisePropertyChanged("SessionSubMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionTransactionDate {
            get {
                return this.SessionTransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionTransactionDateField, value) != true)) {
                    this.SessionTransactionDateField = value;
                    this.RaisePropertyChanged("SessionTransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionTransactionID {
            get {
                return this.SessionTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionTransactionIDField, value) != true)) {
                    this.SessionTransactionIDField = value;
                    this.RaisePropertyChanged("SessionTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificProposalModification {
            get {
                return this.SpecificProposalModificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificProposalModificationField, value) != true)) {
                    this.SpecificProposalModificationField = value;
                    this.RaisePropertyChanged("SpecificProposalModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubMode {
            get {
                return this.SubModeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubModeField, value) != true)) {
                    this.SubModeField = value;
                    this.RaisePropertyChanged("SubMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubModeOper {
            get {
                return this.SubModeOperField;
            }
            set {
                if ((object.ReferenceEquals(this.SubModeOperField, value) != true)) {
                    this.SubModeOperField = value;
                    this.RaisePropertyChanged("SubModeOper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDateField, value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDateForLovFetch {
            get {
                return this.TransactionDateForLovFetchField;
            }
            set {
                if ((this.TransactionDateForLovFetchField.Equals(value) != true)) {
                    this.TransactionDateForLovFetchField = value;
                    this.RaisePropertyChanged("TransactionDateForLovFetch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserTypeCatagory {
            get {
                return this.UserTypeCatagoryField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeCatagoryField, value) != true)) {
                    this.UserTypeCatagoryField = value;
                    this.RaisePropertyChanged("UserTypeCatagory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewProposalForABCConfigurable {
            get {
                return this.ViewProposalForABCConfigurableField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewProposalForABCConfigurableField, value) != true)) {
                    this.ViewProposalForABCConfigurableField = value;
                    this.RaisePropertyChanged("ViewProposalForABCConfigurable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfWFHelper", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class ConfWFHelper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BaseTransRBFailedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.clsApprovalMsg[] GetApprovalMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.clsLinkIdDtls[] GetLinkIDDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WFErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WFMessageHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.clsMessageItem[] WFMessageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WFStateActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WFSystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WFTransRolledbackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BaseTransRBFailed {
            get {
                return this.BaseTransRBFailedField;
            }
            set {
                if ((this.BaseTransRBFailedField.Equals(value) != true)) {
                    this.BaseTransRBFailedField = value;
                    this.RaisePropertyChanged("BaseTransRBFailed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.clsApprovalMsg[] GetApprovalMsg {
            get {
                return this.GetApprovalMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.GetApprovalMsgField, value) != true)) {
                    this.GetApprovalMsgField = value;
                    this.RaisePropertyChanged("GetApprovalMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.clsLinkIdDtls[] GetLinkIDData {
            get {
                return this.GetLinkIDDataField;
            }
            set {
                if ((object.ReferenceEquals(this.GetLinkIDDataField, value) != true)) {
                    this.GetLinkIDDataField = value;
                    this.RaisePropertyChanged("GetLinkIDData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WFErrorMsg {
            get {
                return this.WFErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.WFErrorMsgField, value) != true)) {
                    this.WFErrorMsgField = value;
                    this.RaisePropertyChanged("WFErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WFMessageHtml {
            get {
                return this.WFMessageHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.WFMessageHtmlField, value) != true)) {
                    this.WFMessageHtmlField = value;
                    this.RaisePropertyChanged("WFMessageHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.clsMessageItem[] WFMessageList {
            get {
                return this.WFMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.WFMessageListField, value) != true)) {
                    this.WFMessageListField = value;
                    this.RaisePropertyChanged("WFMessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WFStateAction {
            get {
                return this.WFStateActionField;
            }
            set {
                if ((object.ReferenceEquals(this.WFStateActionField, value) != true)) {
                    this.WFStateActionField = value;
                    this.RaisePropertyChanged("WFStateAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WFSystemID {
            get {
                return this.WFSystemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WFSystemIDField, value) != true)) {
                    this.WFSystemIDField = value;
                    this.RaisePropertyChanged("WFSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WFTransRolledback {
            get {
                return this.WFTransRolledbackField;
            }
            set {
                if ((this.WFTransRolledbackField.Equals(value) != true)) {
                    this.WFTransRolledbackField = value;
                    this.RaisePropertyChanged("WFTransRolledback");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsApprovalMsg", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class clsApprovalMsg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsLinkIdDtls", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class clsLinkIdDtls : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkIDNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkID {
            get {
                return this.LinkIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkIDField, value) != true)) {
                    this.LinkIDField = value;
                    this.RaisePropertyChanged("LinkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkIDName {
            get {
                return this.LinkIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkIDNameField, value) != true)) {
                    this.LinkIDNameField = value;
                    this.RaisePropertyChanged("LinkIDName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsMessageItem", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class clsMessageItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLabel {
            get {
                return this.ItemLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLabelField, value) != true)) {
                    this.ItemLabelField = value;
                    this.RaisePropertyChanged("ItemLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemValue {
            get {
                return this.ItemValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemValueField, value) != true)) {
                    this.ItemValueField = value;
                    this.RaisePropertyChanged("ItemValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralServiceResult", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class GeneralServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Currency BaseCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.clsCovernoteDTLS[] ClsCovernoteDTLSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.clsQuotationDTLS[] ClsQuotationDTLSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ConfWFHelper ConfWFHelperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Currency CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrencyAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrencyAmountConvertedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ExchangeRateInverseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Premium PremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.clsProposalData[] ProposalLOVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultQCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.WorkFlowStateInfo WorkFlowStateInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Currency BaseCurrency {
            get {
                return this.BaseCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrencyField, value) != true)) {
                    this.BaseCurrencyField = value;
                    this.RaisePropertyChanged("BaseCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.clsCovernoteDTLS[] ClsCovernoteDTLS {
            get {
                return this.ClsCovernoteDTLSField;
            }
            set {
                if ((object.ReferenceEquals(this.ClsCovernoteDTLSField, value) != true)) {
                    this.ClsCovernoteDTLSField = value;
                    this.RaisePropertyChanged("ClsCovernoteDTLS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.clsQuotationDTLS[] ClsQuotationDTLS {
            get {
                return this.ClsQuotationDTLSField;
            }
            set {
                if ((object.ReferenceEquals(this.ClsQuotationDTLSField, value) != true)) {
                    this.ClsQuotationDTLSField = value;
                    this.RaisePropertyChanged("ClsQuotationDTLS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ConfWFHelper ConfWFHelper {
            get {
                return this.ConfWFHelperField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfWFHelperField, value) != true)) {
                    this.ConfWFHelperField = value;
                    this.RaisePropertyChanged("ConfWFHelper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Currency Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrencyAmount {
            get {
                return this.CurrencyAmountField;
            }
            set {
                if ((this.CurrencyAmountField.Equals(value) != true)) {
                    this.CurrencyAmountField = value;
                    this.RaisePropertyChanged("CurrencyAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrencyAmountConverted {
            get {
                return this.CurrencyAmountConvertedField;
            }
            set {
                if ((this.CurrencyAmountConvertedField.Equals(value) != true)) {
                    this.CurrencyAmountConvertedField = value;
                    this.RaisePropertyChanged("CurrencyAmountConverted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ExchangeRateInverse {
            get {
                return this.ExchangeRateInverseField;
            }
            set {
                if ((this.ExchangeRateInverseField.Equals(value) != true)) {
                    this.ExchangeRateInverseField = value;
                    this.RaisePropertyChanged("ExchangeRateInverse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Premium Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((object.ReferenceEquals(this.PremiumField, value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.clsProposalData[] ProposalLOV {
            get {
                return this.ProposalLOVField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalLOVField, value) != true)) {
                    this.ProposalLOVField = value;
                    this.RaisePropertyChanged("ProposalLOV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatus {
            get {
                return this.ProposalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusField, value) != true)) {
                    this.ProposalStatusField = value;
                    this.RaisePropertyChanged("ProposalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatusDescription {
            get {
                return this.ProposalStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusDescriptionField, value) != true)) {
                    this.ProposalStatusDescriptionField = value;
                    this.RaisePropertyChanged("ProposalStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultQC {
            get {
                return this.ResultQCField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultQCField, value) != true)) {
                    this.ResultQCField = value;
                    this.RaisePropertyChanged("ResultQC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessText {
            get {
                return this.SuccessTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessTextField, value) != true)) {
                    this.SuccessTextField = value;
                    this.RaisePropertyChanged("SuccessText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.WorkFlowStateInfo WorkFlowStateInfo {
            get {
                return this.WorkFlowStateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkFlowStateInfoField, value) != true)) {
                    this.WorkFlowStateInfoField = value;
                    this.RaisePropertyChanged("WorkFlowStateInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class Currency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencySymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDisplaySymbol {
            get {
                return this.CurrencyDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDisplaySymbolField, value) != true)) {
                    this.CurrencyDisplaySymbolField = value;
                    this.RaisePropertyChanged("CurrencyDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencySymbol {
            get {
                return this.CurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencySymbolField, value) != true)) {
                    this.CurrencySymbolField = value;
                    this.RaisePropertyChanged("CurrencySymbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCovernoteDTLS", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class clsCovernoteDTLS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRODUCT_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COVERNOTE_TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANUAL_COVERNOTE_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGISTRATION_MARKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGISTRATION_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DATE_OF_ISSUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TIME_OF_ISSUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PERIOD_OF_VALIDITYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VEHICLE_MAKEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANUFACTURE_YEARField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GVWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CARRYING_CAPACITYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VEHICLE_MODELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENGINE_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CHESSIS_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAME_OF_INSUREDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADDRESS_OF_INSUREDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BRANCH_OFFICE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGD_OFFICEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DATE_OF_EXPIRY_OF_INSURENCEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AUTO_COVERNOTE_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CUBIC_CAPACITYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRODUCT_NAME {
            get {
                return this.PRODUCT_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PRODUCT_NAMEField, value) != true)) {
                    this.PRODUCT_NAMEField = value;
                    this.RaisePropertyChanged("PRODUCT_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string COVERNOTE_TYPE {
            get {
                return this.COVERNOTE_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.COVERNOTE_TYPEField, value) != true)) {
                    this.COVERNOTE_TYPEField = value;
                    this.RaisePropertyChanged("COVERNOTE_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MANUAL_COVERNOTE_NO {
            get {
                return this.MANUAL_COVERNOTE_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.MANUAL_COVERNOTE_NOField, value) != true)) {
                    this.MANUAL_COVERNOTE_NOField = value;
                    this.RaisePropertyChanged("MANUAL_COVERNOTE_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string REGISTRATION_MARKS {
            get {
                return this.REGISTRATION_MARKSField;
            }
            set {
                if ((object.ReferenceEquals(this.REGISTRATION_MARKSField, value) != true)) {
                    this.REGISTRATION_MARKSField = value;
                    this.RaisePropertyChanged("REGISTRATION_MARKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string REGISTRATION_NO {
            get {
                return this.REGISTRATION_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.REGISTRATION_NOField, value) != true)) {
                    this.REGISTRATION_NOField = value;
                    this.RaisePropertyChanged("REGISTRATION_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string DATE_OF_ISSUE {
            get {
                return this.DATE_OF_ISSUEField;
            }
            set {
                if ((object.ReferenceEquals(this.DATE_OF_ISSUEField, value) != true)) {
                    this.DATE_OF_ISSUEField = value;
                    this.RaisePropertyChanged("DATE_OF_ISSUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string TIME_OF_ISSUE {
            get {
                return this.TIME_OF_ISSUEField;
            }
            set {
                if ((object.ReferenceEquals(this.TIME_OF_ISSUEField, value) != true)) {
                    this.TIME_OF_ISSUEField = value;
                    this.RaisePropertyChanged("TIME_OF_ISSUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string PERIOD_OF_VALIDITY {
            get {
                return this.PERIOD_OF_VALIDITYField;
            }
            set {
                if ((object.ReferenceEquals(this.PERIOD_OF_VALIDITYField, value) != true)) {
                    this.PERIOD_OF_VALIDITYField = value;
                    this.RaisePropertyChanged("PERIOD_OF_VALIDITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string VEHICLE_MAKE {
            get {
                return this.VEHICLE_MAKEField;
            }
            set {
                if ((object.ReferenceEquals(this.VEHICLE_MAKEField, value) != true)) {
                    this.VEHICLE_MAKEField = value;
                    this.RaisePropertyChanged("VEHICLE_MAKE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string MANUFACTURE_YEAR {
            get {
                return this.MANUFACTURE_YEARField;
            }
            set {
                if ((object.ReferenceEquals(this.MANUFACTURE_YEARField, value) != true)) {
                    this.MANUFACTURE_YEARField = value;
                    this.RaisePropertyChanged("MANUFACTURE_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string GVW {
            get {
                return this.GVWField;
            }
            set {
                if ((object.ReferenceEquals(this.GVWField, value) != true)) {
                    this.GVWField = value;
                    this.RaisePropertyChanged("GVW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string LCC {
            get {
                return this.LCCField;
            }
            set {
                if ((object.ReferenceEquals(this.LCCField, value) != true)) {
                    this.LCCField = value;
                    this.RaisePropertyChanged("LCC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string CARRYING_CAPACITY {
            get {
                return this.CARRYING_CAPACITYField;
            }
            set {
                if ((object.ReferenceEquals(this.CARRYING_CAPACITYField, value) != true)) {
                    this.CARRYING_CAPACITYField = value;
                    this.RaisePropertyChanged("CARRYING_CAPACITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string VEHICLE_MODEL {
            get {
                return this.VEHICLE_MODELField;
            }
            set {
                if ((object.ReferenceEquals(this.VEHICLE_MODELField, value) != true)) {
                    this.VEHICLE_MODELField = value;
                    this.RaisePropertyChanged("VEHICLE_MODEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string ENGINE_NO {
            get {
                return this.ENGINE_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.ENGINE_NOField, value) != true)) {
                    this.ENGINE_NOField = value;
                    this.RaisePropertyChanged("ENGINE_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string CHESSIS_NO {
            get {
                return this.CHESSIS_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.CHESSIS_NOField, value) != true)) {
                    this.CHESSIS_NOField = value;
                    this.RaisePropertyChanged("CHESSIS_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string NAME_OF_INSURED {
            get {
                return this.NAME_OF_INSUREDField;
            }
            set {
                if ((object.ReferenceEquals(this.NAME_OF_INSUREDField, value) != true)) {
                    this.NAME_OF_INSUREDField = value;
                    this.RaisePropertyChanged("NAME_OF_INSURED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string ADDRESS_OF_INSURED {
            get {
                return this.ADDRESS_OF_INSUREDField;
            }
            set {
                if ((object.ReferenceEquals(this.ADDRESS_OF_INSUREDField, value) != true)) {
                    this.ADDRESS_OF_INSUREDField = value;
                    this.RaisePropertyChanged("ADDRESS_OF_INSURED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string BRANCH_OFFICE_NAME {
            get {
                return this.BRANCH_OFFICE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.BRANCH_OFFICE_NAMEField, value) != true)) {
                    this.BRANCH_OFFICE_NAMEField = value;
                    this.RaisePropertyChanged("BRANCH_OFFICE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string REGD_OFFICE {
            get {
                return this.REGD_OFFICEField;
            }
            set {
                if ((object.ReferenceEquals(this.REGD_OFFICEField, value) != true)) {
                    this.REGD_OFFICEField = value;
                    this.RaisePropertyChanged("REGD_OFFICE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string DATE_OF_EXPIRY_OF_INSURENCE {
            get {
                return this.DATE_OF_EXPIRY_OF_INSURENCEField;
            }
            set {
                if ((object.ReferenceEquals(this.DATE_OF_EXPIRY_OF_INSURENCEField, value) != true)) {
                    this.DATE_OF_EXPIRY_OF_INSURENCEField = value;
                    this.RaisePropertyChanged("DATE_OF_EXPIRY_OF_INSURENCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string AUTO_COVERNOTE_NO {
            get {
                return this.AUTO_COVERNOTE_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.AUTO_COVERNOTE_NOField, value) != true)) {
                    this.AUTO_COVERNOTE_NOField = value;
                    this.RaisePropertyChanged("AUTO_COVERNOTE_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string CUBIC_CAPACITY {
            get {
                return this.CUBIC_CAPACITYField;
            }
            set {
                if ((object.ReferenceEquals(this.CUBIC_CAPACITYField, value) != true)) {
                    this.CUBIC_CAPACITYField = value;
                    this.RaisePropertyChanged("CUBIC_CAPACITY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsQuotationDTLS", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class clsQuotationDTLS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRODUCT_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PROPOSER_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PROPOSER_ADDRESSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGISTRATION_ZONEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MODELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFG_YEARField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COVERNOTE_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COVERNOTE_TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANUAL_COVERNOTE_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGISTRATION_NUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VEHICLE_MAKEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CHASSIS_NUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENGINE_NUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLICY_NOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VEHICLE_IDVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ELECTRICALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NONELECTRICALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TRAILERSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNG_UNITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPG_UNITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TOTAL_IDVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NET_PREMIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SERVICE_TAXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDUCATION_CESSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QUOTATION_NUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QUOTATION_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RTO_LOCATIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BASIC_PREMIUM_ON_VEHICLE_AField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BASIC_THIRD_PARTY_LIABILITY_B1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PAID_DRIVER_ENDT_IMT_28_B2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PA_COVER_FOR_OWNER_DRIVER_OFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TOTAL_PACKAGE_PREMIUM_ABField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TOTAL_LIABILITY_PREMIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TOTAL_PREMIUM_PAYABLEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRODUCT_NAME {
            get {
                return this.PRODUCT_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PRODUCT_NAMEField, value) != true)) {
                    this.PRODUCT_NAMEField = value;
                    this.RaisePropertyChanged("PRODUCT_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROPOSER_NAME {
            get {
                return this.PROPOSER_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PROPOSER_NAMEField, value) != true)) {
                    this.PROPOSER_NAMEField = value;
                    this.RaisePropertyChanged("PROPOSER_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string PROPOSER_ADDRESS {
            get {
                return this.PROPOSER_ADDRESSField;
            }
            set {
                if ((object.ReferenceEquals(this.PROPOSER_ADDRESSField, value) != true)) {
                    this.PROPOSER_ADDRESSField = value;
                    this.RaisePropertyChanged("PROPOSER_ADDRESS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string REGISTRATION_ZONE {
            get {
                return this.REGISTRATION_ZONEField;
            }
            set {
                if ((object.ReferenceEquals(this.REGISTRATION_ZONEField, value) != true)) {
                    this.REGISTRATION_ZONEField = value;
                    this.RaisePropertyChanged("REGISTRATION_ZONE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string MODEL {
            get {
                return this.MODELField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELField, value) != true)) {
                    this.MODELField = value;
                    this.RaisePropertyChanged("MODEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string MFG_YEAR {
            get {
                return this.MFG_YEARField;
            }
            set {
                if ((object.ReferenceEquals(this.MFG_YEARField, value) != true)) {
                    this.MFG_YEARField = value;
                    this.RaisePropertyChanged("MFG_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string COVERNOTE_NO {
            get {
                return this.COVERNOTE_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.COVERNOTE_NOField, value) != true)) {
                    this.COVERNOTE_NOField = value;
                    this.RaisePropertyChanged("COVERNOTE_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string COVERNOTE_TYPE {
            get {
                return this.COVERNOTE_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.COVERNOTE_TYPEField, value) != true)) {
                    this.COVERNOTE_TYPEField = value;
                    this.RaisePropertyChanged("COVERNOTE_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string MANUAL_COVERNOTE_NO {
            get {
                return this.MANUAL_COVERNOTE_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.MANUAL_COVERNOTE_NOField, value) != true)) {
                    this.MANUAL_COVERNOTE_NOField = value;
                    this.RaisePropertyChanged("MANUAL_COVERNOTE_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string REGISTRATION_NUMBER {
            get {
                return this.REGISTRATION_NUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.REGISTRATION_NUMBERField, value) != true)) {
                    this.REGISTRATION_NUMBERField = value;
                    this.RaisePropertyChanged("REGISTRATION_NUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string VEHICLE_MAKE {
            get {
                return this.VEHICLE_MAKEField;
            }
            set {
                if ((object.ReferenceEquals(this.VEHICLE_MAKEField, value) != true)) {
                    this.VEHICLE_MAKEField = value;
                    this.RaisePropertyChanged("VEHICLE_MAKE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string CHASSIS_NUMBER {
            get {
                return this.CHASSIS_NUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.CHASSIS_NUMBERField, value) != true)) {
                    this.CHASSIS_NUMBERField = value;
                    this.RaisePropertyChanged("CHASSIS_NUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string ENGINE_NUMBER {
            get {
                return this.ENGINE_NUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.ENGINE_NUMBERField, value) != true)) {
                    this.ENGINE_NUMBERField = value;
                    this.RaisePropertyChanged("ENGINE_NUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string POLICY_NO {
            get {
                return this.POLICY_NOField;
            }
            set {
                if ((object.ReferenceEquals(this.POLICY_NOField, value) != true)) {
                    this.POLICY_NOField = value;
                    this.RaisePropertyChanged("POLICY_NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string VEHICLE_IDV {
            get {
                return this.VEHICLE_IDVField;
            }
            set {
                if ((object.ReferenceEquals(this.VEHICLE_IDVField, value) != true)) {
                    this.VEHICLE_IDVField = value;
                    this.RaisePropertyChanged("VEHICLE_IDV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string ELECTRICAL {
            get {
                return this.ELECTRICALField;
            }
            set {
                if ((object.ReferenceEquals(this.ELECTRICALField, value) != true)) {
                    this.ELECTRICALField = value;
                    this.RaisePropertyChanged("ELECTRICAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string NONELECTRICAL {
            get {
                return this.NONELECTRICALField;
            }
            set {
                if ((object.ReferenceEquals(this.NONELECTRICALField, value) != true)) {
                    this.NONELECTRICALField = value;
                    this.RaisePropertyChanged("NONELECTRICAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string TRAILERS {
            get {
                return this.TRAILERSField;
            }
            set {
                if ((object.ReferenceEquals(this.TRAILERSField, value) != true)) {
                    this.TRAILERSField = value;
                    this.RaisePropertyChanged("TRAILERS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string CNG_UNIT {
            get {
                return this.CNG_UNITField;
            }
            set {
                if ((object.ReferenceEquals(this.CNG_UNITField, value) != true)) {
                    this.CNG_UNITField = value;
                    this.RaisePropertyChanged("CNG_UNIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string LPG_UNIT {
            get {
                return this.LPG_UNITField;
            }
            set {
                if ((object.ReferenceEquals(this.LPG_UNITField, value) != true)) {
                    this.LPG_UNITField = value;
                    this.RaisePropertyChanged("LPG_UNIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string TOTAL_IDV {
            get {
                return this.TOTAL_IDVField;
            }
            set {
                if ((object.ReferenceEquals(this.TOTAL_IDVField, value) != true)) {
                    this.TOTAL_IDVField = value;
                    this.RaisePropertyChanged("TOTAL_IDV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string NET_PREMIUM {
            get {
                return this.NET_PREMIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.NET_PREMIUMField, value) != true)) {
                    this.NET_PREMIUMField = value;
                    this.RaisePropertyChanged("NET_PREMIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string SERVICE_TAX {
            get {
                return this.SERVICE_TAXField;
            }
            set {
                if ((object.ReferenceEquals(this.SERVICE_TAXField, value) != true)) {
                    this.SERVICE_TAXField = value;
                    this.RaisePropertyChanged("SERVICE_TAX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public string EDUCATION_CESS {
            get {
                return this.EDUCATION_CESSField;
            }
            set {
                if ((object.ReferenceEquals(this.EDUCATION_CESSField, value) != true)) {
                    this.EDUCATION_CESSField = value;
                    this.RaisePropertyChanged("EDUCATION_CESS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public string QUOTATION_NUMBER {
            get {
                return this.QUOTATION_NUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.QUOTATION_NUMBERField, value) != true)) {
                    this.QUOTATION_NUMBERField = value;
                    this.RaisePropertyChanged("QUOTATION_NUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public string QUOTATION_DATE {
            get {
                return this.QUOTATION_DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.QUOTATION_DATEField, value) != true)) {
                    this.QUOTATION_DATEField = value;
                    this.RaisePropertyChanged("QUOTATION_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public string RTO_LOCATION {
            get {
                return this.RTO_LOCATIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RTO_LOCATIONField, value) != true)) {
                    this.RTO_LOCATIONField = value;
                    this.RaisePropertyChanged("RTO_LOCATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public string BASIC_PREMIUM_ON_VEHICLE_A {
            get {
                return this.BASIC_PREMIUM_ON_VEHICLE_AField;
            }
            set {
                if ((object.ReferenceEquals(this.BASIC_PREMIUM_ON_VEHICLE_AField, value) != true)) {
                    this.BASIC_PREMIUM_ON_VEHICLE_AField = value;
                    this.RaisePropertyChanged("BASIC_PREMIUM_ON_VEHICLE_A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public string BASIC_THIRD_PARTY_LIABILITY_B1 {
            get {
                return this.BASIC_THIRD_PARTY_LIABILITY_B1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BASIC_THIRD_PARTY_LIABILITY_B1Field, value) != true)) {
                    this.BASIC_THIRD_PARTY_LIABILITY_B1Field = value;
                    this.RaisePropertyChanged("BASIC_THIRD_PARTY_LIABILITY_B1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public string PAID_DRIVER_ENDT_IMT_28_B2 {
            get {
                return this.PAID_DRIVER_ENDT_IMT_28_B2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PAID_DRIVER_ENDT_IMT_28_B2Field, value) != true)) {
                    this.PAID_DRIVER_ENDT_IMT_28_B2Field = value;
                    this.RaisePropertyChanged("PAID_DRIVER_ENDT_IMT_28_B2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public string PA_COVER_FOR_OWNER_DRIVER_OF {
            get {
                return this.PA_COVER_FOR_OWNER_DRIVER_OFField;
            }
            set {
                if ((object.ReferenceEquals(this.PA_COVER_FOR_OWNER_DRIVER_OFField, value) != true)) {
                    this.PA_COVER_FOR_OWNER_DRIVER_OFField = value;
                    this.RaisePropertyChanged("PA_COVER_FOR_OWNER_DRIVER_OF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public string TOTAL_PACKAGE_PREMIUM_AB {
            get {
                return this.TOTAL_PACKAGE_PREMIUM_ABField;
            }
            set {
                if ((object.ReferenceEquals(this.TOTAL_PACKAGE_PREMIUM_ABField, value) != true)) {
                    this.TOTAL_PACKAGE_PREMIUM_ABField = value;
                    this.RaisePropertyChanged("TOTAL_PACKAGE_PREMIUM_AB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public string TOTAL_LIABILITY_PREMIUM {
            get {
                return this.TOTAL_LIABILITY_PREMIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.TOTAL_LIABILITY_PREMIUMField, value) != true)) {
                    this.TOTAL_LIABILITY_PREMIUMField = value;
                    this.RaisePropertyChanged("TOTAL_LIABILITY_PREMIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public string TOTAL_PREMIUM_PAYABLE {
            get {
                return this.TOTAL_PREMIUM_PAYABLEField;
            }
            set {
                if ((object.ReferenceEquals(this.TOTAL_PREMIUM_PAYABLEField, value) != true)) {
                    this.TOTAL_PREMIUM_PAYABLEField = value;
                    this.RaisePropertyChanged("TOTAL_PREMIUM_PAYABLE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Premium", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class Premium : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BasicPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ERFAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndorsementERFAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndorsementPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndorsementSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndorsementServiceTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndorsementStampDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndorsementTerrorismPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NetODPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NetPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NetTPPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ODLoadingRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StampDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TPLoadingRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TerrorismPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalSIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BasicPremium {
            get {
                return this.BasicPremiumField;
            }
            set {
                if ((this.BasicPremiumField.Equals(value) != true)) {
                    this.BasicPremiumField = value;
                    this.RaisePropertyChanged("BasicPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ERFAmount {
            get {
                return this.ERFAmountField;
            }
            set {
                if ((this.ERFAmountField.Equals(value) != true)) {
                    this.ERFAmountField = value;
                    this.RaisePropertyChanged("ERFAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndorsementERFAmount {
            get {
                return this.EndorsementERFAmountField;
            }
            set {
                if ((this.EndorsementERFAmountField.Equals(value) != true)) {
                    this.EndorsementERFAmountField = value;
                    this.RaisePropertyChanged("EndorsementERFAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndorsementPremium {
            get {
                return this.EndorsementPremiumField;
            }
            set {
                if ((this.EndorsementPremiumField.Equals(value) != true)) {
                    this.EndorsementPremiumField = value;
                    this.RaisePropertyChanged("EndorsementPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndorsementSI {
            get {
                return this.EndorsementSIField;
            }
            set {
                if ((this.EndorsementSIField.Equals(value) != true)) {
                    this.EndorsementSIField = value;
                    this.RaisePropertyChanged("EndorsementSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndorsementServiceTax {
            get {
                return this.EndorsementServiceTaxField;
            }
            set {
                if ((this.EndorsementServiceTaxField.Equals(value) != true)) {
                    this.EndorsementServiceTaxField = value;
                    this.RaisePropertyChanged("EndorsementServiceTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndorsementStampDuty {
            get {
                return this.EndorsementStampDutyField;
            }
            set {
                if ((this.EndorsementStampDutyField.Equals(value) != true)) {
                    this.EndorsementStampDutyField = value;
                    this.RaisePropertyChanged("EndorsementStampDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndorsementTerrorismPremium {
            get {
                return this.EndorsementTerrorismPremiumField;
            }
            set {
                if ((this.EndorsementTerrorismPremiumField.Equals(value) != true)) {
                    this.EndorsementTerrorismPremiumField = value;
                    this.RaisePropertyChanged("EndorsementTerrorismPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NetODPremium {
            get {
                return this.NetODPremiumField;
            }
            set {
                if ((this.NetODPremiumField.Equals(value) != true)) {
                    this.NetODPremiumField = value;
                    this.RaisePropertyChanged("NetODPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NetPremium {
            get {
                return this.NetPremiumField;
            }
            set {
                if ((this.NetPremiumField.Equals(value) != true)) {
                    this.NetPremiumField = value;
                    this.RaisePropertyChanged("NetPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NetTPPremium {
            get {
                return this.NetTPPremiumField;
            }
            set {
                if ((this.NetTPPremiumField.Equals(value) != true)) {
                    this.NetTPPremiumField = value;
                    this.RaisePropertyChanged("NetTPPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ODLoadingRate {
            get {
                return this.ODLoadingRateField;
            }
            set {
                if ((this.ODLoadingRateField.Equals(value) != true)) {
                    this.ODLoadingRateField = value;
                    this.RaisePropertyChanged("ODLoadingRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceTax {
            get {
                return this.ServiceTaxField;
            }
            set {
                if ((this.ServiceTaxField.Equals(value) != true)) {
                    this.ServiceTaxField = value;
                    this.RaisePropertyChanged("ServiceTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StampDuty {
            get {
                return this.StampDutyField;
            }
            set {
                if ((this.StampDutyField.Equals(value) != true)) {
                    this.StampDutyField = value;
                    this.RaisePropertyChanged("StampDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TPLoadingRate {
            get {
                return this.TPLoadingRateField;
            }
            set {
                if ((this.TPLoadingRateField.Equals(value) != true)) {
                    this.TPLoadingRateField = value;
                    this.RaisePropertyChanged("TPLoadingRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TerrorismPremium {
            get {
                return this.TerrorismPremiumField;
            }
            set {
                if ((this.TerrorismPremiumField.Equals(value) != true)) {
                    this.TerrorismPremiumField = value;
                    this.RaisePropertyChanged("TerrorismPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPremium {
            get {
                return this.TotalPremiumField;
            }
            set {
                if ((this.TotalPremiumField.Equals(value) != true)) {
                    this.TotalPremiumField = value;
                    this.RaisePropertyChanged("TotalPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSI {
            get {
                return this.TotalSIField;
            }
            set {
                if ((this.TotalSIField.Equals(value) != true)) {
                    this.TotalSIField = value;
                    this.RaisePropertyChanged("TotalSI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsProposalData", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class clsProposalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string PolicyNo {
            get {
                return this.PolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoField, value) != true)) {
                    this.PolicyNoField = value;
                    this.RaisePropertyChanged("PolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string CoverNote {
            get {
                return this.CoverNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteField, value) != true)) {
                    this.CoverNoteField = value;
                    this.RaisePropertyChanged("CoverNote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkFlowStateInfo", Namespace="http://schemas.datacontract.org/2004/07/GeneralServiceBL")]
    [System.SerializableAttribute()]
    public partial class WorkFlowStateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GetCompltedSatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GetLastVisitedStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GetVisitedStatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetCompltedSates {
            get {
                return this.GetCompltedSatesField;
            }
            set {
                if ((object.ReferenceEquals(this.GetCompltedSatesField, value) != true)) {
                    this.GetCompltedSatesField = value;
                    this.RaisePropertyChanged("GetCompltedSates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetLastVisitedState {
            get {
                return this.GetLastVisitedStateField;
            }
            set {
                if ((object.ReferenceEquals(this.GetLastVisitedStateField, value) != true)) {
                    this.GetLastVisitedStateField = value;
                    this.RaisePropertyChanged("GetLastVisitedState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GetVisitedStates {
            get {
                return this.GetVisitedStatesField;
            }
            set {
                if ((object.ReferenceEquals(this.GetVisitedStatesField, value) != true)) {
                    this.GetVisitedStatesField = value;
                    this.RaisePropertyChanged("GetVisitedStates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericMasterResult", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial class GenericMasterResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.AreaVillage AreaVillageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolErrMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.CityDistrict CityDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ConfWFHelper ConfWFHelperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ExcelUpload[] CountexcelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.CoverNote CoverNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.DesignationMaster DesignationMasterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVDuplicateCustomer[] DuplicateCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ExcelUpload[] ExcelHeadingListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ExcelUploadLog[] ExcelUploadLogListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.GenericLov[] GenericLovValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object GetexpectedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.IntermediaryCategory IntermediaryCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] KeyValuePairListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeAddress[] LOVAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeAreaVillage[] LOVAreaVillageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeBank[] LOVBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeBankBranch[] LOVBankBranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeCityDistrict[] LOVCityDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeDesignationMaster[] LOVDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[] LOVIntermediaryCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeLicense[] LOVLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVType[] LOVLossLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVParentCustomer[] LOVParentCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeParentRole[] LOVParentRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypePIN[] LOVPinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOVResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeRole[] LOVRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LOVTypeState[] LOVStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LovForCoverNote[] LovCoverNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LovFetch[] LovFetchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LovFetchInput LovFetchPolicyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LovFetch NumYnCreateDealValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Pincode PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.QualityCheck QualityCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.QualityCheck[] QualityCheckGridValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultQCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.Role RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ExcelUpload[] SheetOrderDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LovFetch[] ShowQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.State StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuccessTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.QualityCheck TableViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.ExcelUpload[] TypeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.LovFetch UserTypeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.AreaVillage AreaVillage {
            get {
                return this.AreaVillageField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageField, value) != true)) {
                    this.AreaVillageField = value;
                    this.RaisePropertyChanged("AreaVillage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolErrMsg {
            get {
                return this.BoolErrMsgField;
            }
            set {
                if ((this.BoolErrMsgField.Equals(value) != true)) {
                    this.BoolErrMsgField = value;
                    this.RaisePropertyChanged("BoolErrMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.CityDistrict CityDistrict {
            get {
                return this.CityDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictField, value) != true)) {
                    this.CityDistrictField = value;
                    this.RaisePropertyChanged("CityDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ConfWFHelper ConfWFHelper {
            get {
                return this.ConfWFHelperField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfWFHelperField, value) != true)) {
                    this.ConfWFHelperField = value;
                    this.RaisePropertyChanged("ConfWFHelper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Count {
            get {
                return this.CountField;
            }
            set {
                if ((object.ReferenceEquals(this.CountField, value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ExcelUpload[] Countexcel {
            get {
                return this.CountexcelField;
            }
            set {
                if ((object.ReferenceEquals(this.CountexcelField, value) != true)) {
                    this.CountexcelField = value;
                    this.RaisePropertyChanged("Countexcel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.CoverNote CoverNote {
            get {
                return this.CoverNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteField, value) != true)) {
                    this.CoverNoteField = value;
                    this.RaisePropertyChanged("CoverNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.DesignationMaster DesignationMaster {
            get {
                return this.DesignationMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationMasterField, value) != true)) {
                    this.DesignationMasterField = value;
                    this.RaisePropertyChanged("DesignationMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVDuplicateCustomer[] DuplicateCustomer {
            get {
                return this.DuplicateCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplicateCustomerField, value) != true)) {
                    this.DuplicateCustomerField = value;
                    this.RaisePropertyChanged("DuplicateCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ExcelUpload[] ExcelHeadingList {
            get {
                return this.ExcelHeadingListField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelHeadingListField, value) != true)) {
                    this.ExcelHeadingListField = value;
                    this.RaisePropertyChanged("ExcelHeadingList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelLog {
            get {
                return this.ExcelLogField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelLogField, value) != true)) {
                    this.ExcelLogField = value;
                    this.RaisePropertyChanged("ExcelLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ExcelUploadLog[] ExcelUploadLogList {
            get {
                return this.ExcelUploadLogListField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelUploadLogListField, value) != true)) {
                    this.ExcelUploadLogListField = value;
                    this.RaisePropertyChanged("ExcelUploadLogList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.GenericLov[] GenericLovValue {
            get {
                return this.GenericLovValueField;
            }
            set {
                if ((object.ReferenceEquals(this.GenericLovValueField, value) != true)) {
                    this.GenericLovValueField = value;
                    this.RaisePropertyChanged("GenericLovValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object GetexpectedValue {
            get {
                return this.GetexpectedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.GetexpectedValueField, value) != true)) {
                    this.GetexpectedValueField = value;
                    this.RaisePropertyChanged("GetexpectedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.IntermediaryCategory IntermediaryCategory {
            get {
                return this.IntermediaryCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryCategoryField, value) != true)) {
                    this.IntermediaryCategoryField = value;
                    this.RaisePropertyChanged("IntermediaryCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] KeyValuePairList {
            get {
                return this.KeyValuePairListField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyValuePairListField, value) != true)) {
                    this.KeyValuePairListField = value;
                    this.RaisePropertyChanged("KeyValuePairList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeAddress[] LOVAddress {
            get {
                return this.LOVAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVAddressField, value) != true)) {
                    this.LOVAddressField = value;
                    this.RaisePropertyChanged("LOVAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeAreaVillage[] LOVAreaVillage {
            get {
                return this.LOVAreaVillageField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVAreaVillageField, value) != true)) {
                    this.LOVAreaVillageField = value;
                    this.RaisePropertyChanged("LOVAreaVillage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeBank[] LOVBank {
            get {
                return this.LOVBankField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVBankField, value) != true)) {
                    this.LOVBankField = value;
                    this.RaisePropertyChanged("LOVBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeBankBranch[] LOVBankBranch {
            get {
                return this.LOVBankBranchField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVBankBranchField, value) != true)) {
                    this.LOVBankBranchField = value;
                    this.RaisePropertyChanged("LOVBankBranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeCityDistrict[] LOVCityDistrict {
            get {
                return this.LOVCityDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVCityDistrictField, value) != true)) {
                    this.LOVCityDistrictField = value;
                    this.RaisePropertyChanged("LOVCityDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeDesignationMaster[] LOVDesignation {
            get {
                return this.LOVDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVDesignationField, value) != true)) {
                    this.LOVDesignationField = value;
                    this.RaisePropertyChanged("LOVDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[] LOVIntermediaryCategory {
            get {
                return this.LOVIntermediaryCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVIntermediaryCategoryField, value) != true)) {
                    this.LOVIntermediaryCategoryField = value;
                    this.RaisePropertyChanged("LOVIntermediaryCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeLicense[] LOVLicense {
            get {
                return this.LOVLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVLicenseField, value) != true)) {
                    this.LOVLicenseField = value;
                    this.RaisePropertyChanged("LOVLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVType[] LOVLossLocation {
            get {
                return this.LOVLossLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVLossLocationField, value) != true)) {
                    this.LOVLossLocationField = value;
                    this.RaisePropertyChanged("LOVLossLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVParentCustomer[] LOVParentCustomer {
            get {
                return this.LOVParentCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVParentCustomerField, value) != true)) {
                    this.LOVParentCustomerField = value;
                    this.RaisePropertyChanged("LOVParentCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeParentRole[] LOVParentRole {
            get {
                return this.LOVParentRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVParentRoleField, value) != true)) {
                    this.LOVParentRoleField = value;
                    this.RaisePropertyChanged("LOVParentRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypePIN[] LOVPin {
            get {
                return this.LOVPinField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVPinField, value) != true)) {
                    this.LOVPinField = value;
                    this.RaisePropertyChanged("LOVPin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOVResult {
            get {
                return this.LOVResultField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVResultField, value) != true)) {
                    this.LOVResultField = value;
                    this.RaisePropertyChanged("LOVResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeRole[] LOVRole {
            get {
                return this.LOVRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVRoleField, value) != true)) {
                    this.LOVRoleField = value;
                    this.RaisePropertyChanged("LOVRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LOVTypeState[] LOVState {
            get {
                return this.LOVStateField;
            }
            set {
                if ((object.ReferenceEquals(this.LOVStateField, value) != true)) {
                    this.LOVStateField = value;
                    this.RaisePropertyChanged("LOVState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LovForCoverNote[] LovCoverNote {
            get {
                return this.LovCoverNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.LovCoverNoteField, value) != true)) {
                    this.LovCoverNoteField = value;
                    this.RaisePropertyChanged("LovCoverNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LovFetch[] LovFetch {
            get {
                return this.LovFetchField;
            }
            set {
                if ((object.ReferenceEquals(this.LovFetchField, value) != true)) {
                    this.LovFetchField = value;
                    this.RaisePropertyChanged("LovFetch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LovFetchInput LovFetchPolicyDetails {
            get {
                return this.LovFetchPolicyDetailsField;
            }
            set {
                if ((this.LovFetchPolicyDetailsField.Equals(value) != true)) {
                    this.LovFetchPolicyDetailsField = value;
                    this.RaisePropertyChanged("LovFetchPolicyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LovFetch NumYnCreateDealValue {
            get {
                return this.NumYnCreateDealValueField;
            }
            set {
                if ((this.NumYnCreateDealValueField.Equals(value) != true)) {
                    this.NumYnCreateDealValueField = value;
                    this.RaisePropertyChanged("NumYnCreateDealValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Pincode PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.QualityCheck QualityCheck {
            get {
                return this.QualityCheckField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityCheckField, value) != true)) {
                    this.QualityCheckField = value;
                    this.RaisePropertyChanged("QualityCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.QualityCheck[] QualityCheckGridValue {
            get {
                return this.QualityCheckGridValueField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityCheckGridValueField, value) != true)) {
                    this.QualityCheckGridValueField = value;
                    this.RaisePropertyChanged("QualityCheckGridValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultQC {
            get {
                return this.ResultQCField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultQCField, value) != true)) {
                    this.ResultQCField = value;
                    this.RaisePropertyChanged("ResultQC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnUrl {
            get {
                return this.ReturnUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnUrlField, value) != true)) {
                    this.ReturnUrlField = value;
                    this.RaisePropertyChanged("ReturnUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.Role Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ExcelUpload[] SheetOrderDB {
            get {
                return this.SheetOrderDBField;
            }
            set {
                if ((object.ReferenceEquals(this.SheetOrderDBField, value) != true)) {
                    this.SheetOrderDBField = value;
                    this.RaisePropertyChanged("SheetOrderDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowMode {
            get {
                return this.ShowModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowModeField, value) != true)) {
                    this.ShowModeField = value;
                    this.RaisePropertyChanged("ShowMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LovFetch[] ShowQuery {
            get {
                return this.ShowQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowQueryField, value) != true)) {
                    this.ShowQueryField = value;
                    this.RaisePropertyChanged("ShowQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.State State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuccessText {
            get {
                return this.SuccessTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessTextField, value) != true)) {
                    this.SuccessTextField = value;
                    this.RaisePropertyChanged("SuccessText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.QualityCheck TableView {
            get {
                return this.TableViewField;
            }
            set {
                if ((object.ReferenceEquals(this.TableViewField, value) != true)) {
                    this.TableViewField = value;
                    this.RaisePropertyChanged("TableView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.ExcelUpload[] TypeList {
            get {
                return this.TypeListField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeListField, value) != true)) {
                    this.TypeListField = value;
                    this.RaisePropertyChanged("TypeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.LovFetch UserTypeValue {
            get {
                return this.UserTypeValueField;
            }
            set {
                if ((this.UserTypeValueField.Equals(value) != true)) {
                    this.UserTypeValueField = value;
                    this.RaisePropertyChanged("UserTypeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaVillage", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial class AreaVillage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object AreaVillageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object AreaVillageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertTransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object RuralUrbanFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] RuralUrbanFlagListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object AreaVillageCode {
            get {
                return this.AreaVillageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageCodeField, value) != true)) {
                    this.AreaVillageCodeField = value;
                    this.RaisePropertyChanged("AreaVillageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object AreaVillageName {
            get {
                return this.AreaVillageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageNameField, value) != true)) {
                    this.AreaVillageNameField = value;
                    this.RaisePropertyChanged("AreaVillageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertTransDate {
            get {
                return this.InsertTransDateField;
            }
            set {
                if ((this.InsertTransDateField.Equals(value) != true)) {
                    this.InsertTransDateField = value;
                    this.RaisePropertyChanged("InsertTransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object RuralUrbanFlag {
            get {
                return this.RuralUrbanFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.RuralUrbanFlagField, value) != true)) {
                    this.RuralUrbanFlagField = value;
                    this.RaisePropertyChanged("RuralUrbanFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] RuralUrbanFlagList {
            get {
                return this.RuralUrbanFlagListField;
            }
            set {
                if ((object.ReferenceEquals(this.RuralUrbanFlagListField, value) != true)) {
                    this.RuralUrbanFlagListField = value;
                    this.RaisePropertyChanged("RuralUrbanFlagList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDistrict", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial class CityDistrict : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] CityDistrictFlagListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] EQZoneListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertTransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RSMDZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] RSMDZoneListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STFIZOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] STFIZoneListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictFlag {
            get {
                return this.CityDistrictFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictFlagField, value) != true)) {
                    this.CityDistrictFlagField = value;
                    this.RaisePropertyChanged("CityDistrictFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] CityDistrictFlagList {
            get {
                return this.CityDistrictFlagListField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictFlagListField, value) != true)) {
                    this.CityDistrictFlagListField = value;
                    this.RaisePropertyChanged("CityDistrictFlagList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQZone {
            get {
                return this.EQZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneField, value) != true)) {
                    this.EQZoneField = value;
                    this.RaisePropertyChanged("EQZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] EQZoneList {
            get {
                return this.EQZoneListField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneListField, value) != true)) {
                    this.EQZoneListField = value;
                    this.RaisePropertyChanged("EQZoneList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertTransDate {
            get {
                return this.InsertTransDateField;
            }
            set {
                if ((this.InsertTransDateField.Equals(value) != true)) {
                    this.InsertTransDateField = value;
                    this.RaisePropertyChanged("InsertTransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RSMDZone {
            get {
                return this.RSMDZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.RSMDZoneField, value) != true)) {
                    this.RSMDZoneField = value;
                    this.RaisePropertyChanged("RSMDZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] RSMDZoneList {
            get {
                return this.RSMDZoneListField;
            }
            set {
                if ((object.ReferenceEquals(this.RSMDZoneListField, value) != true)) {
                    this.RSMDZoneListField = value;
                    this.RaisePropertyChanged("RSMDZoneList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STFIZOne {
            get {
                return this.STFIZOneField;
            }
            set {
                if ((object.ReferenceEquals(this.STFIZOneField, value) != true)) {
                    this.STFIZOneField = value;
                    this.RaisePropertyChanged("STFIZOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] STFIZoneList {
            get {
                return this.STFIZoneListField;
            }
            set {
                if ((object.ReferenceEquals(this.STFIZoneListField, value) != true)) {
                    this.STFIZoneListField = value;
                    this.RaisePropertyChanged("STFIZoneList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExcelUpload", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial struct ExcelUpload : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasisOfUploadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelColoumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionalityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LostRsnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyRersultClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SheetnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasisOfUpload {
            get {
                return this.BasisOfUploadField;
            }
            set {
                if ((object.ReferenceEquals(this.BasisOfUploadField, value) != true)) {
                    this.BasisOfUploadField = value;
                    this.RaisePropertyChanged("BasisOfUpload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookType {
            get {
                return this.BookTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookTypeField, value) != true)) {
                    this.BookTypeField = value;
                    this.RaisePropertyChanged("BookType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Count {
            get {
                return this.CountField;
            }
            set {
                if ((object.ReferenceEquals(this.CountField, value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadFileName {
            get {
                return this.DownloadFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadFileNameField, value) != true)) {
                    this.DownloadFileNameField = value;
                    this.RaisePropertyChanged("DownloadFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelColoum {
            get {
                return this.ExcelColoumField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelColoumField, value) != true)) {
                    this.ExcelColoumField = value;
                    this.RaisePropertyChanged("ExcelColoum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionalityName {
            get {
                return this.FunctionalityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionalityNameField, value) != true)) {
                    this.FunctionalityNameField = value;
                    this.RaisePropertyChanged("FunctionalityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LostRsn {
            get {
                return this.LostRsnField;
            }
            set {
                if ((object.ReferenceEquals(this.LostRsnField, value) != true)) {
                    this.LostRsnField = value;
                    this.RaisePropertyChanged("LostRsn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter {
            get {
                return this.ParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterField, value) != true)) {
                    this.ParameterField = value;
                    this.RaisePropertyChanged("Parameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyClassName {
            get {
                return this.PropertyClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyClassNameField, value) != true)) {
                    this.PropertyClassNameField = value;
                    this.RaisePropertyChanged("PropertyClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyRersultClassName {
            get {
                return this.PropertyRersultClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyRersultClassNameField, value) != true)) {
                    this.PropertyRersultClassNameField = value;
                    this.RaisePropertyChanged("PropertyRersultClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sheetname {
            get {
                return this.SheetnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SheetnameField, value) != true)) {
                    this.SheetnameField = value;
                    this.RaisePropertyChanged("Sheetname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadStatus {
            get {
                return this.UploadStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadStatusField, value) != true)) {
                    this.UploadStatusField = value;
                    this.RaisePropertyChanged("UploadStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadType {
            get {
                return this.UploadTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadTypeField, value) != true)) {
                    this.UploadTypeField = value;
                    this.RaisePropertyChanged("UploadType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverNote", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class CoverNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessOfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessSrvChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteAssignedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteAssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CoverNoteGenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteGenTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CoverNotePrintCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispEndSrlNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayStartSrlNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndSrlNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartSrlNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessOffice {
            get {
                return this.BusinessOfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessOfficeField, value) != true)) {
                    this.BusinessOfficeField = value;
                    this.RaisePropertyChanged("BusinessOffice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessSrvChannelName {
            get {
                return this.BusinessSrvChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessSrvChannelNameField, value) != true)) {
                    this.BusinessSrvChannelNameField = value;
                    this.RaisePropertyChanged("BusinessSrvChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteAssignedStatus {
            get {
                return this.CoverNoteAssignedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteAssignedStatusField, value) != true)) {
                    this.CoverNoteAssignedStatusField = value;
                    this.RaisePropertyChanged("CoverNoteAssignedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteAssignedTo {
            get {
                return this.CoverNoteAssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteAssignedToField, value) != true)) {
                    this.CoverNoteAssignedToField = value;
                    this.RaisePropertyChanged("CoverNoteAssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CoverNoteGenDate {
            get {
                return this.CoverNoteGenDateField;
            }
            set {
                if ((this.CoverNoteGenDateField.Equals(value) != true)) {
                    this.CoverNoteGenDateField = value;
                    this.RaisePropertyChanged("CoverNoteGenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteGenTime {
            get {
                return this.CoverNoteGenTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteGenTimeField, value) != true)) {
                    this.CoverNoteGenTimeField = value;
                    this.RaisePropertyChanged("CoverNoteGenTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CoverNotePrintCount {
            get {
                return this.CoverNotePrintCountField;
            }
            set {
                if ((this.CoverNotePrintCountField.Equals(value) != true)) {
                    this.CoverNotePrintCountField = value;
                    this.RaisePropertyChanged("CoverNotePrintCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispEndSrlNo {
            get {
                return this.DispEndSrlNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DispEndSrlNoField, value) != true)) {
                    this.DispEndSrlNoField = value;
                    this.RaisePropertyChanged("DispEndSrlNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayStartSrlNo {
            get {
                return this.DisplayStartSrlNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayStartSrlNoField, value) != true)) {
                    this.DisplayStartSrlNoField = value;
                    this.RaisePropertyChanged("DisplayStartSrlNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndSrlNo {
            get {
                return this.EndSrlNoField;
            }
            set {
                if ((this.EndSrlNoField.Equals(value) != true)) {
                    this.EndSrlNoField = value;
                    this.RaisePropertyChanged("EndSrlNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryID {
            get {
                return this.InterMediaryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryIDField, value) != true)) {
                    this.InterMediaryIDField = value;
                    this.RaisePropertyChanged("InterMediaryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryType {
            get {
                return this.IntermediaryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryTypeField, value) != true)) {
                    this.IntermediaryTypeField = value;
                    this.RaisePropertyChanged("IntermediaryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuedBy {
            get {
                return this.IssuedByField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedByField, value) != true)) {
                    this.IssuedByField = value;
                    this.RaisePropertyChanged("IssuedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOB {
            get {
                return this.LOBField;
            }
            set {
                if ((object.ReferenceEquals(this.LOBField, value) != true)) {
                    this.LOBField = value;
                    this.RaisePropertyChanged("LOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartSrlNo {
            get {
                return this.StartSrlNoField;
            }
            set {
                if ((this.StartSrlNoField.Equals(value) != true)) {
                    this.StartSrlNoField = value;
                    this.RaisePropertyChanged("StartSrlNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DesignationMaster", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class DesignationMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanCreateDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerticalLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanCreateDeal {
            get {
                return this.CanCreateDealField;
            }
            set {
                if ((object.ReferenceEquals(this.CanCreateDealField, value) != true)) {
                    this.CanCreateDealField = value;
                    this.RaisePropertyChanged("CanCreateDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignationCode {
            get {
                return this.DesignationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationCodeField, value) != true)) {
                    this.DesignationCodeField = value;
                    this.RaisePropertyChanged("DesignationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignationName {
            get {
                return this.DesignationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationNameField, value) != true)) {
                    this.DesignationNameField = value;
                    this.RaisePropertyChanged("DesignationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalResource {
            get {
                return this.ExternalResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalResourceField, value) != true)) {
                    this.ExternalResourceField = value;
                    this.RaisePropertyChanged("ExternalResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerticalLevel {
            get {
                return this.VerticalLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticalLevelField, value) != true)) {
                    this.VerticalLevelField = value;
                    this.RaisePropertyChanged("VerticalLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExcelUploadLog", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial struct ExcelUploadLog : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelDatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelUploadTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelDatetime {
            get {
                return this.ExcelDatetimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelDatetimeField, value) != true)) {
                    this.ExcelDatetimeField = value;
                    this.RaisePropertyChanged("ExcelDatetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelErrorMsg {
            get {
                return this.ExcelErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelErrorMsgField, value) != true)) {
                    this.ExcelErrorMsgField = value;
                    this.RaisePropertyChanged("ExcelErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelMasterCode {
            get {
                return this.ExcelMasterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelMasterCodeField, value) != true)) {
                    this.ExcelMasterCodeField = value;
                    this.RaisePropertyChanged("ExcelMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelStatus {
            get {
                return this.ExcelStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelStatusField, value) != true)) {
                    this.ExcelStatusField = value;
                    this.RaisePropertyChanged("ExcelStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelUploadType {
            get {
                return this.ExcelUploadTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelUploadTypeField, value) != true)) {
                    this.ExcelUploadTypeField = value;
                    this.RaisePropertyChanged("ExcelUploadType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelUserID {
            get {
                return this.ExcelUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelUserIDField, value) != true)) {
                    this.ExcelUserIDField = value;
                    this.RaisePropertyChanged("ExcelUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericLov", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class GenericLov : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LovTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlName {
            get {
                return this.ControlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlNameField, value) != true)) {
                    this.ControlNameField = value;
                    this.RaisePropertyChanged("ControlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LovType {
            get {
                return this.LovTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LovTypeField, value) != true)) {
                    this.LovTypeField = value;
                    this.RaisePropertyChanged("LovType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyClass {
            get {
                return this.PropertyClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyClassField, value) != true)) {
                    this.PropertyClassField = value;
                    this.RaisePropertyChanged("PropertyClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultList {
            get {
                return this.ResultListField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultListField, value) != true)) {
                    this.ResultListField = value;
                    this.RaisePropertyChanged("ResultList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntermediaryCategory", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class IntermediaryCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AppLiCableForBusinessChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AppLiCableForServicingChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommissionRemunerationPaymentRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LicenceNoRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PANNoRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServiceTaxCompField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SourceBankRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidityPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AppLiCableForBusinessChannel {
            get {
                return this.AppLiCableForBusinessChannelField;
            }
            set {
                if ((this.AppLiCableForBusinessChannelField.Equals(value) != true)) {
                    this.AppLiCableForBusinessChannelField = value;
                    this.RaisePropertyChanged("AppLiCableForBusinessChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AppLiCableForServicingChannel {
            get {
                return this.AppLiCableForServicingChannelField;
            }
            set {
                if ((this.AppLiCableForServicingChannelField.Equals(value) != true)) {
                    this.AppLiCableForServicingChannelField = value;
                    this.RaisePropertyChanged("AppLiCableForServicingChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommissionRemunerationPaymentRequired {
            get {
                return this.CommissionRemunerationPaymentRequiredField;
            }
            set {
                if ((this.CommissionRemunerationPaymentRequiredField.Equals(value) != true)) {
                    this.CommissionRemunerationPaymentRequiredField = value;
                    this.RaisePropertyChanged("CommissionRemunerationPaymentRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LicenceNoRequired {
            get {
                return this.LicenceNoRequiredField;
            }
            set {
                if ((this.LicenceNoRequiredField.Equals(value) != true)) {
                    this.LicenceNoRequiredField = value;
                    this.RaisePropertyChanged("LicenceNoRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PANNoRequired {
            get {
                return this.PANNoRequiredField;
            }
            set {
                if ((this.PANNoRequiredField.Equals(value) != true)) {
                    this.PANNoRequiredField = value;
                    this.RaisePropertyChanged("PANNoRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServiceTaxComp {
            get {
                return this.ServiceTaxCompField;
            }
            set {
                if ((this.ServiceTaxCompField.Equals(value) != true)) {
                    this.ServiceTaxCompField = value;
                    this.RaisePropertyChanged("ServiceTaxComp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SourceBankRequired {
            get {
                return this.SourceBankRequiredField;
            }
            set {
                if ((this.SourceBankRequiredField.Equals(value) != true)) {
                    this.SourceBankRequiredField = value;
                    this.RaisePropertyChanged("SourceBankRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidityPeriod {
            get {
                return this.ValidityPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidityPeriodField, value) != true)) {
                    this.ValidityPeriodField = value;
                    this.RaisePropertyChanged("ValidityPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeAreaVillage", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeAreaVillage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaVillageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaVillageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuralUrbanFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaVillageCode {
            get {
                return this.AreaVillageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageCodeField, value) != true)) {
                    this.AreaVillageCodeField = value;
                    this.RaisePropertyChanged("AreaVillageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaVillageName {
            get {
                return this.AreaVillageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaVillageNameField, value) != true)) {
                    this.AreaVillageNameField = value;
                    this.RaisePropertyChanged("AreaVillageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuralUrbanFlag {
            get {
                return this.RuralUrbanFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.RuralUrbanFlagField, value) != true)) {
                    this.RuralUrbanFlagField = value;
                    this.RaisePropertyChanged("RuralUrbanFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeBank", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeBank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IFSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MICRCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchCode {
            get {
                return this.BankBranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchCodeField, value) != true)) {
                    this.BankBranchCodeField = value;
                    this.RaisePropertyChanged("BankBranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchName {
            get {
                return this.BankBranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchNameField, value) != true)) {
                    this.BankBranchNameField = value;
                    this.RaisePropertyChanged("BankBranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankCode {
            get {
                return this.BankCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankCodeField, value) != true)) {
                    this.BankCodeField = value;
                    this.RaisePropertyChanged("BankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IFSCode {
            get {
                return this.IFSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IFSCodeField, value) != true)) {
                    this.IFSCodeField = value;
                    this.RaisePropertyChanged("IFSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MICRCode {
            get {
                return this.MICRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MICRCodeField, value) != true)) {
                    this.MICRCodeField = value;
                    this.RaisePropertyChanged("MICRCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeBankBranch", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeBankBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankCodeDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IFSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MICRCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchCode {
            get {
                return this.BankBranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchCodeField, value) != true)) {
                    this.BankBranchCodeField = value;
                    this.RaisePropertyChanged("BankBranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchName {
            get {
                return this.BankBranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchNameField, value) != true)) {
                    this.BankBranchNameField = value;
                    this.RaisePropertyChanged("BankBranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankCodeDisplay {
            get {
                return this.BankCodeDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.BankCodeDisplayField, value) != true)) {
                    this.BankCodeDisplayField = value;
                    this.RaisePropertyChanged("BankCodeDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IFSCode {
            get {
                return this.IFSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IFSCodeField, value) != true)) {
                    this.IFSCodeField = value;
                    this.RaisePropertyChanged("IFSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MICRCode {
            get {
                return this.MICRCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MICRCodeField, value) != true)) {
                    this.MICRCodeField = value;
                    this.RaisePropertyChanged("MICRCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeDesignationMaster", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeDesignationMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Designation_DealCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Designation_ExternalResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Designation_verticalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignationCode {
            get {
                return this.DesignationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationCodeField, value) != true)) {
                    this.DesignationCodeField = value;
                    this.RaisePropertyChanged("DesignationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesignationName {
            get {
                return this.DesignationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationNameField, value) != true)) {
                    this.DesignationNameField = value;
                    this.RaisePropertyChanged("DesignationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation_DealCreation {
            get {
                return this.Designation_DealCreationField;
            }
            set {
                if ((object.ReferenceEquals(this.Designation_DealCreationField, value) != true)) {
                    this.Designation_DealCreationField = value;
                    this.RaisePropertyChanged("Designation_DealCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation_ExternalResource {
            get {
                return this.Designation_ExternalResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.Designation_ExternalResourceField, value) != true)) {
                    this.Designation_ExternalResourceField = value;
                    this.RaisePropertyChanged("Designation_ExternalResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation_vertical {
            get {
                return this.Designation_verticalField;
            }
            set {
                if ((object.ReferenceEquals(this.Designation_verticalField, value) != true)) {
                    this.Designation_verticalField = value;
                    this.RaisePropertyChanged("Designation_vertical");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeIntermediaryCategory", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeIntermediaryCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidityPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidityPeriod {
            get {
                return this.ValidityPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidityPeriodField, value) != true)) {
                    this.ValidityPeriodField = value;
                    this.RaisePropertyChanged("ValidityPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeLicense", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalLicenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseHolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EffectiveDateField, value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiryDateField, value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalLicenseNo {
            get {
                return this.InternalLicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalLicenseNoField, value) != true)) {
                    this.InternalLicenseNoField = value;
                    this.RaisePropertyChanged("InternalLicenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseHolderName {
            get {
                return this.LicenseHolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseHolderNameField, value) != true)) {
                    this.LicenseHolderNameField = value;
                    this.RaisePropertyChanged("LicenseHolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNo {
            get {
                return this.LicenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNoField, value) != true)) {
                    this.LicenseNoField = value;
                    this.RaisePropertyChanged("LicenseNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeParentRole", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeParentRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypePIN", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypePIN : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourieCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIdField, value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourieCode {
            get {
                return this.CourieCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourieCodeField, value) != true)) {
                    this.CourieCodeField = value;
                    this.RaisePropertyChanged("CourieCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourierName {
            get {
                return this.CourierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourierNameField, value) != true)) {
                    this.CourierNameField = value;
                    this.RaisePropertyChanged("CourierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinLocality {
            get {
                return this.PinLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PinLocalityField, value) != true)) {
                    this.PinLocalityField = value;
                    this.RaisePropertyChanged("PinLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LOVTypeState", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class LOVTypeState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LovFetch", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial struct LovFetch : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColoumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeForLovFetchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatatypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementProposalModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GridViewValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ILPOSPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsEntityNeedToConfigurableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterMediaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManualCoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumYnCreateDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ProductNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionContinueProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionModeOFoperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object SessionOtherFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionQueryStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificProposalModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeCatagoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewProposalForABCConfigurableField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoCoverNoteNo {
            get {
                return this.AutoCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoCoverNoteNoField, value) != true)) {
                    this.AutoCoverNoteNoField = value;
                    this.RaisePropertyChanged("AutoCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackPath {
            get {
                return this.BackPathField;
            }
            set {
                if ((object.ReferenceEquals(this.BackPathField, value) != true)) {
                    this.BackPathField = value;
                    this.RaisePropertyChanged("BackPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankID {
            get {
                return this.BankIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankIDField, value) != true)) {
                    this.BankIDField = value;
                    this.RaisePropertyChanged("BankID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColoumName {
            get {
                return this.ColoumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColoumNameField, value) != true)) {
                    this.ColoumNameField = value;
                    this.RaisePropertyChanged("ColoumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCodeForLovFetch {
            get {
                return this.CompanyCodeForLovFetchField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeForLovFetchField, value) != true)) {
                    this.CompanyCodeForLovFetchField = value;
                    this.RaisePropertyChanged("CompanyCodeForLovFetch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteNo {
            get {
                return this.CoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteNoField, value) != true)) {
                    this.CoverNoteNoField = value;
                    this.RaisePropertyChanged("CoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Datatype {
            get {
                return this.DatatypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DatatypeField, value) != true)) {
                    this.DatatypeField = value;
                    this.RaisePropertyChanged("Datatype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealID {
            get {
                return this.DealIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DealIDField, value) != true)) {
                    this.DealIDField = value;
                    this.RaisePropertyChanged("DealID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementNo {
            get {
                return this.EndorsementNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementNoField, value) != true)) {
                    this.EndorsementNoField = value;
                    this.RaisePropertyChanged("EndorsementNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementProposalModification {
            get {
                return this.EndorsementProposalModificationField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementProposalModificationField, value) != true)) {
                    this.EndorsementProposalModificationField = value;
                    this.RaisePropertyChanged("EndorsementProposalModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GridViewValue {
            get {
                return this.GridViewValueField;
            }
            set {
                if ((this.GridViewValueField.Equals(value) != true)) {
                    this.GridViewValueField = value;
                    this.RaisePropertyChanged("GridViewValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ILPOSPolicyNo {
            get {
                return this.ILPOSPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ILPOSPolicyNoField, value) != true)) {
                    this.ILPOSPolicyNoField = value;
                    this.RaisePropertyChanged("ILPOSPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsEntityNeedToConfigurable {
            get {
                return this.InsEntityNeedToConfigurableField;
            }
            set {
                if ((object.ReferenceEquals(this.InsEntityNeedToConfigurableField, value) != true)) {
                    this.InsEntityNeedToConfigurableField = value;
                    this.RaisePropertyChanged("InsEntityNeedToConfigurable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryCode {
            get {
                return this.InterMediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryCodeField, value) != true)) {
                    this.InterMediaryCodeField = value;
                    this.RaisePropertyChanged("InterMediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterMediaryName {
            get {
                return this.InterMediaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InterMediaryNameField, value) != true)) {
                    this.InterMediaryNameField = value;
                    this.RaisePropertyChanged("InterMediaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelMode {
            get {
                return this.LabelModeField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelModeField, value) != true)) {
                    this.LabelModeField = value;
                    this.RaisePropertyChanged("LabelMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManualCoverNoteNo {
            get {
                return this.ManualCoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ManualCoverNoteNoField, value) != true)) {
                    this.ManualCoverNoteNoField = value;
                    this.RaisePropertyChanged("ManualCoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumYnCreateDeal {
            get {
                return this.NumYnCreateDealField;
            }
            set {
                if ((object.ReferenceEquals(this.NumYnCreateDealField, value) != true)) {
                    this.NumYnCreateDealField = value;
                    this.RaisePropertyChanged("NumYnCreateDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeCode {
            get {
                return this.OfficeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeCodeField, value) != true)) {
                    this.OfficeCodeField = value;
                    this.RaisePropertyChanged("OfficeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNo {
            get {
                return this.PolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNoField, value) != true)) {
                    this.PolicyNoField = value;
                    this.RaisePropertyChanged("PolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductIndex {
            get {
                return this.ProductIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIndexField, value) != true)) {
                    this.ProductIndexField = value;
                    this.RaisePropertyChanged("ProductIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ProductNode {
            get {
                return this.ProductNodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNodeField, value) != true)) {
                    this.ProductNodeField = value;
                    this.RaisePropertyChanged("ProductNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatus {
            get {
                return this.ProposalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusField, value) != true)) {
                    this.ProposalStatusField = value;
                    this.RaisePropertyChanged("ProposalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuotationNumber {
            get {
                return this.QuotationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotationNumberField, value) != true)) {
                    this.QuotationNumberField = value;
                    this.RaisePropertyChanged("QuotationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowValue {
            get {
                return this.RowValueField;
            }
            set {
                if ((this.RowValueField.Equals(value) != true)) {
                    this.RowValueField = value;
                    this.RaisePropertyChanged("RowValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaveType {
            get {
                return this.SaveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SaveTypeField, value) != true)) {
                    this.SaveTypeField = value;
                    this.RaisePropertyChanged("SaveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionContinueProposal {
            get {
                return this.SessionContinueProposalField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionContinueProposalField, value) != true)) {
                    this.SessionContinueProposalField = value;
                    this.RaisePropertyChanged("SessionContinueProposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionModeOFoperation {
            get {
                return this.SessionModeOFoperationField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionModeOFoperationField, value) != true)) {
                    this.SessionModeOFoperationField = value;
                    this.RaisePropertyChanged("SessionModeOFoperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object SessionOtherFilters {
            get {
                return this.SessionOtherFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionOtherFiltersField, value) != true)) {
                    this.SessionOtherFiltersField = value;
                    this.RaisePropertyChanged("SessionOtherFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionQueryString {
            get {
                return this.SessionQueryStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionQueryStringField, value) != true)) {
                    this.SessionQueryStringField = value;
                    this.RaisePropertyChanged("SessionQueryString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificProposalModification {
            get {
                return this.SpecificProposalModificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificProposalModificationField, value) != true)) {
                    this.SpecificProposalModificationField = value;
                    this.RaisePropertyChanged("SpecificProposalModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubMode {
            get {
                return this.SubModeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubModeField, value) != true)) {
                    this.SubModeField = value;
                    this.RaisePropertyChanged("SubMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDateField, value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserTypeCatagory {
            get {
                return this.UserTypeCatagoryField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeCatagoryField, value) != true)) {
                    this.UserTypeCatagoryField = value;
                    this.RaisePropertyChanged("UserTypeCatagory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewProposalForABCConfigurable {
            get {
                return this.ViewProposalForABCConfigurableField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewProposalForABCConfigurableField, value) != true)) {
                    this.ViewProposalForABCConfigurableField = value;
                    this.RaisePropertyChanged("ViewProposalForABCConfigurable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pincode", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial class Pincode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DespatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertTransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsRuralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPinCodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIdField, value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourierCode {
            get {
                return this.CourierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourierCodeField, value) != true)) {
                    this.CourierCodeField = value;
                    this.RaisePropertyChanged("CourierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourierName {
            get {
                return this.CourierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourierNameField, value) != true)) {
                    this.CourierNameField = value;
                    this.RaisePropertyChanged("CourierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DespatchID {
            get {
                return this.DespatchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DespatchIDField, value) != true)) {
                    this.DespatchIDField = value;
                    this.RaisePropertyChanged("DespatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertTransDate {
            get {
                return this.InsertTransDateField;
            }
            set {
                if ((this.InsertTransDateField.Equals(value) != true)) {
                    this.InsertTransDateField = value;
                    this.RaisePropertyChanged("InsertTransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsRural {
            get {
                return this.IsRuralField;
            }
            set {
                if ((object.ReferenceEquals(this.IsRuralField, value) != true)) {
                    this.IsRuralField = value;
                    this.RaisePropertyChanged("IsRural");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCityCode {
            get {
                return this.OldCityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCityCodeField, value) != true)) {
                    this.OldCityCodeField = value;
                    this.RaisePropertyChanged("OldCityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCityDistrictCode {
            get {
                return this.OldCityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCityDistrictCodeField, value) != true)) {
                    this.OldCityDistrictCodeField = value;
                    this.RaisePropertyChanged("OldCityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCountryCode {
            get {
                return this.OldCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCountryCodeField, value) != true)) {
                    this.OldCountryCodeField = value;
                    this.RaisePropertyChanged("OldCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPinCode {
            get {
                return this.OldPinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPinCodeField, value) != true)) {
                    this.OldPinCodeField = value;
                    this.RaisePropertyChanged("OldPinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPinCodeLocality {
            get {
                return this.OldPinCodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPinCodeLocalityField, value) != true)) {
                    this.OldPinCodeLocalityField = value;
                    this.RaisePropertyChanged("OldPinCodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldStateCode {
            get {
                return this.OldStateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldStateCodeField, value) != true)) {
                    this.OldStateCodeField = value;
                    this.RaisePropertyChanged("OldStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCodeLocality {
            get {
                return this.PinCodeLocalityField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeLocalityField, value) != true)) {
                    this.PinCodeLocalityField = value;
                    this.RaisePropertyChanged("PinCodeLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QualityCheck", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class QualityCheck : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BtnStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoinsuranceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNoteTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DTrowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtrowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpectedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLinkApplicableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsMultiBlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumdataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumdataID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.QualityCheckItem[] QualityCheckItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectionReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RowPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubmitButtonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SumInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TodayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtCheckPointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtDocuMentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtIsMandatoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtValidationFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtValidationReqdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtValidationSecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxtremarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidateQCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool boolWorkFlowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankId {
            get {
                return this.BankIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BankIdField, value) != true)) {
                    this.BankIdField = value;
                    this.RaisePropertyChanged("BankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolProposal {
            get {
                return this.BoolProposalField;
            }
            set {
                if ((this.BoolProposalField.Equals(value) != true)) {
                    this.BoolProposalField = value;
                    this.RaisePropertyChanged("BoolProposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BtnStatus {
            get {
                return this.BtnStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BtnStatusField, value) != true)) {
                    this.BtnStatusField = value;
                    this.RaisePropertyChanged("BtnStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIdField, value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckValue {
            get {
                return this.CheckValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckValueField, value) != true)) {
                    this.CheckValueField = value;
                    this.RaisePropertyChanged("CheckValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoinsuranceType {
            get {
                return this.CoinsuranceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoinsuranceTypeField, value) != true)) {
                    this.CoinsuranceTypeField = value;
                    this.RaisePropertyChanged("CoinsuranceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteNo {
            get {
                return this.CoverNoteNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteNoField, value) != true)) {
                    this.CoverNoteNoField = value;
                    this.RaisePropertyChanged("CoverNoteNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverNoteType {
            get {
                return this.CoverNoteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNoteTypeField, value) != true)) {
                    this.CoverNoteTypeField = value;
                    this.RaisePropertyChanged("CoverNoteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DTrow {
            get {
                return this.DTrowField;
            }
            set {
                if ((this.DTrowField.Equals(value) != true)) {
                    this.DTrowField = value;
                    this.RaisePropertyChanged("DTrow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtrowCount {
            get {
                return this.DtrowCountField;
            }
            set {
                if ((object.ReferenceEquals(this.DtrowCountField, value) != true)) {
                    this.DtrowCountField = value;
                    this.RaisePropertyChanged("DtrowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpectedValue {
            get {
                return this.ExpectedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpectedValueField, value) != true)) {
                    this.ExpectedValueField = value;
                    this.RaisePropertyChanged("ExpectedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLinkApplicable {
            get {
                return this.IsLinkApplicableField;
            }
            set {
                if ((this.IsLinkApplicableField.Equals(value) != true)) {
                    this.IsLinkApplicableField = value;
                    this.RaisePropertyChanged("IsLinkApplicable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsMultiBlock {
            get {
                return this.IsMultiBlockField;
            }
            set {
                if ((object.ReferenceEquals(this.IsMultiBlockField, value) != true)) {
                    this.IsMultiBlockField = value;
                    this.RaisePropertyChanged("IsMultiBlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterPolicyNo {
            get {
                return this.MasterPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterPolicyNoField, value) != true)) {
                    this.MasterPolicyNoField = value;
                    this.RaisePropertyChanged("MasterPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeIndex {
            get {
                return this.NodeIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeIndexField, value) != true)) {
                    this.NodeIndexField = value;
                    this.RaisePropertyChanged("NodeIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumdataID {
            get {
                return this.NumdataIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NumdataIDField, value) != true)) {
                    this.NumdataIDField = value;
                    this.RaisePropertyChanged("NumdataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumdataID2 {
            get {
                return this.NumdataID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NumdataID2Field, value) != true)) {
                    this.NumdataID2Field = value;
                    this.RaisePropertyChanged("NumdataID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentStatus {
            get {
                return this.PaymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentStatusField, value) != true)) {
                    this.PaymentStatusField = value;
                    this.RaisePropertyChanged("PaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductIndex {
            get {
                return this.ProductIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIndexField, value) != true)) {
                    this.ProductIndexField = value;
                    this.RaisePropertyChanged("ProductIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNumber {
            get {
                return this.ProposalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNumberField, value) != true)) {
                    this.ProposalNumberField = value;
                    this.RaisePropertyChanged("ProposalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatus {
            get {
                return this.ProposalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusField, value) != true)) {
                    this.ProposalStatusField = value;
                    this.RaisePropertyChanged("ProposalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.QualityCheckItem[] QualityCheckItems {
            get {
                return this.QualityCheckItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityCheckItemsField, value) != true)) {
                    this.QualityCheckItemsField = value;
                    this.RaisePropertyChanged("QualityCheckItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectionReason {
            get {
                return this.RejectionReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectionReasonField, value) != true)) {
                    this.RejectionReasonField = value;
                    this.RaisePropertyChanged("RejectionReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemarksAll {
            get {
                return this.RemarksAllField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksAllField, value) != true)) {
                    this.RemarksAllField = value;
                    this.RaisePropertyChanged("RemarksAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RowPolicy {
            get {
                return this.RowPolicyField;
            }
            set {
                if ((this.RowPolicyField.Equals(value) != true)) {
                    this.RowPolicyField = value;
                    this.RaisePropertyChanged("RowPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubmitButton {
            get {
                return this.SubmitButtonField;
            }
            set {
                if ((this.SubmitButtonField.Equals(value) != true)) {
                    this.SubmitButtonField = value;
                    this.RaisePropertyChanged("SubmitButton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SumInsured {
            get {
                return this.SumInsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.SumInsuredField, value) != true)) {
                    this.SumInsuredField = value;
                    this.RaisePropertyChanged("SumInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TodayDate {
            get {
                return this.TodayDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TodayDateField, value) != true)) {
                    this.TodayDateField = value;
                    this.RaisePropertyChanged("TodayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtCheckPointName {
            get {
                return this.TxtCheckPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtCheckPointNameField, value) != true)) {
                    this.TxtCheckPointNameField = value;
                    this.RaisePropertyChanged("TxtCheckPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtControlType {
            get {
                return this.TxtControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtControlTypeField, value) != true)) {
                    this.TxtControlTypeField = value;
                    this.RaisePropertyChanged("TxtControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtDocuMentName {
            get {
                return this.TxtDocuMentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtDocuMentNameField, value) != true)) {
                    this.TxtDocuMentNameField = value;
                    this.RaisePropertyChanged("TxtDocuMentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtIsMandatory {
            get {
                return this.TxtIsMandatoryField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtIsMandatoryField, value) != true)) {
                    this.TxtIsMandatoryField = value;
                    this.RaisePropertyChanged("TxtIsMandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtValidationField {
            get {
                return this.TxtValidationFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtValidationFieldField, value) != true)) {
                    this.TxtValidationFieldField = value;
                    this.RaisePropertyChanged("TxtValidationField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtValidationReqd {
            get {
                return this.TxtValidationReqdField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtValidationReqdField, value) != true)) {
                    this.TxtValidationReqdField = value;
                    this.RaisePropertyChanged("TxtValidationReqd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxtValidationSec {
            get {
                return this.TxtValidationSecField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtValidationSecField, value) != true)) {
                    this.TxtValidationSecField = value;
                    this.RaisePropertyChanged("TxtValidationSec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Txtremarks {
            get {
                return this.TxtremarksField;
            }
            set {
                if ((object.ReferenceEquals(this.TxtremarksField, value) != true)) {
                    this.TxtremarksField = value;
                    this.RaisePropertyChanged("Txtremarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidateQC {
            get {
                return this.ValidateQCField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidateQCField, value) != true)) {
                    this.ValidateQCField = value;
                    this.RaisePropertyChanged("ValidateQC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool boolWorkFlow {
            get {
                return this.boolWorkFlowField;
            }
            set {
                if ((this.boolWorkFlowField.Equals(value) != true)) {
                    this.boolWorkFlowField = value;
                    this.RaisePropertyChanged("boolWorkFlow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QualityCheckItem", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class QualityCheckItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckBoxMandatoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckPointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChkPointValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpectedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLinkRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsTextBoxRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumdataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QualityCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationReqdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationSectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckBoxMandatory {
            get {
                return this.CheckBoxMandatoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckBoxMandatoryField, value) != true)) {
                    this.CheckBoxMandatoryField = value;
                    this.RaisePropertyChanged("CheckBoxMandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckPointName {
            get {
                return this.CheckPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckPointNameField, value) != true)) {
                    this.CheckPointNameField = value;
                    this.RaisePropertyChanged("CheckPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckStatus {
            get {
                return this.CheckStatusField;
            }
            set {
                if ((this.CheckStatusField.Equals(value) != true)) {
                    this.CheckStatusField = value;
                    this.RaisePropertyChanged("CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChkPointVal {
            get {
                return this.ChkPointValField;
            }
            set {
                if ((object.ReferenceEquals(this.ChkPointValField, value) != true)) {
                    this.ChkPointValField = value;
                    this.RaisePropertyChanged("ChkPointVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmValue {
            get {
                return this.ConfirmValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmValueField, value) != true)) {
                    this.ConfirmValueField = value;
                    this.RaisePropertyChanged("ConfirmValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlType {
            get {
                return this.ControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlTypeField, value) != true)) {
                    this.ControlTypeField = value;
                    this.RaisePropertyChanged("ControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpectedValue {
            get {
                return this.ExpectedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpectedValueField, value) != true)) {
                    this.ExpectedValueField = value;
                    this.RaisePropertyChanged("ExpectedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLinkRequired {
            get {
                return this.IsLinkRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLinkRequiredField, value) != true)) {
                    this.IsLinkRequiredField = value;
                    this.RaisePropertyChanged("IsLinkRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsTextBoxRequired {
            get {
                return this.IsTextBoxRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.IsTextBoxRequiredField, value) != true)) {
                    this.IsTextBoxRequiredField = value;
                    this.RaisePropertyChanged("IsTextBoxRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumdataID {
            get {
                return this.NumdataIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NumdataIDField, value) != true)) {
                    this.NumdataIDField = value;
                    this.RaisePropertyChanged("NumdataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QualityChecked {
            get {
                return this.QualityCheckedField;
            }
            set {
                if ((this.QualityCheckedField.Equals(value) != true)) {
                    this.QualityCheckedField = value;
                    this.RaisePropertyChanged("QualityChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationField {
            get {
                return this.ValidationFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationFieldField, value) != true)) {
                    this.ValidationFieldField = value;
                    this.RaisePropertyChanged("ValidationField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationReqd {
            get {
                return this.ValidationReqdField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationReqdField, value) != true)) {
                    this.ValidationReqdField = value;
                    this.RaisePropertyChanged("ValidationReqd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationSection {
            get {
                return this.ValidationSectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationSectionField, value) != true)) {
                    this.ValidationSectionField = value;
                    this.RaisePropertyChanged("ValidationSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsClaimPendingEndorsementAllowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentRoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidityPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsClaimPendingEndorsementAllow {
            get {
                return this.IsClaimPendingEndorsementAllowField;
            }
            set {
                if ((this.IsClaimPendingEndorsementAllowField.Equals(value) != true)) {
                    this.IsClaimPendingEndorsementAllowField = value;
                    this.RaisePropertyChanged("IsClaimPendingEndorsementAllow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfOperation {
            get {
                return this.ModeOfOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfOperationField, value) != true)) {
                    this.ModeOfOperationField = value;
                    this.RaisePropertyChanged("ModeOfOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentRoleName {
            get {
                return this.ParentRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentRoleNameField, value) != true)) {
                    this.ParentRoleNameField = value;
                    this.RaisePropertyChanged("ParentRoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeField, value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeUnit {
            get {
                return this.TimeUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeUnitField, value) != true)) {
                    this.TimeUnitField = value;
                    this.RaisePropertyChanged("TimeUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeUnitType {
            get {
                return this.TimeUnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeUnitTypeField, value) != true)) {
                    this.TimeUnitTypeField = value;
                    this.RaisePropertyChanged("TimeUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidityPeriod {
            get {
                return this.ValidityPeriodField;
            }
            set {
                if ((this.ValidityPeriodField.Equals(value) != true)) {
                    this.ValidityPeriodField = value;
                    this.RaisePropertyChanged("ValidityPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial class State : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] RegionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((this.RegionCodeField.Equals(value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] RegionList {
            get {
                return this.RegionListField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionListField, value) != true)) {
                    this.RegionListField = value;
                    this.RaisePropertyChanged("RegionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppUseridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataEntryUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISSuspendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsInternalUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordValidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneISDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneSTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLocationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VLEIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllLocation {
            get {
                return this.AllLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.AllLocationField, value) != true)) {
                    this.AllLocationField = value;
                    this.RaisePropertyChanged("AllLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppUserid {
            get {
                return this.AppUseridField;
            }
            set {
                if ((object.ReferenceEquals(this.AppUseridField, value) != true)) {
                    this.AppUseridField = value;
                    this.RaisePropertyChanged("AppUserid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthdateField, value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataEntryUser {
            get {
                return this.DataEntryUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DataEntryUserField, value) != true)) {
                    this.DataEntryUserField = value;
                    this.RaisePropertyChanged("DataEntryUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultLocation {
            get {
                return this.DefaultLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultLocationField, value) != true)) {
                    this.DefaultLocationField = value;
                    this.RaisePropertyChanged("DefaultLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSuspended {
            get {
                return this.ISSuspendedField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSuspendedField, value) != true)) {
                    this.ISSuspendedField = value;
                    this.RaisePropertyChanged("ISSuspended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryCode {
            get {
                return this.IntermediaryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryCodeField, value) != true)) {
                    this.IntermediaryCodeField = value;
                    this.RaisePropertyChanged("IntermediaryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsInternalUser {
            get {
                return this.IsInternalUserField;
            }
            set {
                if ((object.ReferenceEquals(this.IsInternalUserField, value) != true)) {
                    this.IsInternalUserField = value;
                    this.RaisePropertyChanged("IsInternalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loaction {
            get {
                return this.LoactionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoactionField, value) != true)) {
                    this.LoactionField = value;
                    this.RaisePropertyChanged("Loaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginEmail {
            get {
                return this.LoginEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginEmailField, value) != true)) {
                    this.LoginEmailField = value;
                    this.RaisePropertyChanged("LoginEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordValidity {
            get {
                return this.PasswordValidityField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordValidityField, value) != true)) {
                    this.PasswordValidityField = value;
                    this.RaisePropertyChanged("PasswordValidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneISD {
            get {
                return this.TelephoneISDField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneISDField, value) != true)) {
                    this.TelephoneISDField = value;
                    this.RaisePropertyChanged("TelephoneISD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneSTD {
            get {
                return this.TelephoneSTDField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneSTDField, value) != true)) {
                    this.TelephoneSTDField = value;
                    this.RaisePropertyChanged("TelephoneSTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransId {
            get {
                return this.TransIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransIdField, value) != true)) {
                    this.TransIdField = value;
                    this.RaisePropertyChanged("TransId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransTime {
            get {
                return this.TransTimeField;
            }
            set {
                if ((this.TransTimeField.Equals(value) != true)) {
                    this.TransTimeField = value;
                    this.RaisePropertyChanged("TransTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLocationList {
            get {
                return this.UserLocationListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLocationListField, value) != true)) {
                    this.UserLocationListField = value;
                    this.RaisePropertyChanged("UserLocationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRoleList {
            get {
                return this.UserRoleListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleListField, value) != true)) {
                    this.UserRoleListField = value;
                    this.RaisePropertyChanged("UserRoleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSubType {
            get {
                return this.UserSubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSubTypeField, value) != true)) {
                    this.UserSubTypeField = value;
                    this.RaisePropertyChanged("UserSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserValue {
            get {
                return this.UserValueField;
            }
            set {
                if ((object.ReferenceEquals(this.UserValueField, value) != true)) {
                    this.UserValueField = value;
                    this.RaisePropertyChanged("UserValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VLEId {
            get {
                return this.VLEIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VLEIdField, value) != true)) {
                    this.VLEIdField = value;
                    this.RaisePropertyChanged("VLEId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserIdentity", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    public partial class UserIdentity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataEntryUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityAnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValidityPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataEntryUser {
            get {
                return this.DataEntryUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DataEntryUserField, value) != true)) {
                    this.DataEntryUserField = value;
                    this.RaisePropertyChanged("DataEntryUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAns {
            get {
                return this.SecurityAnsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAnsField, value) != true)) {
                    this.SecurityAnsField = value;
                    this.RaisePropertyChanged("SecurityAns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQues {
            get {
                return this.SecurityQuesField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuesField, value) != true)) {
                    this.SecurityQuesField = value;
                    this.RaisePropertyChanged("SecurityQues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransDate {
            get {
                return this.TransDateField;
            }
            set {
                if ((this.TransDateField.Equals(value) != true)) {
                    this.TransDateField = value;
                    this.RaisePropertyChanged("TransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransId {
            get {
                return this.TransIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransIdField, value) != true)) {
                    this.TransIdField = value;
                    this.RaisePropertyChanged("TransId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSubType {
            get {
                return this.UserSubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSubTypeField, value) != true)) {
                    this.UserSubTypeField = value;
                    this.RaisePropertyChanged("UserSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValidityPeriod {
            get {
                return this.ValidityPeriodField;
            }
            set {
                if ((this.ValidityPeriodField.Equals(value) != true)) {
                    this.ValidityPeriodField = value;
                    this.RaisePropertyChanged("ValidityPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDistrictMaster", Namespace="http://schemas.datacontract.org/2004/07/GenericMasterBL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
    public partial class CityDistrictMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] CityDistrictFlagListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityDistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] EQZoneListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertTransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RSMDZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] RSMDZoneListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STFIZOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PrjPASS.GCGenericService.KeyValuePairList[] STFIZoneListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictCode {
            get {
                return this.CityDistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictCodeField, value) != true)) {
                    this.CityDistrictCodeField = value;
                    this.RaisePropertyChanged("CityDistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictFlag {
            get {
                return this.CityDistrictFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictFlagField, value) != true)) {
                    this.CityDistrictFlagField = value;
                    this.RaisePropertyChanged("CityDistrictFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] CityDistrictFlagList {
            get {
                return this.CityDistrictFlagListField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictFlagListField, value) != true)) {
                    this.CityDistrictFlagListField = value;
                    this.RaisePropertyChanged("CityDistrictFlagList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityDistrictName {
            get {
                return this.CityDistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityDistrictNameField, value) != true)) {
                    this.CityDistrictNameField = value;
                    this.RaisePropertyChanged("CityDistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQZone {
            get {
                return this.EQZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneField, value) != true)) {
                    this.EQZoneField = value;
                    this.RaisePropertyChanged("EQZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] EQZoneList {
            get {
                return this.EQZoneListField;
            }
            set {
                if ((object.ReferenceEquals(this.EQZoneListField, value) != true)) {
                    this.EQZoneListField = value;
                    this.RaisePropertyChanged("EQZoneList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertTransDate {
            get {
                return this.InsertTransDateField;
            }
            set {
                if ((this.InsertTransDateField.Equals(value) != true)) {
                    this.InsertTransDateField = value;
                    this.RaisePropertyChanged("InsertTransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIDField, value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RSMDZone {
            get {
                return this.RSMDZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.RSMDZoneField, value) != true)) {
                    this.RSMDZoneField = value;
                    this.RaisePropertyChanged("RSMDZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] RSMDZoneList {
            get {
                return this.RSMDZoneListField;
            }
            set {
                if ((object.ReferenceEquals(this.RSMDZoneListField, value) != true)) {
                    this.RSMDZoneListField = value;
                    this.RaisePropertyChanged("RSMDZoneList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STFIZOne {
            get {
                return this.STFIZOneField;
            }
            set {
                if ((object.ReferenceEquals(this.STFIZOneField, value) != true)) {
                    this.STFIZOneField = value;
                    this.RaisePropertyChanged("STFIZOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PrjPASS.GCGenericService.KeyValuePairList[] STFIZoneList {
            get {
                return this.STFIZoneListField;
            }
            set {
                if ((object.ReferenceEquals(this.STFIZoneListField, value) != true)) {
                    this.STFIZoneListField = value;
                    this.RaisePropertyChanged("STFIZoneList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBarName {
            get {
                return this.TitleBarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBarNameField, value) != true)) {
                    this.TitleBarNameField = value;
                    this.RaisePropertyChanged("TitleBarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GCGenericService.IGenericService")]
    public interface IGenericService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditGMCPlan", ReplyAction="http://tempuri.org/IGenericService/EditGMCPlanResponse")]
        PrjPASS.GCGenericService.GMCPlan EditGMCPlan(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditGMCPlan", ReplyAction="http://tempuri.org/IGenericService/EditGMCPlanResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GMCPlan> EditGMCPlanAsync(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetGMCPlan", ReplyAction="http://tempuri.org/IGenericService/GetGMCPlanResponse")]
        PrjPASS.GCGenericService.GMCPlan GetGMCPlan(string strLVTokenID, string objLVGMCPlanCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetGMCPlan", ReplyAction="http://tempuri.org/IGenericService/GetGMCPlanResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GMCPlan> GetGMCPlanAsync(string strLVTokenID, string objLVGMCPlanCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/CheckPolicyExistenceForPlan", ReplyAction="http://tempuri.org/IGenericService/CheckPolicyExistenceForPlanResponse")]
        PrjPASS.GCGenericService.GenericResult CheckPolicyExistenceForPlan(string strLVTokenID, string strLVPlanCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/CheckPolicyExistenceForPlan", ReplyAction="http://tempuri.org/IGenericService/CheckPolicyExistenceForPlanResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> CheckPolicyExistenceForPlanAsync(string strLVTokenID, string strLVPlanCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetTypeExcel", ReplyAction="http://tempuri.org/IGenericService/GetTypeExcelResponse")]
        PrjPASS.GCGenericService.GenericResult GetTypeExcel(string strLVTokenID, string Uploadtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetTypeExcel", ReplyAction="http://tempuri.org/IGenericService/GetTypeExcelResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetTypeExcelAsync(string strLVTokenID, string Uploadtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveAadharDetails", ReplyAction="http://tempuri.org/IGenericService/SaveAadharDetailsResponse")]
        PrjPASS.GCGenericService.GenericResult SaveAadharDetails(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeAadhar objLVAadhar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveAadharDetails", ReplyAction="http://tempuri.org/IGenericService/SaveAadharDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> SaveAadharDetailsAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeAadhar objLVAadhar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAadharDetails", ReplyAction="http://tempuri.org/IGenericService/GetAadharDetailsResponse")]
        PrjPASS.GCGenericService.GenericResult GetAadharDetails(string strLVTokenID, string strLVAadharNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAadharDetails", ReplyAction="http://tempuri.org/IGenericService/GetAadharDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAadharDetailsAsync(string strLVTokenID, string strLVAadharNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPortalIDLockingService", ReplyAction="http://tempuri.org/IGenericService/GetPortalIDLockingServiceResponse")]
        PrjPASS.GCGenericService.GenericResult GetPortalIDLockingService(string strLVTokenID, string strProducerCode, string strOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPortalIDLockingService", ReplyAction="http://tempuri.org/IGenericService/GetPortalIDLockingServiceResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPortalIDLockingServiceAsync(string strLVTokenID, string strProducerCode, string strOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVROLocation", ReplyAction="http://tempuri.org/IGenericService/GetLOVROLocationResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVROLocation(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVROLocation", ReplyAction="http://tempuri.org/IGenericService/GetLOVROLocationResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVROLocationAsync(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDetailsByProducerCode", ReplyAction="http://tempuri.org/IGenericService/GetDetailsByProducerCodeResponse")]
        PrjPASS.GCGenericService.GenericResult GetDetailsByProducerCode(string strLVTokenID, string strProducerCode, string strType, string strCode, string strName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDetailsByProducerCode", ReplyAction="http://tempuri.org/IGenericService/GetDetailsByProducerCodeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDetailsByProducerCodeAsync(string strLVTokenID, string strProducerCode, string strType, string strCode, string strName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveRoutingCovernote", ReplyAction="http://tempuri.org/IGenericService/SaveRoutingCovernoteResponse")]
        PrjPASS.GCGenericService.GenericResult SaveRoutingCovernote(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveRoutingCovernote", ReplyAction="http://tempuri.org/IGenericService/SaveRoutingCovernoteResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> SaveRoutingCovernoteAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVRoutingCovernote", ReplyAction="http://tempuri.org/IGenericService/GetLOVRoutingCovernoteResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVRoutingCovernote(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVRoutingCovernote", ReplyAction="http://tempuri.org/IGenericService/GetLOVRoutingCovernoteResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVRoutingCovernoteAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetRoutingCovernote", ReplyAction="http://tempuri.org/IGenericService/GetRoutingCovernoteResponse")]
        PrjPASS.GCGenericService.GenericResult GetRoutingCovernote(string strLVTokenID, string strLVReferenceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetRoutingCovernote", ReplyAction="http://tempuri.org/IGenericService/GetRoutingCovernoteResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetRoutingCovernoteAsync(string strLVTokenID, string strLVReferenceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetOrganizationList", ReplyAction="http://tempuri.org/IGenericService/GetOrganizationListResponse")]
        PrjPASS.GCGenericService.GenericResult GetOrganizationList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetOrganizationList", ReplyAction="http://tempuri.org/IGenericService/GetOrganizationListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetOrganizationListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSmsPointsList", ReplyAction="http://tempuri.org/IGenericService/GetSmsPointsListResponse")]
        PrjPASS.GCGenericService.GenericResult GetSmsPointsList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSmsPointsList", ReplyAction="http://tempuri.org/IGenericService/GetSmsPointsListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSmsPointsListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAllOfficeList", ReplyAction="http://tempuri.org/IGenericService/GetAllOfficeListResponse")]
        PrjPASS.GCGenericService.GenericResult GetAllOfficeList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAllOfficeList", ReplyAction="http://tempuri.org/IGenericService/GetAllOfficeListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAllOfficeListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyCustEIADetails", ReplyAction="http://tempuri.org/IGenericService/GetPolicyCustEIADetailsResponse")]
        PrjPASS.GCGenericService.PolicyCustData GetPolicyCustEIADetails(string strLVTokenID, string strpolicyno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyCustEIADetails", ReplyAction="http://tempuri.org/IGenericService/GetPolicyCustEIADetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.PolicyCustData> GetPolicyCustEIADetailsAsync(string strLVTokenID, string strpolicyno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCustomerListWithEIADetails", ReplyAction="http://tempuri.org/IGenericService/GetLOVCustomerListWithEIADetailsResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCustomerListWithEIADetails(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeCustomerSearch objLVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCustomerListWithEIADetails", ReplyAction="http://tempuri.org/IGenericService/GetLOVCustomerListWithEIADetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCustomerListWithEIADetailsAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeCustomerSearch objLVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/getIntermediaryIdByloginMailId", ReplyAction="http://tempuri.org/IGenericService/getIntermediaryIdByloginMailIdResponse")]
        PrjPASS.GCGenericService.GenericResult getIntermediaryIdByloginMailId(string strLVTokenID, string strEmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/getIntermediaryIdByloginMailId", ReplyAction="http://tempuri.org/IGenericService/getIntermediaryIdByloginMailIdResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> getIntermediaryIdByloginMailIdAsync(string strLVTokenID, string strEmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetQuoteList", ReplyAction="http://tempuri.org/IGenericService/GetQuoteListResponse")]
        PrjPASS.GCGenericService.GenericResult GetQuoteList(string strLVTokenID, string strFromDate, string strTodate, string strStatus, string strProductName, string strQuoteNum, string strCustomerName, string strIntermediarycode, int quotedays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetQuoteList", ReplyAction="http://tempuri.org/IGenericService/GetQuoteListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetQuoteListAsync(string strLVTokenID, string strFromDate, string strTodate, string strStatus, string strProductName, string strQuoteNum, string strCustomerName, string strIntermediarycode, int quotedays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetProductListAgentPortal", ReplyAction="http://tempuri.org/IGenericService/GetProductListAgentPortalResponse")]
        PrjPASS.GCGenericService.GenericResult GetProductListAgentPortal(string strLVTokenID, string strProductCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetProductListAgentPortal", ReplyAction="http://tempuri.org/IGenericService/GetProductListAgentPortalResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetProductListAgentPortalAsync(string strLVTokenID, string strProductCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSearchCustomer", ReplyAction="http://tempuri.org/IGenericService/GetSearchCustomerResponse")]
        PrjPASS.GCGenericService.GenericResult GetSearchCustomer(string strLVTokenID, string strCustID, string strCustName, string strblkFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSearchCustomer", ReplyAction="http://tempuri.org/IGenericService/GetSearchCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSearchCustomerAsync(string strLVTokenID, string strCustID, string strCustName, string strblkFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyDetailsAP", ReplyAction="http://tempuri.org/IGenericService/GetPolicyDetailsAPResponse")]
        PrjPASS.GCGenericService.GenericResult GetPolicyDetailsAP(string strLVTokenID, string strfromdate, string strtodate, string strcustname, string strpolicyno, string strproductcode, string strIntermediaryID, string strvehicleregno, string strmemberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyDetailsAP", ReplyAction="http://tempuri.org/IGenericService/GetPolicyDetailsAPResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyDetailsAPAsync(string strLVTokenID, string strfromdate, string strtodate, string strcustname, string strpolicyno, string strproductcode, string strIntermediaryID, string strvehicleregno, string strmemberid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetMaritalStatusList", ReplyAction="http://tempuri.org/IGenericService/GetMaritalStatusListResponse")]
        PrjPASS.GCGenericService.GenericResult GetMaritalStatusList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetMaritalStatusList", ReplyAction="http://tempuri.org/IGenericService/GetMaritalStatusListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetMaritalStatusListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDuplicateCustomerList", ReplyAction="http://tempuri.org/IGenericService/GetDuplicateCustomerListResponse")]
        PrjPASS.GCGenericService.GenericResult GetDuplicateCustomerList(string strLVTokenID, string strLVOrgiCustomerID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDuplicateCustomerList", ReplyAction="http://tempuri.org/IGenericService/GetDuplicateCustomerListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDuplicateCustomerListAsync(string strLVTokenID, string strLVOrgiCustomerID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetTransactionDetails", ReplyAction="http://tempuri.org/IGenericService/GetTransactionDetailsResponse")]
        PrjPASS.GCGenericService.GenericResult GetTransactionDetails(string strLVTokenID, string strCode, string strType, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strPolicyNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetTransactionDetails", ReplyAction="http://tempuri.org/IGenericService/GetTransactionDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetTransactionDetailsAsync(string strLVTokenID, string strCode, string strType, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strPolicyNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ViewActivePolicy", ReplyAction="http://tempuri.org/IGenericService/ViewActivePolicyResponse")]
        PrjPASS.GCGenericService.GenericResult ViewActivePolicy(string strLVTokenID, PrjPASS.GCGenericService.UWFetch ObjlvParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ViewActivePolicy", ReplyAction="http://tempuri.org/IGenericService/ViewActivePolicyResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> ViewActivePolicyAsync(string strLVTokenID, PrjPASS.GCGenericService.UWFetch ObjlvParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIMDCustomerIDByPolicyNo", ReplyAction="http://tempuri.org/IGenericService/GetIMDCustomerIDByPolicyNoResponse")]
        PrjPASS.GCGenericService.PolicyService GetIMDCustomerIDByPolicyNo(string strLVTokenID, string strPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIMDCustomerIDByPolicyNo", ReplyAction="http://tempuri.org/IGenericService/GetIMDCustomerIDByPolicyNoResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.PolicyService> GetIMDCustomerIDByPolicyNoAsync(string strLVTokenID, string strPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPendingProposalList", ReplyAction="http://tempuri.org/IGenericService/GetPendingProposalListResponse")]
        PrjPASS.GCGenericService.GenericResult GetPendingProposalList(string strLVTokenID, string strEntityType, string strEntityCode, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strProposalNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPendingProposalList", ReplyAction="http://tempuri.org/IGenericService/GetPendingProposalListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPendingProposalListAsync(string strLVTokenID, string strEntityType, string strEntityCode, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strProposalNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCNBookListByAgentID", ReplyAction="http://tempuri.org/IGenericService/GetCNBookListByAgentIDResponse")]
        PrjPASS.GCGenericService.GenericResult GetCNBookListByAgentID(string strLVTokenID, string strAgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCNBookListByAgentID", ReplyAction="http://tempuri.org/IGenericService/GetCNBookListByAgentIDResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCNBookListByAgentIDAsync(string strLVTokenID, string strAgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetNextUnusedLeafNoByCNBook", ReplyAction="http://tempuri.org/IGenericService/GetNextUnusedLeafNoByCNBookResponse")]
        PrjPASS.GCGenericService.GenericResult GetNextUnusedLeafNoByCNBook(string strLVTokenID, string strCNBookNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetNextUnusedLeafNoByCNBook", ReplyAction="http://tempuri.org/IGenericService/GetNextUnusedLeafNoByCNBookResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetNextUnusedLeafNoByCNBookAsync(string strLVTokenID, string strCNBookNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCNLeafListByFieldUser", ReplyAction="http://tempuri.org/IGenericService/GetCNLeafListByFieldUserResponse")]
        PrjPASS.GCGenericService.GenericResult GetCNLeafListByFieldUser(string strLVTokenID, string strLVFieldUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCNLeafListByFieldUser", ReplyAction="http://tempuri.org/IGenericService/GetCNLeafListByFieldUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCNLeafListByFieldUserAsync(string strLVTokenID, string strLVFieldUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/UpdateCoverNoteLeafStatus", ReplyAction="http://tempuri.org/IGenericService/UpdateCoverNoteLeafStatusResponse")]
        PrjPASS.GCGenericService.CoverNoteEntry UpdateCoverNoteLeafStatus(string strLVTokenID, PrjPASS.GCGenericService.CoverNoteEntry objCovernote, string strCNFlag, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/UpdateCoverNoteLeafStatus", ReplyAction="http://tempuri.org/IGenericService/UpdateCoverNoteLeafStatusResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.CoverNoteEntry> UpdateCoverNoteLeafStatusAsync(string strLVTokenID, PrjPASS.GCGenericService.CoverNoteEntry objCovernote, string strCNFlag, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCancelReasonList", ReplyAction="http://tempuri.org/IGenericService/GetCancelReasonListResponse")]
        PrjPASS.GCGenericService.GenericResult GetCancelReasonList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCancelReasonList", ReplyAction="http://tempuri.org/IGenericService/GetCancelReasonListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCancelReasonListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDiscrepancyReasonList", ReplyAction="http://tempuri.org/IGenericService/GetDiscrepancyReasonListResponse")]
        PrjPASS.GCGenericService.GenericResult GetDiscrepancyReasonList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDiscrepancyReasonList", ReplyAction="http://tempuri.org/IGenericService/GetDiscrepancyReasonListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDiscrepancyReasonListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLostReasonList", ReplyAction="http://tempuri.org/IGenericService/GetLostReasonListResponse")]
        PrjPASS.GCGenericService.GenericResult GetLostReasonList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLostReasonList", ReplyAction="http://tempuri.org/IGenericService/GetLostReasonListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLostReasonListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPhyCancelledRsnForCNLeaf", ReplyAction="http://tempuri.org/IGenericService/GetPhyCancelledRsnForCNLeafResponse")]
        PrjPASS.GCGenericService.GenericResult GetPhyCancelledRsnForCNLeaf(string strLVTokenID, string strCNLeafNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPhyCancelledRsnForCNLeaf", ReplyAction="http://tempuri.org/IGenericService/GetPhyCancelledRsnForCNLeafResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPhyCancelledRsnForCNLeafAsync(string strLVTokenID, string strCNLeafNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyDetailByPolicyNo", ReplyAction="http://tempuri.org/IGenericService/GetPolicyDetailByPolicyNoResponse")]
        PrjPASS.GCGenericService.GenericResult GetPolicyDetailByPolicyNo(string strLVTokenID, string strPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyDetailByPolicyNo", ReplyAction="http://tempuri.org/IGenericService/GetPolicyDetailByPolicyNoResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyDetailByPolicyNoAsync(string strLVTokenID, string strPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyDetailByVehicleDetail", ReplyAction="http://tempuri.org/IGenericService/GetPolicyDetailByVehicleDetailResponse")]
        PrjPASS.GCGenericService.GenericResult GetPolicyDetailByVehicleDetail(string strLVTokenID, string strVehicleRegNo, string strChassisNo, string strEngineNo, string strPolicyNo, string strManualCoverNoteNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyDetailByVehicleDetail", ReplyAction="http://tempuri.org/IGenericService/GetPolicyDetailByVehicleDetailResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyDetailByVehicleDetailAsync(string strLVTokenID, string strVehicleRegNo, string strChassisNo, string strEngineNo, string strPolicyNo, string strManualCoverNoteNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetRenewalProposalList", ReplyAction="http://tempuri.org/IGenericService/GetRenewalProposalListResponse")]
        PrjPASS.GCGenericService.GenericResult GetRenewalProposalList(string strLVTokenID, string strProducerCode, string strFromDate, string strToDate, string strPolicyNo, string strUserId, string strUserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetRenewalProposalList", ReplyAction="http://tempuri.org/IGenericService/GetRenewalProposalListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetRenewalProposalListAsync(string strLVTokenID, string strProducerCode, string strFromDate, string strToDate, string strPolicyNo, string strUserId, string strUserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyHistory", ReplyAction="http://tempuri.org/IGenericService/GetPolicyHistoryResponse")]
        PrjPASS.GCGenericService.GenericResult GetPolicyHistory(string strLVTokenID, string strLVPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPolicyHistory", ReplyAction="http://tempuri.org/IGenericService/GetPolicyHistoryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyHistoryAsync(string strLVTokenID, string strLVPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/IsCorporateDomain", ReplyAction="http://tempuri.org/IGenericService/IsCorporateDomainResponse")]
        PrjPASS.GCGenericService.GenericResult IsCorporateDomain(string strLVTokenID, string strDomainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/IsCorporateDomain", ReplyAction="http://tempuri.org/IGenericService/IsCorporateDomainResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> IsCorporateDomainAsync(string strLVTokenID, string strDomainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIntermediaryCodeByEmailID", ReplyAction="http://tempuri.org/IGenericService/GetIntermediaryCodeByEmailIDResponse")]
        PrjPASS.GCGenericService.GenericResult GetIntermediaryCodeByEmailID(string strLVTokenID, string strEmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIntermediaryCodeByEmailID", ReplyAction="http://tempuri.org/IGenericService/GetIntermediaryCodeByEmailIDResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIntermediaryCodeByEmailIDAsync(string strLVTokenID, string strEmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDefaultCountry", ReplyAction="http://tempuri.org/IGenericService/GetDefaultCountryResponse")]
        PrjPASS.GCGenericService.GenericResult GetDefaultCountry(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDefaultCountry", ReplyAction="http://tempuri.org/IGenericService/GetDefaultCountryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDefaultCountryAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/CheckProposalExistenceForCustomer", ReplyAction="http://tempuri.org/IGenericService/CheckProposalExistenceForCustomerResponse")]
        PrjPASS.GCGenericService.GenericResult CheckProposalExistenceForCustomer(string strLVTokenID, string strCustomerCode, string strCustomerName, string strSuccessMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/CheckProposalExistenceForCustomer", ReplyAction="http://tempuri.org/IGenericService/CheckProposalExistenceForCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> CheckProposalExistenceForCustomerAsync(string strLVTokenID, string strCustomerCode, string strCustomerName, string strSuccessMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVProducerOffice", ReplyAction="http://tempuri.org/IGenericService/GetLOVProducerOfficeResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVProducerOffice(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeOffice objOffice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVProducerOffice", ReplyAction="http://tempuri.org/IGenericService/GetLOVProducerOfficeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVProducerOfficeAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeOffice objOffice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVProducerOfficeField", ReplyAction="http://tempuri.org/IGenericService/GetLOVProducerOfficeFieldResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVProducerOfficeField(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeFieldUserDetails objfield);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVProducerOfficeField", ReplyAction="http://tempuri.org/IGenericService/GetLOVProducerOfficeFieldResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVProducerOfficeFieldAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeFieldUserDetails objfield);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetProposalsPendingForRenewal", ReplyAction="http://tempuri.org/IGenericService/GetProposalsPendingForRenewalResponse")]
        PrjPASS.GCGenericService.GenericResult GetProposalsPendingForRenewal(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetProposalsPendingForRenewal", ReplyAction="http://tempuri.org/IGenericService/GetProposalsPendingForRenewalResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetProposalsPendingForRenewalAsync(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/IsValidPolicy", ReplyAction="http://tempuri.org/IGenericService/IsValidPolicyResponse")]
        PrjPASS.GCGenericService.GenericResult IsValidPolicy(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/IsValidPolicy", ReplyAction="http://tempuri.org/IGenericService/IsValidPolicyResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> IsValidPolicyAsync(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDetailsByVLEId", ReplyAction="http://tempuri.org/IGenericService/GetDetailsByVLEIdResponse")]
        PrjPASS.GCGenericService.GenericResult GetDetailsByVLEId(string strLVTokenID, string strLVVLEId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDetailsByVLEId", ReplyAction="http://tempuri.org/IGenericService/GetDetailsByVLEIdResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDetailsByVLEIdAsync(string strLVTokenID, string strLVVLEId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerByProducerCode", ReplyAction="http://tempuri.org/IGenericService/GetCustomerByProducerCodeResponse")]
        PrjPASS.GCGenericService.GenericResult GetCustomerByProducerCode(string strLVTokenID, string strProducerCode, string strCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerByProducerCode", ReplyAction="http://tempuri.org/IGenericService/GetCustomerByProducerCodeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerByProducerCodeAsync(string strLVTokenID, string strProducerCode, string strCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/UpdatePANNo", ReplyAction="http://tempuri.org/IGenericService/UpdatePANNoResponse")]
        PrjPASS.GCGenericService.GenericResult UpdatePANNo(string strLVTokenID, string strType, string strCode, string strPANNo, string strUserId, string strIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/UpdatePANNo", ReplyAction="http://tempuri.org/IGenericService/UpdatePANNoResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> UpdatePANNoAsync(string strLVTokenID, string strType, string strCode, string strPANNo, string strUserId, string strIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAgeGroupList", ReplyAction="http://tempuri.org/IGenericService/GetAgeGroupListResponse")]
        PrjPASS.GCGenericService.GenericResult GetAgeGroupList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAgeGroupList", ReplyAction="http://tempuri.org/IGenericService/GetAgeGroupListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAgeGroupListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSumInsuredList", ReplyAction="http://tempuri.org/IGenericService/GetSumInsuredListResponse")]
        PrjPASS.GCGenericService.GenericResult GetSumInsuredList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSumInsuredList", ReplyAction="http://tempuri.org/IGenericService/GetSumInsuredListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSumInsuredListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddGMCPlan", ReplyAction="http://tempuri.org/IGenericService/AddGMCPlanResponse")]
        PrjPASS.GCGenericService.GMCPlan AddGMCPlan(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddGMCPlan", ReplyAction="http://tempuri.org/IGenericService/AddGMCPlanResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GMCPlan> AddGMCPlanAsync(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVParentCustomer", ReplyAction="http://tempuri.org/IGenericService/GetLOVParentCustomerResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVParentCustomer(string strLVTokenID, string strLVCustomerCode, string strLVCustomerName, string strLVCustomerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVParentCustomer", ReplyAction="http://tempuri.org/IGenericService/GetLOVParentCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVParentCustomerAsync(string strLVTokenID, string strLVCustomerCode, string strLVCustomerName, string strLVCustomerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchProposalInformation", ReplyAction="http://tempuri.org/IGenericService/FetchProposalInformationResponse")]
        PrjPASS.GCGenericService.GenericMasterResult FetchProposalInformation(string strLVTokenID, PrjPASS.GCGenericService.LovFetchInput ObjLVShowlovValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchProposalInformation", ReplyAction="http://tempuri.org/IGenericService/FetchProposalInformationResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchProposalInformationAsync(string strLVTokenID, PrjPASS.GCGenericService.LovFetchInput ObjLVShowlovValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetOccupationList", ReplyAction="http://tempuri.org/IGenericService/GetOccupationListResponse")]
        PrjPASS.GCGenericService.GenericResult GetOccupationList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetOccupationList", ReplyAction="http://tempuri.org/IGenericService/GetOccupationListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetOccupationListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchQualityForNewProposal", ReplyAction="http://tempuri.org/IGenericService/FetchQualityForNewProposalResponse")]
        PrjPASS.GCGenericService.GenericMasterResult FetchQualityForNewProposal(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchQualityForNewProposal", ReplyAction="http://tempuri.org/IGenericService/FetchQualityForNewProposalResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchQualityForNewProposalAsync(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchQualityUpdate", ReplyAction="http://tempuri.org/IGenericService/FetchQualityUpdateResponse")]
        PrjPASS.GCGenericService.GenericMasterResult FetchQualityUpdate(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode, string StrWorkflowid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchQualityUpdate", ReplyAction="http://tempuri.org/IGenericService/FetchQualityUpdateResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchQualityUpdateAsync(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode, string StrWorkflowid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetProposalRelatedData", ReplyAction="http://tempuri.org/IGenericService/GetProposalRelatedDataResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetProposalRelatedData(string strLVTokenID, string strWorkFlowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetProposalRelatedData", ReplyAction="http://tempuri.org/IGenericService/GetProposalRelatedDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetProposalRelatedDataAsync(string strLVTokenID, string strWorkFlowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetBankAccountType", ReplyAction="http://tempuri.org/IGenericService/GetBankAccountTypeResponse")]
        PrjPASS.GCGenericService.GenericResult GetBankAccountType(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetBankAccountType", ReplyAction="http://tempuri.org/IGenericService/GetBankAccountTypeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetBankAccountTypeAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVBankBranch", ReplyAction="http://tempuri.org/IGenericService/GetLOVBankBranchResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVBankBranch(string strLVTokenID, string strBankCode, string strBankBranchCode, string strBankBranchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVBankBranch", ReplyAction="http://tempuri.org/IGenericService/GetLOVBankBranchResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVBankBranchAsync(string strLVTokenID, string strBankCode, string strBankBranchCode, string strBankBranchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ActivateUser", ReplyAction="http://tempuri.org/IGenericService/ActivateUserResponse")]
        PrjPASS.GCGenericService.User ActivateUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ActivateUser", ReplyAction="http://tempuri.org/IGenericService/ActivateUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> ActivateUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ChangePassword", ReplyAction="http://tempuri.org/IGenericService/ChangePasswordResponse")]
        PrjPASS.GCGenericService.User ChangePassword(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ChangePassword", ReplyAction="http://tempuri.org/IGenericService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> ChangePasswordAsync(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ForgotPassword", ReplyAction="http://tempuri.org/IGenericService/ForgotPasswordResponse")]
        PrjPASS.GCGenericService.User ForgotPassword(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/ForgotPassword", ReplyAction="http://tempuri.org/IGenericService/ForgotPasswordResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> ForgotPasswordAsync(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AuthenticateUser", ReplyAction="http://tempuri.org/IGenericService/AuthenticateUserResponse")]
        PrjPASS.GCGenericService.User AuthenticateUser(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AuthenticateUser", ReplyAction="http://tempuri.org/IGenericService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AuthenticateUserAsync(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSecretQuestions", ReplyAction="http://tempuri.org/IGenericService/GetSecretQuestionsResponse")]
        PrjPASS.GCGenericService.GenericResult GetSecretQuestions(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSecretQuestions", ReplyAction="http://tempuri.org/IGenericService/GetSecretQuestionsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSecretQuestionsAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EncryptText", ReplyAction="http://tempuri.org/IGenericService/EncryptTextResponse")]
        string EncryptText(string strLVTokenID, string plainText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EncryptText", ReplyAction="http://tempuri.org/IGenericService/EncryptTextResponse")]
        System.Threading.Tasks.Task<string> EncryptTextAsync(string strLVTokenID, string plainText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/DecryptText", ReplyAction="http://tempuri.org/IGenericService/DecryptTextResponse")]
        string DecryptText(string strLVTokenID, string plainText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/DecryptText", ReplyAction="http://tempuri.org/IGenericService/DecryptTextResponse")]
        System.Threading.Tasks.Task<string> DecryptTextAsync(string strLVTokenID, string plainText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerIDByPolicyNo", ReplyAction="http://tempuri.org/IGenericService/GetCustomerIDByPolicyNoResponse")]
        PrjPASS.GCGenericService.GenericResult GetCustomerIDByPolicyNo(string strLVTokenID, string strPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerIDByPolicyNo", ReplyAction="http://tempuri.org/IGenericService/GetCustomerIDByPolicyNoResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerIDByPolicyNoAsync(string strLVTokenID, string strPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerIDByDetails", ReplyAction="http://tempuri.org/IGenericService/GetCustomerIDByDetailsResponse")]
        PrjPASS.GCGenericService.GenericResult GetCustomerIDByDetails(string strLVTokenID, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerIDByDetails", ReplyAction="http://tempuri.org/IGenericService/GetCustomerIDByDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerIDByDetailsAsync(string strLVTokenID, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerIDByCustomerDetails", ReplyAction="http://tempuri.org/IGenericService/GetCustomerIDByCustomerDetailsResponse")]
        PrjPASS.GCGenericService.GenericResult GetCustomerIDByCustomerDetails(string strLVTokenID, string StrCustomerType, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail, string StrSalutation, string StrPANNo, string StrUIDNo, string StrTANNo, string StrPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerIDByCustomerDetails", ReplyAction="http://tempuri.org/IGenericService/GetCustomerIDByCustomerDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerIDByCustomerDetailsAsync(string strLVTokenID, string StrCustomerType, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail, string StrSalutation, string StrPANNo, string StrUIDNo, string StrTANNo, string StrPolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddUser", ReplyAction="http://tempuri.org/IGenericService/AddUserResponse")]
        PrjPASS.GCGenericService.User AddUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddUser", ReplyAction="http://tempuri.org/IGenericService/AddUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AddUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditUser", ReplyAction="http://tempuri.org/IGenericService/EditUserResponse")]
        PrjPASS.GCGenericService.User EditUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditUser", ReplyAction="http://tempuri.org/IGenericService/EditUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> EditUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AssignRoleToUser", ReplyAction="http://tempuri.org/IGenericService/AssignRoleToUserResponse")]
        PrjPASS.GCGenericService.User AssignRoleToUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AssignRoleToUser", ReplyAction="http://tempuri.org/IGenericService/AssignRoleToUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AssignRoleToUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AssignLocationToUser", ReplyAction="http://tempuri.org/IGenericService/AssignLocationToUserResponse")]
        PrjPASS.GCGenericService.User AssignLocationToUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AssignLocationToUser", ReplyAction="http://tempuri.org/IGenericService/AssignLocationToUserResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AssignLocationToUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetUserInfo", ReplyAction="http://tempuri.org/IGenericService/GetUserInfoResponse")]
        PrjPASS.GCGenericService.User GetUserInfo(string strLVTokenID, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetUserInfo", ReplyAction="http://tempuri.org/IGenericService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> GetUserInfoAsync(string strLVTokenID, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetUserOfficeList", ReplyAction="http://tempuri.org/IGenericService/GetUserOfficeListResponse")]
        PrjPASS.GCGenericService.GenericResult GetUserOfficeList(string strLVTokenID, string strUserId, string strUserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetUserOfficeList", ReplyAction="http://tempuri.org/IGenericService/GetUserOfficeListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetUserOfficeListAsync(string strLVTokenID, string strUserId, string strUserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictMasterNew", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictMasterNewResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCityDistrictMasterNew(string strLVTokenID, PrjPASS.GCGenericService.CityDistrictMaster objCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictMasterNew", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictMasterNewResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCityDistrictMasterNewAsync(string strLVTokenID, PrjPASS.GCGenericService.CityDistrictMaster objCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVBankDetails", ReplyAction="http://tempuri.org/IGenericService/GetLOVBankDetailsResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVBankDetails(string strLVTokenID, string strBankName, string strBankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVBankDetails", ReplyAction="http://tempuri.org/IGenericService/GetLOVBankDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVBankDetailsAsync(string strLVTokenID, string strBankName, string strBankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveDuplicateCustomer", ReplyAction="http://tempuri.org/IGenericService/SaveDuplicateCustomerResponse")]
        PrjPASS.GCGenericService.Customer SaveDuplicateCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveDuplicateCustomer", ReplyAction="http://tempuri.org/IGenericService/SaveDuplicateCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> SaveDuplicateCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetGenderList", ReplyAction="http://tempuri.org/IGenericService/GetGenderListResponse")]
        PrjPASS.GCGenericService.GenericResult GetGenderList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetGenderList", ReplyAction="http://tempuri.org/IGenericService/GetGenderListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetGenderListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSourceofFundList", ReplyAction="http://tempuri.org/IGenericService/GetSourceofFundListResponse")]
        PrjPASS.GCGenericService.GenericResult GetSourceofFundList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSourceofFundList", ReplyAction="http://tempuri.org/IGenericService/GetSourceofFundListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSourceofFundListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetInsuranceRepositoryList", ReplyAction="http://tempuri.org/IGenericService/GetInsuranceRepositoryListResponse")]
        PrjPASS.GCGenericService.GenericResult GetInsuranceRepositoryList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetInsuranceRepositoryList", ReplyAction="http://tempuri.org/IGenericService/GetInsuranceRepositoryListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetInsuranceRepositoryListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetNationalityList", ReplyAction="http://tempuri.org/IGenericService/GetNationalityListResponse")]
        PrjPASS.GCGenericService.GenericResult GetNationalityList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetNationalityList", ReplyAction="http://tempuri.org/IGenericService/GetNationalityListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetNationalityListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetTypeofCompanyList", ReplyAction="http://tempuri.org/IGenericService/GetTypeofCompanyListResponse")]
        PrjPASS.GCGenericService.GenericResult GetTypeofCompanyList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetTypeofCompanyList", ReplyAction="http://tempuri.org/IGenericService/GetTypeofCompanyListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetTypeofCompanyListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntrHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntrHistoryDataResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVIntrHistoryData(string strLVTokenID, string strLVIntermediaryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntrHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntrHistoryDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntrHistoryDataAsync(string strLVTokenID, string strLVIntermediaryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntermediaryType", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntermediaryTypeResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVIntermediaryType(string strLVTokenID, string strLVIntermediaryTypeCode, string strLVIntermediaryTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntermediaryType", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntermediaryTypeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntermediaryTypeAsync(string strLVTokenID, string strLVIntermediaryTypeCode, string strLVIntermediaryTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntrLicense", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntrLicenseResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVIntrLicense(string strLVTokenID, string strLVLicenseNo, string strLVIntermediaryName, string strLVIntrCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntrLicense", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntrLicenseResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntrLicenseAsync(string strLVTokenID, string strLVLicenseNo, string strLVIntermediaryName, string strLVIntrCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPartner", ReplyAction="http://tempuri.org/IGenericService/GetLOVPartnerResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVPartner(string strLVTokenID, string strLVPartnerID, string strLVPartnerName, string strLVIntrCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPartner", ReplyAction="http://tempuri.org/IGenericService/GetLOVPartnerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVPartnerAsync(string strLVTokenID, string strLVPartnerID, string strLVPartnerName, string strLVIntrCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSourceBankMapID", ReplyAction="http://tempuri.org/IGenericService/GetSourceBankMapIDResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetSourceBankMapID(string strLVTokenID, string strIntermediaryRole, string strLVSelectedSourceBankID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSourceBankMapID", ReplyAction="http://tempuri.org/IGenericService/GetSourceBankMapIDResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetSourceBankMapIDAsync(string strLVTokenID, string strIntermediaryRole, string strLVSelectedSourceBankID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVParentIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetLOVParentIntermediaryResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVParentIntermediary(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVParentIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetLOVParentIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVParentIntermediaryAsync(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAssociatedAgent", ReplyAction="http://tempuri.org/IGenericService/GetLOVAssociatedAgentResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVAssociatedAgent(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAssociatedAgent", ReplyAction="http://tempuri.org/IGenericService/GetLOVAssociatedAgentResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVAssociatedAgentAsync(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPayLocation", ReplyAction="http://tempuri.org/IGenericService/GetLOVPayLocationResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVPayLocation(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPayLocation", ReplyAction="http://tempuri.org/IGenericService/GetLOVPayLocationResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVPayLocationAsync(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDuplicateIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetDuplicateIntermediaryResponse")]
        PrjPASS.GCGenericService.GenericResult GetDuplicateIntermediary(string strLVTokenID, string strIntermediaryName, string strDOB, string strPinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDuplicateIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetDuplicateIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDuplicateIntermediaryAsync(string strLVTokenID, string strIntermediaryName, string strDOB, string strPinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddOffice", ReplyAction="http://tempuri.org/IGenericService/AddOfficeResponse")]
        PrjPASS.GCGenericService.GenericMasterResult AddOffice(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddOffice", ReplyAction="http://tempuri.org/IGenericService/AddOfficeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddOfficeAsync(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditOffice", ReplyAction="http://tempuri.org/IGenericService/EditOfficeResponse")]
        PrjPASS.GCGenericService.GenericMasterResult EditOffice(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditOffice", ReplyAction="http://tempuri.org/IGenericService/EditOfficeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditOfficeAsync(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVOfficeHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVOfficeHistoryDataResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVOfficeHistoryData(string strLVTokenID, string strLVOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVOfficeHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVOfficeHistoryDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVOfficeHistoryDataAsync(string strLVTokenID, string strLVOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDuplicateCustomer", ReplyAction="http://tempuri.org/IGenericService/GetDuplicateCustomerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object GetDuplicateCustomer(string strLVTokenID, string strCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDuplicateCustomer", ReplyAction="http://tempuri.org/IGenericService/GetDuplicateCustomerResponse")]
        System.Threading.Tasks.Task<object> GetDuplicateCustomerAsync(string strLVTokenID, string strCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetUserDetails", ReplyAction="http://tempuri.org/IGenericService/GetUserDetailsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object GetUserDetails(string strLVTokenID, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetUserDetails", ReplyAction="http://tempuri.org/IGenericService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<object> GetUserDetailsAsync(string strLVTokenID, string strUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetIntermediaryResponse")]
        PrjPASS.GCGenericService.Intermediary GetIntermediary(string strLVTokenID, string strIntermediaryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Intermediary> GetIntermediaryAsync(string strLVTokenID, string strIntermediaryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDealer", ReplyAction="http://tempuri.org/IGenericService/GetDealerResponse")]
        PrjPASS.GCGenericService.GenericResult GetDealer(string strLVTokenID, PrjPASS.GCGenericService.Dealer objLVDealer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDealer", ReplyAction="http://tempuri.org/IGenericService/GetDealerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDealerAsync(string strLVTokenID, PrjPASS.GCGenericService.Dealer objLVDealer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerRoleList", ReplyAction="http://tempuri.org/IGenericService/GetCustomerRoleListResponse")]
        PrjPASS.GCGenericService.GenericResult GetCustomerRoleList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerRoleList", ReplyAction="http://tempuri.org/IGenericService/GetCustomerRoleListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerRoleListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSalutationList", ReplyAction="http://tempuri.org/IGenericService/GetSalutationListResponse")]
        PrjPASS.GCGenericService.GenericResult GetSalutationList(string strLVTokenID, string strCustomerType, string strEntityCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetSalutationList", ReplyAction="http://tempuri.org/IGenericService/GetSalutationListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSalutationListAsync(string strLVTokenID, string strCustomerType, string strEntityCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIDProofList", ReplyAction="http://tempuri.org/IGenericService/GetIDProofListResponse")]
        PrjPASS.GCGenericService.GenericResult GetIDProofList(string strLVTokenID, string strCustomerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIDProofList", ReplyAction="http://tempuri.org/IGenericService/GetIDProofListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIDProofListAsync(string strLVTokenID, string strCustomerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetEducationQualificationList", ReplyAction="http://tempuri.org/IGenericService/GetEducationQualificationListResponse")]
        PrjPASS.GCGenericService.GenericResult GetEducationQualificationList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetEducationQualificationList", ReplyAction="http://tempuri.org/IGenericService/GetEducationQualificationListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetEducationQualificationListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetInsuredDetails", ReplyAction="http://tempuri.org/IGenericService/GetInsuredDetailsResponse")]
        PrjPASS.GCGenericService.GenericResult GetInsuredDetails(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetInsuredDetails", ReplyAction="http://tempuri.org/IGenericService/GetInsuredDetailsResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetInsuredDetailsAsync(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetApprovalDataForCustomer", ReplyAction="http://tempuri.org/IGenericService/GetApprovalDataForCustomerResponse")]
        PrjPASS.GCGenericService.GenericResult GetApprovalDataForCustomer(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetApprovalDataForCustomer", ReplyAction="http://tempuri.org/IGenericService/GetApprovalDataForCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetApprovalDataForCustomerAsync(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPopUpValues", ReplyAction="http://tempuri.org/IGenericService/GetPopUpValuesResponse")]
        PrjPASS.GCGenericService.GenericResult GetPopUpValues(string strLVTokenID, string strLVQry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPopUpValues", ReplyAction="http://tempuri.org/IGenericService/GetPopUpValuesResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPopUpValuesAsync(string strLVTokenID, string strLVQry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCustomerHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVCustomerHistoryDataResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCustomerHistoryData(string strLVTokenID, string strCustomerID, int intIsPCG);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCustomerHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVCustomerHistoryDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCustomerHistoryDataAsync(string strLVTokenID, string strCustomerID, int intIsPCG);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVDuplicateCustomer", ReplyAction="http://tempuri.org/IGenericService/GetLOVDuplicateCustomerResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVDuplicateCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVDuplicateCustomer", ReplyAction="http://tempuri.org/IGenericService/GetLOVDuplicateCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVDuplicateCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetEmployee", ReplyAction="http://tempuri.org/IGenericService/GetEmployeeResponse")]
        PrjPASS.GCGenericService.Employee GetEmployee(string strLVTokenID, string strLVEmployeeCode, string strLVEmployeeType, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetEmployee", ReplyAction="http://tempuri.org/IGenericService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Employee> GetEmployeeAsync(string strLVTokenID, string strLVEmployeeCode, string strLVEmployeeType, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddEmployee", ReplyAction="http://tempuri.org/IGenericService/AddEmployeeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object AddEmployee(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddEmployee", ReplyAction="http://tempuri.org/IGenericService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<object> AddEmployeeAsync(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditEmployee", ReplyAction="http://tempuri.org/IGenericService/EditEmployeeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object EditEmployee(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditEmployee", ReplyAction="http://tempuri.org/IGenericService/EditEmployeeResponse")]
        System.Threading.Tasks.Task<object> EditEmployeeAsync(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVEmployee", ReplyAction="http://tempuri.org/IGenericService/GetLOVEmployeeResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVEmployee(string strLVTokenID, string strEmployeeType, string strDesignation, string strEmployeeCode, string strEmployeeName, string strOfficeCode, bool boolShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVEmployee", ReplyAction="http://tempuri.org/IGenericService/GetLOVEmployeeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVEmployeeAsync(string strLVTokenID, string strEmployeeType, string strDesignation, string strEmployeeCode, string strEmployeeName, string strOfficeCode, bool boolShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIndustryList", ReplyAction="http://tempuri.org/IGenericService/GetIndustryListResponse")]
        PrjPASS.GCGenericService.GenericResult GetIndustryList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIndustryList", ReplyAction="http://tempuri.org/IGenericService/GetIndustryListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIndustryListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCountry", ReplyAction="http://tempuri.org/IGenericService/GetLOVCountryResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCountry(string strLVTokenID, string strLVCountryCode, string strLVCountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCountry", ReplyAction="http://tempuri.org/IGenericService/GetLOVCountryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCountryAsync(string strLVTokenID, string strLVCountryCode, string strLVCountryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVStateHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVStateHistoryDataResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVStateHistoryData(string strLVTokenID, string strStateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVStateHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVStateHistoryDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVStateHistoryDataAsync(string strLVTokenID, string strStateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddCityDistrict", ReplyAction="http://tempuri.org/IGenericService/AddCityDistrictResponse")]
        PrjPASS.GCGenericService.GenericMasterResult AddCityDistrict(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddCityDistrict", ReplyAction="http://tempuri.org/IGenericService/AddCityDistrictResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddCityDistrictAsync(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditCityDistrict", ReplyAction="http://tempuri.org/IGenericService/EditCityDistrictResponse")]
        PrjPASS.GCGenericService.GenericMasterResult EditCityDistrict(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditCityDistrict", ReplyAction="http://tempuri.org/IGenericService/EditCityDistrictResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditCityDistrictAsync(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCityDistrict", ReplyAction="http://tempuri.org/IGenericService/GetCityDistrictResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetCityDistrict(string strLVTokenID, string strCityDistrictCode, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCityDistrict", ReplyAction="http://tempuri.org/IGenericService/GetCityDistrictResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetCityDistrictAsync(string strLVTokenID, string strCityDistrictCode, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictHistoryDataResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVCityDistrictHistoryData(string strLVTokenID, string strCityDistrictCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictHistoryDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVCityDistrictHistoryDataAsync(string strLVTokenID, string strCityDistrictCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddAreaVillage", ReplyAction="http://tempuri.org/IGenericService/AddAreaVillageResponse")]
        PrjPASS.GCGenericService.GenericMasterResult AddAreaVillage(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddAreaVillage", ReplyAction="http://tempuri.org/IGenericService/AddAreaVillageResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddAreaVillageAsync(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditAreaVillage", ReplyAction="http://tempuri.org/IGenericService/EditAreaVillageResponse")]
        PrjPASS.GCGenericService.GenericMasterResult EditAreaVillage(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditAreaVillage", ReplyAction="http://tempuri.org/IGenericService/EditAreaVillageResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditAreaVillageAsync(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAreaVillage", ReplyAction="http://tempuri.org/IGenericService/GetAreaVillageResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetAreaVillage(string strLVTokenID, string strStateCode, string strDistrictCode, string strAreaVillageCode, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAreaVillage", ReplyAction="http://tempuri.org/IGenericService/GetAreaVillageResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetAreaVillageAsync(string strLVTokenID, string strStateCode, string strDistrictCode, string strAreaVillageCode, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAreaVillageHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVAreaVillageHistoryDataResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVAreaVillageHistoryData(string strLVTokenID, string strAreaVillageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAreaVillageHistoryData", ReplyAction="http://tempuri.org/IGenericService/GetLOVAreaVillageHistoryDataResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVAreaVillageHistoryDataAsync(string strLVTokenID, string strAreaVillageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddPinCode", ReplyAction="http://tempuri.org/IGenericService/AddPinCodeResponse")]
        PrjPASS.GCGenericService.GenericMasterResult AddPinCode(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddPinCode", ReplyAction="http://tempuri.org/IGenericService/AddPinCodeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddPinCodeAsync(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditPinCode", ReplyAction="http://tempuri.org/IGenericService/EditPinCodeResponse")]
        PrjPASS.GCGenericService.GenericMasterResult EditPinCode(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditPinCode", ReplyAction="http://tempuri.org/IGenericService/EditPinCodeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditPinCodeAsync(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPinCode", ReplyAction="http://tempuri.org/IGenericService/GetPinCodeResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetPinCode(string strLVTokenID, string strStateCode, string strDistrictCode, string strPinCode, string strPinCodeLocality, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPinCode", ReplyAction="http://tempuri.org/IGenericService/GetPinCodeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetPinCodeAsync(string strLVTokenID, string strStateCode, string strDistrictCode, string strPinCode, string strPinCodeLocality, string strLVStartDate, string strLVStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPinCodeAddress", ReplyAction="http://tempuri.org/IGenericService/GetLOVPinCodeAddressResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVPinCodeAddress(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVCityDistrict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPinCodeAddress", ReplyAction="http://tempuri.org/IGenericService/GetLOVPinCodeAddressResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVPinCodeAddressAsync(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVCityDistrict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLocation", ReplyAction="http://tempuri.org/IGenericService/GetLocationResponse")]
        PrjPASS.GCGenericService.Location GetLocation(string strLVTokenID, string strLocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLocation", ReplyAction="http://tempuri.org/IGenericService/GetLocationResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Location> GetLocationAsync(string strLVTokenID, string strLocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddLocation", ReplyAction="http://tempuri.org/IGenericService/AddLocationResponse")]
        PrjPASS.GCGenericService.Location AddLocation(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddLocation", ReplyAction="http://tempuri.org/IGenericService/AddLocationResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Location> AddLocationAsync(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditLocation", ReplyAction="http://tempuri.org/IGenericService/EditLocationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object EditLocation(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditLocation", ReplyAction="http://tempuri.org/IGenericService/EditLocationResponse")]
        System.Threading.Tasks.Task<object> EditLocationAsync(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAddress", ReplyAction="http://tempuri.org/IGenericService/GetLOVAddressResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVAddress(string strLVTokenID, string strLVLocationCode, string strLVAddress1, string strLVAddress2, string strLVAddress3, string strLVPinCode, string strLVCityDistrict, string strLVPinCodeLocality, string strLVState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAddress", ReplyAction="http://tempuri.org/IGenericService/GetLOVAddressResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVAddressAsync(string strLVTokenID, string strLVLocationCode, string strLVAddress1, string strLVAddress2, string strLVAddress3, string strLVPinCode, string strLVCityDistrict, string strLVPinCodeLocality, string strLVState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIntermediaryCategoryList", ReplyAction="http://tempuri.org/IGenericService/GetIntermediaryCategoryListResponse")]
        PrjPASS.GCGenericService.GenericResult GetIntermediaryCategoryList(string strLVTokenID, string strIntermediaryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIntermediaryCategoryList", ReplyAction="http://tempuri.org/IGenericService/GetIntermediaryCategoryListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIntermediaryCategoryListAsync(string strLVTokenID, string strIntermediaryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetParentRelationList", ReplyAction="http://tempuri.org/IGenericService/GetParentRelationListResponse")]
        PrjPASS.GCGenericService.GenericResult GetParentRelationList(string strLVTokenID, string strIntermediaryCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetParentRelationList", ReplyAction="http://tempuri.org/IGenericService/GetParentRelationListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetParentRelationListAsync(string strLVTokenID, string strIntermediaryCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsLicenseRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsLicenseRequiredResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetIsLicenseRequired(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsLicenseRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsLicenseRequiredResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsLicenseRequiredAsync(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsLicenseReqRoleWise", ReplyAction="http://tempuri.org/IGenericService/GetIsLicenseReqRoleWiseResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetIsLicenseReqRoleWise(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsLicenseReqRoleWise", ReplyAction="http://tempuri.org/IGenericService/GetIsLicenseReqRoleWiseResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsLicenseReqRoleWiseAsync(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLicenseDate", ReplyAction="http://tempuri.org/IGenericService/GetLicenseDateResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLicenseDate(string strLVTokenID, string strLicenseNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLicenseDate", ReplyAction="http://tempuri.org/IGenericService/GetLicenseDateResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLicenseDateAsync(string strLVTokenID, string strLicenseNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsSourceBankApplicable", ReplyAction="http://tempuri.org/IGenericService/GetIsSourceBankApplicableResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object GetIsSourceBankApplicable(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsSourceBankApplicable", ReplyAction="http://tempuri.org/IGenericService/GetIsSourceBankApplicableResponse")]
        System.Threading.Tasks.Task<object> GetIsSourceBankApplicableAsync(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCategoryChangeCount", ReplyAction="http://tempuri.org/IGenericService/GetCategoryChangeCountResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetCategoryChangeCount(string strLVTokenID, string strLVIntermediaryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCategoryChangeCount", ReplyAction="http://tempuri.org/IGenericService/GetCategoryChangeCountResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetCategoryChangeCountAsync(string strLVTokenID, string strLVIntermediaryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsMultiUserRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsMultiUserRequiredResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetIsMultiUserRequired(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsMultiUserRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsMultiUserRequiredResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsMultiUserRequiredAsync(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDealerFlag", ReplyAction="http://tempuri.org/IGenericService/GetDealerFlagResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetDealerFlag(string strLVTokenID, string strLVDealer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetDealerFlag", ReplyAction="http://tempuri.org/IGenericService/GetDealerFlagResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetDealerFlagAsync(string strLVTokenID, string strLVDealer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsIdentityNumRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsIdentityNumRequiredResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetIsIdentityNumRequired(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsIdentityNumRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsIdentityNumRequiredResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsIdentityNumRequiredAsync(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetApprovalDataForIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetApprovalDataForIntermediaryResponse")]
        PrjPASS.GCGenericService.GenericResult GetApprovalDataForIntermediary(string strLVTokenID, string strIntermediaryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetApprovalDataForIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetApprovalDataForIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetApprovalDataForIntermediaryAsync(string strLVTokenID, string strIntermediaryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddIntermediary", ReplyAction="http://tempuri.org/IGenericService/AddIntermediaryResponse")]
        PrjPASS.GCGenericService.GenericMasterResult AddIntermediary(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddIntermediary", ReplyAction="http://tempuri.org/IGenericService/AddIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddIntermediaryAsync(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditIntermediary", ReplyAction="http://tempuri.org/IGenericService/EditIntermediaryResponse")]
        PrjPASS.GCGenericService.GenericMasterResult EditIntermediary(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditIntermediary", ReplyAction="http://tempuri.org/IGenericService/EditIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditIntermediaryAsync(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsServiceTaxRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsServiceTaxRequiredResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetIsServiceTaxRequired(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetIsServiceTaxRequired", ReplyAction="http://tempuri.org/IGenericService/GetIsServiceTaxRequiredResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsServiceTaxRequiredAsync(string strLVTokenID, string strIntermediaryRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntermediaryResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVIntermediary(string strLVTokenID, string strLVIntermediaryRole, string strLVIntermediaryType, string strLVIntermediaryCode, string strLVIntermediaryName, string strLVIntermediaryCity, string strLVIntermediaryPincode, string strLVIntermediaryPinLocality, string strLVIntermediaryState, bool boolLVShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVIntermediary", ReplyAction="http://tempuri.org/IGenericService/GetLOVIntermediaryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntermediaryAsync(string strLVTokenID, string strLVIntermediaryRole, string strLVIntermediaryType, string strLVIntermediaryCode, string strLVIntermediaryName, string strLVIntermediaryCity, string strLVIntermediaryPincode, string strLVIntermediaryPinLocality, string strLVIntermediaryState, bool boolLVShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/Authenticate", ReplyAction="http://tempuri.org/IGenericService/AuthenticateResponse")]
        string Authenticate(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/Authenticate", ReplyAction="http://tempuri.org/IGenericService/AuthenticateResponse")]
        System.Threading.Tasks.Task<string> AuthenticateAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/IsAuthorized", ReplyAction="http://tempuri.org/IGenericService/IsAuthorizedResponse")]
        bool IsAuthorized(string UserID, string Section, string Context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/IsAuthorized", ReplyAction="http://tempuri.org/IGenericService/IsAuthorizedResponse")]
        System.Threading.Tasks.Task<bool> IsAuthorizedAsync(string UserID, string Section, string Context);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchQualityCheck", ReplyAction="http://tempuri.org/IGenericService/FetchQualityCheckResponse")]
        PrjPASS.GCGenericService.GenericMasterResult FetchQualityCheck(string strLVTokenID, string strProposalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/FetchQualityCheck", ReplyAction="http://tempuri.org/IGenericService/FetchQualityCheckResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchQualityCheckAsync(string strLVTokenID, string strProposalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveQualityCheckWF", ReplyAction="http://tempuri.org/IGenericService/SaveQualityCheckWFResponse")]
        PrjPASS.GCGenericService.GeneralServiceResult SaveQualityCheckWF(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicLVWFParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveQualityCheckWF", ReplyAction="http://tempuri.org/IGenericService/SaveQualityCheckWFResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GeneralServiceResult> SaveQualityCheckWFAsync(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicLVWFParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveQualityCheck", ReplyAction="http://tempuri.org/IGenericService/SaveQualityCheckResponse")]
        PrjPASS.GCGenericService.GenericMasterResult SaveQualityCheck(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicProcessFlowParams, string StrModeofOperation, string StrWorkFlowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SaveQualityCheck", ReplyAction="http://tempuri.org/IGenericService/SaveQualityCheckResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> SaveQualityCheckAsync(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicProcessFlowParams, string StrModeofOperation, string StrWorkFlowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SearchQualityCheck", ReplyAction="http://tempuri.org/IGenericService/SearchQualityCheckResponse")]
        PrjPASS.GCGenericService.GenericMasterResult SearchQualityCheck(string strLVTokenID, string strSearchProposalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/SearchQualityCheck", ReplyAction="http://tempuri.org/IGenericService/SearchQualityCheckResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> SearchQualityCheckAsync(string strLVTokenID, string strSearchProposalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomer", ReplyAction="http://tempuri.org/IGenericService/GetCustomerResponse")]
        PrjPASS.GCGenericService.Customer GetCustomer(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomer", ReplyAction="http://tempuri.org/IGenericService/GetCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetCustomerAsync(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPCGTypeRole", ReplyAction="http://tempuri.org/IGenericService/GetPCGTypeRoleResponse")]
        PrjPASS.GCGenericService.GenericResult GetPCGTypeRole(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPCGTypeRole", ReplyAction="http://tempuri.org/IGenericService/GetPCGTypeRoleResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPCGTypeRoleAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetBlacklistedRightRole", ReplyAction="http://tempuri.org/IGenericService/GetBlacklistedRightRoleResponse")]
        PrjPASS.GCGenericService.GenericResult GetBlacklistedRightRole(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetBlacklistedRightRole", ReplyAction="http://tempuri.org/IGenericService/GetBlacklistedRightRoleResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetBlacklistedRightRoleAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPCGClient", ReplyAction="http://tempuri.org/IGenericService/GetPCGClientResponse")]
        PrjPASS.GCGenericService.Customer GetPCGClient(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetPCGClient", ReplyAction="http://tempuri.org/IGenericService/GetPCGClientResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetPCGClientAsync(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerMaster", ReplyAction="http://tempuri.org/IGenericService/GetCustomerMasterResponse")]
        PrjPASS.GCGenericService.Customer GetCustomerMaster(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerMaster", ReplyAction="http://tempuri.org/IGenericService/GetCustomerMasterResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetCustomerMasterAsync(string strLVTokenID, string strLVCustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerMasterHistory", ReplyAction="http://tempuri.org/IGenericService/GetCustomerMasterHistoryResponse")]
        PrjPASS.GCGenericService.Customer GetCustomerMasterHistory(string strLVTokenID, string strLVCustomerID, string strUpdateSerialNo, int intIsPCG);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetCustomerMasterHistory", ReplyAction="http://tempuri.org/IGenericService/GetCustomerMasterHistoryResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetCustomerMasterHistoryAsync(string strLVTokenID, string strLVCustomerID, string strUpdateSerialNo, int intIsPCG);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAffiliationList", ReplyAction="http://tempuri.org/IGenericService/GetAffiliationListResponse")]
        PrjPASS.GCGenericService.GenericResult GetAffiliationList(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetAffiliationList", ReplyAction="http://tempuri.org/IGenericService/GetAffiliationListResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAffiliationListAsync(string strLVTokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddCustomer", ReplyAction="http://tempuri.org/IGenericService/AddCustomerResponse")]
        PrjPASS.GCGenericService.Customer AddCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer, bool boolInsertDuplicate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddCustomer", ReplyAction="http://tempuri.org/IGenericService/AddCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> AddCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer, bool boolInsertDuplicate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditCustomer", ReplyAction="http://tempuri.org/IGenericService/EditCustomerResponse")]
        PrjPASS.GCGenericService.Customer EditCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditCustomer", ReplyAction="http://tempuri.org/IGenericService/EditCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> EditCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditPCGClient", ReplyAction="http://tempuri.org/IGenericService/EditPCGClientResponse")]
        PrjPASS.GCGenericService.Customer EditPCGClient(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditPCGClient", ReplyAction="http://tempuri.org/IGenericService/EditPCGClientResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> EditPCGClientAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCustomer", ReplyAction="http://tempuri.org/IGenericService/GetLOVCustomerResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCustomer(string strLVTokenID, string strLVCustomerName, string strLVCustomerId, string strLVCustomerType, string strLVState, string strLVCityDistrict, string strLVAreaVillage, string strLVPincode, string strLVPincodeLocality, string strLVIntrEmpTag, string strLVUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCustomer", ReplyAction="http://tempuri.org/IGenericService/GetLOVCustomerResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCustomerAsync(string strLVTokenID, string strLVCustomerName, string strLVCustomerId, string strLVCustomerType, string strLVState, string strLVCityDistrict, string strLVAreaVillage, string strLVPincode, string strLVPincodeLocality, string strLVIntrEmpTag, string strLVUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVLocation", ReplyAction="http://tempuri.org/IGenericService/GetLOVLocationResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVLocation(string strLVTokenID, string strLVAddressLine1, string strLVAddressLine2, string strLVStreet, string strLVApartment, string strLVPincode, string strLVAreaVillageCode, string strLVCityDistrictCode, string strLVStateCode, string strLVLocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVLocation", ReplyAction="http://tempuri.org/IGenericService/GetLOVLocationResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVLocationAsync(string strLVTokenID, string strLVAddressLine1, string strLVAddressLine2, string strLVStreet, string strLVApartment, string strLVPincode, string strLVAreaVillageCode, string strLVCityDistrictCode, string strLVStateCode, string strLVLocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVState", ReplyAction="http://tempuri.org/IGenericService/GetLOVStateResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVState(string strLVTokenID, string strStateName, string strStateCode, bool boolShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVState", ReplyAction="http://tempuri.org/IGenericService/GetLOVStateResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVStateAsync(string strLVTokenID, string strStateName, string strStateCode, bool boolShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVStateMaster", ReplyAction="http://tempuri.org/IGenericService/GetLOVStateMasterResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVStateMaster(string strLVTokenID, string StateCode, string StateName, string strCountryCode, bool Showall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVStateMaster", ReplyAction="http://tempuri.org/IGenericService/GetLOVStateMasterResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVStateMasterAsync(string strLVTokenID, string StateCode, string StateName, string strCountryCode, bool Showall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictMaster", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictMasterResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCityDistrictMaster(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName, string strLVStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolLVShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictMaster", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictMasterResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCityDistrictMasterAsync(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName, string strLVStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolLVShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictNew", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictNewResponse")]
        PrjPASS.GCGenericService.GenericResult GetLOVCityDistrictNew(string strLVTokenID, string strLVCityCode, string strLVCityName, string strLVDistrictCode, string strLVStateCode, string strCityDistrictFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrictNew", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictNewResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCityDistrictNewAsync(string strLVTokenID, string strLVCityCode, string strLVCityName, string strLVDistrictCode, string strLVStateCode, string strCityDistrictFlag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVOffice", ReplyAction="http://tempuri.org/IGenericService/GetLOVOfficeResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVOffice(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName, bool boolShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVOffice", ReplyAction="http://tempuri.org/IGenericService/GetLOVOfficeResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVOfficeAsync(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName, bool boolShowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetOffice", ReplyAction="http://tempuri.org/IGenericService/GetOfficeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ConfWFHelper))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsApprovalMsg))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsLinkIdDtls))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsMessageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GeneralServiceResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Currency))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsCovernoteDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsQuotationDTLS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Premium))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.clsProposalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.WorkFlowStateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlan))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GMCPlanItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.KeyValuePairList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAadhar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePortalIDLocking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeVLEUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUserDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UWFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeFieldUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePolicyDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Person))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Bank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ContactDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ModeOfCommunication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomerList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeStateMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDeal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeGeneric))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicySearchResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCustomerSearch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAllOffice))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRoutingCovernote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyCustData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.PolicyService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetchInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericMasterResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.AreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUpload))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.DesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVDuplicateCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.ExcelUploadLog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.GenericLov))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.IntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAddress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeAreaVillage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBank))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeBankBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeCityDistrict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeDesignationMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeIntermediaryCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeLicense))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVParentCustomer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeParentRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypePIN))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LOVTypeState))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovForCoverNote))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.LovFetch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Pincode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheckItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.QualityCheck[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.UserIdentity))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.CityDistrictMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Office))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Intermediary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.License))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Dealer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PrjPASS.GCGenericService.Employee))]
        object GetOffice(string strLVTokenID, string strLVOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetOffice", ReplyAction="http://tempuri.org/IGenericService/GetOfficeResponse")]
        System.Threading.Tasks.Task<object> GetOfficeAsync(string strLVTokenID, string strLVOfficeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrict", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVCityDistrict(string strLVTokenID, string strCityDistrictCode, string strCityDistrictName, string strStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolshowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVCityDistrict", ReplyAction="http://tempuri.org/IGenericService/GetLOVCityDistrictResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVCityDistrictAsync(string strLVTokenID, string strCityDistrictCode, string strCityDistrictName, string strStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolshowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAreaVillage", ReplyAction="http://tempuri.org/IGenericService/GetLOVAreaVillageResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVAreaVillage(string strLVTokenID, string strAreaVillageCode, string strAreaVillageName, string strStateCode, string strCityDistrictCode, string strRuralUrbanFlag, bool boolshowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVAreaVillage", ReplyAction="http://tempuri.org/IGenericService/GetLOVAreaVillageResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVAreaVillageAsync(string strLVTokenID, string strAreaVillageCode, string strAreaVillageName, string strStateCode, string strCityDistrictCode, string strRuralUrbanFlag, bool boolshowall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPin", ReplyAction="http://tempuri.org/IGenericService/GetLOVPinResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVPin(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVStateCode, string strLVCityDistrictCode, string strLVCityCode, string strLVCityName, string strLVDistrictName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVPin", ReplyAction="http://tempuri.org/IGenericService/GetLOVPinResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVPinAsync(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVStateCode, string strLVCityDistrictCode, string strLVCityCode, string strLVCityName, string strLVDistrictName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVBank", ReplyAction="http://tempuri.org/IGenericService/GetLOVBankResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetLOVBank(string strLVTokenID, string strBankCode, string strBankName, string strBankBranchCode, string strBankBranchName, string strIFSCCode, string strMICRCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetLOVBank", ReplyAction="http://tempuri.org/IGenericService/GetLOVBankResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVBankAsync(string strLVTokenID, string strBankCode, string strBankName, string strBankBranchCode, string strBankBranchName, string strIFSCCode, string strMICRCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddState", ReplyAction="http://tempuri.org/IGenericService/AddStateResponse")]
        PrjPASS.GCGenericService.GenericMasterResult AddState(string strLVTokenID, PrjPASS.GCGenericService.State objLVState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/AddState", ReplyAction="http://tempuri.org/IGenericService/AddStateResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddStateAsync(string strLVTokenID, PrjPASS.GCGenericService.State objLVState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditState", ReplyAction="http://tempuri.org/IGenericService/EditStateResponse")]
        PrjPASS.GCGenericService.GenericMasterResult EditState(string strLVTokenID, PrjPASS.GCGenericService.State objLVState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/EditState", ReplyAction="http://tempuri.org/IGenericService/EditStateResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditStateAsync(string strLVTokenID, PrjPASS.GCGenericService.State objLVState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetState", ReplyAction="http://tempuri.org/IGenericService/GetStateResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetState(string strLVTokenID, string strStateCode, string strStartDate, string strStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetState", ReplyAction="http://tempuri.org/IGenericService/GetStateResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetStateAsync(string strLVTokenID, string strStateCode, string strStartDate, string strStartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetRegion", ReplyAction="http://tempuri.org/IGenericService/GetRegionResponse")]
        PrjPASS.GCGenericService.GenericMasterResult GetRegion(string strLVTokenID, string strStateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenericService/GetRegion", ReplyAction="http://tempuri.org/IGenericService/GetRegionResponse")]
        System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetRegionAsync(string strLVTokenID, string strStateCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGenericServiceChannel : PrjPASS.GCGenericService.IGenericService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenericServiceClient : System.ServiceModel.ClientBase<PrjPASS.GCGenericService.IGenericService>, PrjPASS.GCGenericService.IGenericService {
        
        public GenericServiceClient() {
        }
        
        public GenericServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GenericServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GenericServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GenericServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PrjPASS.GCGenericService.GMCPlan EditGMCPlan(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan) {
            return base.Channel.EditGMCPlan(strLVTokenID, objLVGMCPlan);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GMCPlan> EditGMCPlanAsync(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan) {
            return base.Channel.EditGMCPlanAsync(strLVTokenID, objLVGMCPlan);
        }
        
        public PrjPASS.GCGenericService.GMCPlan GetGMCPlan(string strLVTokenID, string objLVGMCPlanCode) {
            return base.Channel.GetGMCPlan(strLVTokenID, objLVGMCPlanCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GMCPlan> GetGMCPlanAsync(string strLVTokenID, string objLVGMCPlanCode) {
            return base.Channel.GetGMCPlanAsync(strLVTokenID, objLVGMCPlanCode);
        }
        
        public PrjPASS.GCGenericService.GenericResult CheckPolicyExistenceForPlan(string strLVTokenID, string strLVPlanCode) {
            return base.Channel.CheckPolicyExistenceForPlan(strLVTokenID, strLVPlanCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> CheckPolicyExistenceForPlanAsync(string strLVTokenID, string strLVPlanCode) {
            return base.Channel.CheckPolicyExistenceForPlanAsync(strLVTokenID, strLVPlanCode);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetTypeExcel(string strLVTokenID, string Uploadtype) {
            return base.Channel.GetTypeExcel(strLVTokenID, Uploadtype);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetTypeExcelAsync(string strLVTokenID, string Uploadtype) {
            return base.Channel.GetTypeExcelAsync(strLVTokenID, Uploadtype);
        }
        
        public PrjPASS.GCGenericService.GenericResult SaveAadharDetails(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeAadhar objLVAadhar) {
            return base.Channel.SaveAadharDetails(strLVTokenID, objLVAadhar);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> SaveAadharDetailsAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeAadhar objLVAadhar) {
            return base.Channel.SaveAadharDetailsAsync(strLVTokenID, objLVAadhar);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetAadharDetails(string strLVTokenID, string strLVAadharNo) {
            return base.Channel.GetAadharDetails(strLVTokenID, strLVAadharNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAadharDetailsAsync(string strLVTokenID, string strLVAadharNo) {
            return base.Channel.GetAadharDetailsAsync(strLVTokenID, strLVAadharNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPortalIDLockingService(string strLVTokenID, string strProducerCode, string strOfficeCode) {
            return base.Channel.GetPortalIDLockingService(strLVTokenID, strProducerCode, strOfficeCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPortalIDLockingServiceAsync(string strLVTokenID, string strProducerCode, string strOfficeCode) {
            return base.Channel.GetPortalIDLockingServiceAsync(strLVTokenID, strProducerCode, strOfficeCode);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVROLocation(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName) {
            return base.Channel.GetLOVROLocation(strLVTokenID, strOfficeType, strOfficeCode, strOfficeName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVROLocationAsync(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName) {
            return base.Channel.GetLOVROLocationAsync(strLVTokenID, strOfficeType, strOfficeCode, strOfficeName);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDetailsByProducerCode(string strLVTokenID, string strProducerCode, string strType, string strCode, string strName) {
            return base.Channel.GetDetailsByProducerCode(strLVTokenID, strProducerCode, strType, strCode, strName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDetailsByProducerCodeAsync(string strLVTokenID, string strProducerCode, string strType, string strCode, string strName) {
            return base.Channel.GetDetailsByProducerCodeAsync(strLVTokenID, strProducerCode, strType, strCode, strName);
        }
        
        public PrjPASS.GCGenericService.GenericResult SaveRoutingCovernote(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote) {
            return base.Channel.SaveRoutingCovernote(strLVTokenID, objLVRoutingCovernote);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> SaveRoutingCovernoteAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote) {
            return base.Channel.SaveRoutingCovernoteAsync(strLVTokenID, objLVRoutingCovernote);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVRoutingCovernote(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote) {
            return base.Channel.GetLOVRoutingCovernote(strLVTokenID, objLVRoutingCovernote);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVRoutingCovernoteAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeRoutingCovernote objLVRoutingCovernote) {
            return base.Channel.GetLOVRoutingCovernoteAsync(strLVTokenID, objLVRoutingCovernote);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetRoutingCovernote(string strLVTokenID, string strLVReferenceNo) {
            return base.Channel.GetRoutingCovernote(strLVTokenID, strLVReferenceNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetRoutingCovernoteAsync(string strLVTokenID, string strLVReferenceNo) {
            return base.Channel.GetRoutingCovernoteAsync(strLVTokenID, strLVReferenceNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetOrganizationList(string strLVTokenID) {
            return base.Channel.GetOrganizationList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetOrganizationListAsync(string strLVTokenID) {
            return base.Channel.GetOrganizationListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetSmsPointsList(string strLVTokenID) {
            return base.Channel.GetSmsPointsList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSmsPointsListAsync(string strLVTokenID) {
            return base.Channel.GetSmsPointsListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetAllOfficeList(string strLVTokenID) {
            return base.Channel.GetAllOfficeList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAllOfficeListAsync(string strLVTokenID) {
            return base.Channel.GetAllOfficeListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.PolicyCustData GetPolicyCustEIADetails(string strLVTokenID, string strpolicyno) {
            return base.Channel.GetPolicyCustEIADetails(strLVTokenID, strpolicyno);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.PolicyCustData> GetPolicyCustEIADetailsAsync(string strLVTokenID, string strpolicyno) {
            return base.Channel.GetPolicyCustEIADetailsAsync(strLVTokenID, strpolicyno);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCustomerListWithEIADetails(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeCustomerSearch objLVCustomer) {
            return base.Channel.GetLOVCustomerListWithEIADetails(strLVTokenID, objLVCustomer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCustomerListWithEIADetailsAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeCustomerSearch objLVCustomer) {
            return base.Channel.GetLOVCustomerListWithEIADetailsAsync(strLVTokenID, objLVCustomer);
        }
        
        public PrjPASS.GCGenericService.GenericResult getIntermediaryIdByloginMailId(string strLVTokenID, string strEmailID) {
            return base.Channel.getIntermediaryIdByloginMailId(strLVTokenID, strEmailID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> getIntermediaryIdByloginMailIdAsync(string strLVTokenID, string strEmailID) {
            return base.Channel.getIntermediaryIdByloginMailIdAsync(strLVTokenID, strEmailID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetQuoteList(string strLVTokenID, string strFromDate, string strTodate, string strStatus, string strProductName, string strQuoteNum, string strCustomerName, string strIntermediarycode, int quotedays) {
            return base.Channel.GetQuoteList(strLVTokenID, strFromDate, strTodate, strStatus, strProductName, strQuoteNum, strCustomerName, strIntermediarycode, quotedays);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetQuoteListAsync(string strLVTokenID, string strFromDate, string strTodate, string strStatus, string strProductName, string strQuoteNum, string strCustomerName, string strIntermediarycode, int quotedays) {
            return base.Channel.GetQuoteListAsync(strLVTokenID, strFromDate, strTodate, strStatus, strProductName, strQuoteNum, strCustomerName, strIntermediarycode, quotedays);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetProductListAgentPortal(string strLVTokenID, string strProductCodes) {
            return base.Channel.GetProductListAgentPortal(strLVTokenID, strProductCodes);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetProductListAgentPortalAsync(string strLVTokenID, string strProductCodes) {
            return base.Channel.GetProductListAgentPortalAsync(strLVTokenID, strProductCodes);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetSearchCustomer(string strLVTokenID, string strCustID, string strCustName, string strblkFlag) {
            return base.Channel.GetSearchCustomer(strLVTokenID, strCustID, strCustName, strblkFlag);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSearchCustomerAsync(string strLVTokenID, string strCustID, string strCustName, string strblkFlag) {
            return base.Channel.GetSearchCustomerAsync(strLVTokenID, strCustID, strCustName, strblkFlag);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPolicyDetailsAP(string strLVTokenID, string strfromdate, string strtodate, string strcustname, string strpolicyno, string strproductcode, string strIntermediaryID, string strvehicleregno, string strmemberid) {
            return base.Channel.GetPolicyDetailsAP(strLVTokenID, strfromdate, strtodate, strcustname, strpolicyno, strproductcode, strIntermediaryID, strvehicleregno, strmemberid);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyDetailsAPAsync(string strLVTokenID, string strfromdate, string strtodate, string strcustname, string strpolicyno, string strproductcode, string strIntermediaryID, string strvehicleregno, string strmemberid) {
            return base.Channel.GetPolicyDetailsAPAsync(strLVTokenID, strfromdate, strtodate, strcustname, strpolicyno, strproductcode, strIntermediaryID, strvehicleregno, strmemberid);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetMaritalStatusList(string strLVTokenID) {
            return base.Channel.GetMaritalStatusList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetMaritalStatusListAsync(string strLVTokenID) {
            return base.Channel.GetMaritalStatusListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDuplicateCustomerList(string strLVTokenID, string strLVOrgiCustomerID, string strLVCustomerID) {
            return base.Channel.GetDuplicateCustomerList(strLVTokenID, strLVOrgiCustomerID, strLVCustomerID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDuplicateCustomerListAsync(string strLVTokenID, string strLVOrgiCustomerID, string strLVCustomerID) {
            return base.Channel.GetDuplicateCustomerListAsync(strLVTokenID, strLVOrgiCustomerID, strLVCustomerID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetTransactionDetails(string strLVTokenID, string strCode, string strType, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strPolicyNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode) {
            return base.Channel.GetTransactionDetails(strLVTokenID, strCode, strType, strProposalFromDate, strProposalToDate, strPolicyFromDate, strPolicyToDate, strUserType, strPolicyNo, strCovernoteNo, strCustomerID, strVehicleRegNo, strApplicationNo, strOfficeCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetTransactionDetailsAsync(string strLVTokenID, string strCode, string strType, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strPolicyNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode) {
            return base.Channel.GetTransactionDetailsAsync(strLVTokenID, strCode, strType, strProposalFromDate, strProposalToDate, strPolicyFromDate, strPolicyToDate, strUserType, strPolicyNo, strCovernoteNo, strCustomerID, strVehicleRegNo, strApplicationNo, strOfficeCode);
        }
        
        public PrjPASS.GCGenericService.GenericResult ViewActivePolicy(string strLVTokenID, PrjPASS.GCGenericService.UWFetch ObjlvParam) {
            return base.Channel.ViewActivePolicy(strLVTokenID, ObjlvParam);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> ViewActivePolicyAsync(string strLVTokenID, PrjPASS.GCGenericService.UWFetch ObjlvParam) {
            return base.Channel.ViewActivePolicyAsync(strLVTokenID, ObjlvParam);
        }
        
        public PrjPASS.GCGenericService.PolicyService GetIMDCustomerIDByPolicyNo(string strLVTokenID, string strPolicyNo) {
            return base.Channel.GetIMDCustomerIDByPolicyNo(strLVTokenID, strPolicyNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.PolicyService> GetIMDCustomerIDByPolicyNoAsync(string strLVTokenID, string strPolicyNo) {
            return base.Channel.GetIMDCustomerIDByPolicyNoAsync(strLVTokenID, strPolicyNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPendingProposalList(string strLVTokenID, string strEntityType, string strEntityCode, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strProposalNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode) {
            return base.Channel.GetPendingProposalList(strLVTokenID, strEntityType, strEntityCode, strProposalFromDate, strProposalToDate, strPolicyFromDate, strPolicyToDate, strUserType, strProposalNo, strCovernoteNo, strCustomerID, strVehicleRegNo, strApplicationNo, strOfficeCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPendingProposalListAsync(string strLVTokenID, string strEntityType, string strEntityCode, string strProposalFromDate, string strProposalToDate, string strPolicyFromDate, string strPolicyToDate, string strUserType, string strProposalNo, string strCovernoteNo, string strCustomerID, string strVehicleRegNo, string strApplicationNo, string strOfficeCode) {
            return base.Channel.GetPendingProposalListAsync(strLVTokenID, strEntityType, strEntityCode, strProposalFromDate, strProposalToDate, strPolicyFromDate, strPolicyToDate, strUserType, strProposalNo, strCovernoteNo, strCustomerID, strVehicleRegNo, strApplicationNo, strOfficeCode);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCNBookListByAgentID(string strLVTokenID, string strAgentId) {
            return base.Channel.GetCNBookListByAgentID(strLVTokenID, strAgentId);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCNBookListByAgentIDAsync(string strLVTokenID, string strAgentId) {
            return base.Channel.GetCNBookListByAgentIDAsync(strLVTokenID, strAgentId);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetNextUnusedLeafNoByCNBook(string strLVTokenID, string strCNBookNo) {
            return base.Channel.GetNextUnusedLeafNoByCNBook(strLVTokenID, strCNBookNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetNextUnusedLeafNoByCNBookAsync(string strLVTokenID, string strCNBookNo) {
            return base.Channel.GetNextUnusedLeafNoByCNBookAsync(strLVTokenID, strCNBookNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCNLeafListByFieldUser(string strLVTokenID, string strLVFieldUserId) {
            return base.Channel.GetCNLeafListByFieldUser(strLVTokenID, strLVFieldUserId);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCNLeafListByFieldUserAsync(string strLVTokenID, string strLVFieldUserId) {
            return base.Channel.GetCNLeafListByFieldUserAsync(strLVTokenID, strLVFieldUserId);
        }
        
        public PrjPASS.GCGenericService.CoverNoteEntry UpdateCoverNoteLeafStatus(string strLVTokenID, PrjPASS.GCGenericService.CoverNoteEntry objCovernote, string strCNFlag, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.UpdateCoverNoteLeafStatus(strLVTokenID, objCovernote, strCNFlag, objLVSessionParams);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.CoverNoteEntry> UpdateCoverNoteLeafStatusAsync(string strLVTokenID, PrjPASS.GCGenericService.CoverNoteEntry objCovernote, string strCNFlag, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.UpdateCoverNoteLeafStatusAsync(strLVTokenID, objCovernote, strCNFlag, objLVSessionParams);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCancelReasonList(string strLVTokenID) {
            return base.Channel.GetCancelReasonList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCancelReasonListAsync(string strLVTokenID) {
            return base.Channel.GetCancelReasonListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDiscrepancyReasonList(string strLVTokenID) {
            return base.Channel.GetDiscrepancyReasonList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDiscrepancyReasonListAsync(string strLVTokenID) {
            return base.Channel.GetDiscrepancyReasonListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLostReasonList(string strLVTokenID) {
            return base.Channel.GetLostReasonList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLostReasonListAsync(string strLVTokenID) {
            return base.Channel.GetLostReasonListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPhyCancelledRsnForCNLeaf(string strLVTokenID, string strCNLeafNo) {
            return base.Channel.GetPhyCancelledRsnForCNLeaf(strLVTokenID, strCNLeafNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPhyCancelledRsnForCNLeafAsync(string strLVTokenID, string strCNLeafNo) {
            return base.Channel.GetPhyCancelledRsnForCNLeafAsync(strLVTokenID, strCNLeafNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPolicyDetailByPolicyNo(string strLVTokenID, string strPolicyNo) {
            return base.Channel.GetPolicyDetailByPolicyNo(strLVTokenID, strPolicyNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyDetailByPolicyNoAsync(string strLVTokenID, string strPolicyNo) {
            return base.Channel.GetPolicyDetailByPolicyNoAsync(strLVTokenID, strPolicyNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPolicyDetailByVehicleDetail(string strLVTokenID, string strVehicleRegNo, string strChassisNo, string strEngineNo, string strPolicyNo, string strManualCoverNoteNo) {
            return base.Channel.GetPolicyDetailByVehicleDetail(strLVTokenID, strVehicleRegNo, strChassisNo, strEngineNo, strPolicyNo, strManualCoverNoteNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyDetailByVehicleDetailAsync(string strLVTokenID, string strVehicleRegNo, string strChassisNo, string strEngineNo, string strPolicyNo, string strManualCoverNoteNo) {
            return base.Channel.GetPolicyDetailByVehicleDetailAsync(strLVTokenID, strVehicleRegNo, strChassisNo, strEngineNo, strPolicyNo, strManualCoverNoteNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetRenewalProposalList(string strLVTokenID, string strProducerCode, string strFromDate, string strToDate, string strPolicyNo, string strUserId, string strUserType) {
            return base.Channel.GetRenewalProposalList(strLVTokenID, strProducerCode, strFromDate, strToDate, strPolicyNo, strUserId, strUserType);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetRenewalProposalListAsync(string strLVTokenID, string strProducerCode, string strFromDate, string strToDate, string strPolicyNo, string strUserId, string strUserType) {
            return base.Channel.GetRenewalProposalListAsync(strLVTokenID, strProducerCode, strFromDate, strToDate, strPolicyNo, strUserId, strUserType);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPolicyHistory(string strLVTokenID, string strLVPolicyNo) {
            return base.Channel.GetPolicyHistory(strLVTokenID, strLVPolicyNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPolicyHistoryAsync(string strLVTokenID, string strLVPolicyNo) {
            return base.Channel.GetPolicyHistoryAsync(strLVTokenID, strLVPolicyNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult IsCorporateDomain(string strLVTokenID, string strDomainName) {
            return base.Channel.IsCorporateDomain(strLVTokenID, strDomainName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> IsCorporateDomainAsync(string strLVTokenID, string strDomainName) {
            return base.Channel.IsCorporateDomainAsync(strLVTokenID, strDomainName);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetIntermediaryCodeByEmailID(string strLVTokenID, string strEmailID) {
            return base.Channel.GetIntermediaryCodeByEmailID(strLVTokenID, strEmailID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIntermediaryCodeByEmailIDAsync(string strLVTokenID, string strEmailID) {
            return base.Channel.GetIntermediaryCodeByEmailIDAsync(strLVTokenID, strEmailID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDefaultCountry(string strLVTokenID) {
            return base.Channel.GetDefaultCountry(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDefaultCountryAsync(string strLVTokenID) {
            return base.Channel.GetDefaultCountryAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult CheckProposalExistenceForCustomer(string strLVTokenID, string strCustomerCode, string strCustomerName, string strSuccessMessage) {
            return base.Channel.CheckProposalExistenceForCustomer(strLVTokenID, strCustomerCode, strCustomerName, strSuccessMessage);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> CheckProposalExistenceForCustomerAsync(string strLVTokenID, string strCustomerCode, string strCustomerName, string strSuccessMessage) {
            return base.Channel.CheckProposalExistenceForCustomerAsync(strLVTokenID, strCustomerCode, strCustomerName, strSuccessMessage);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVProducerOffice(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeOffice objOffice) {
            return base.Channel.GetLOVProducerOffice(strLVTokenID, objOffice);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVProducerOfficeAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeOffice objOffice) {
            return base.Channel.GetLOVProducerOfficeAsync(strLVTokenID, objOffice);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVProducerOfficeField(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeFieldUserDetails objfield) {
            return base.Channel.GetLOVProducerOfficeField(strLVTokenID, objfield);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVProducerOfficeFieldAsync(string strLVTokenID, PrjPASS.GCGenericService.LOVTypeFieldUserDetails objfield) {
            return base.Channel.GetLOVProducerOfficeFieldAsync(strLVTokenID, objfield);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetProposalsPendingForRenewal(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam) {
            return base.Channel.GetProposalsPendingForRenewal(strLVTokenID, objParam);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetProposalsPendingForRenewalAsync(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam) {
            return base.Channel.GetProposalsPendingForRenewalAsync(strLVTokenID, objParam);
        }
        
        public PrjPASS.GCGenericService.GenericResult IsValidPolicy(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam) {
            return base.Channel.IsValidPolicy(strLVTokenID, objParam);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> IsValidPolicyAsync(string strLVTokenID, PrjPASS.GCGenericService.UWFetch objParam) {
            return base.Channel.IsValidPolicyAsync(strLVTokenID, objParam);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDetailsByVLEId(string strLVTokenID, string strLVVLEId) {
            return base.Channel.GetDetailsByVLEId(strLVTokenID, strLVVLEId);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDetailsByVLEIdAsync(string strLVTokenID, string strLVVLEId) {
            return base.Channel.GetDetailsByVLEIdAsync(strLVTokenID, strLVVLEId);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCustomerByProducerCode(string strLVTokenID, string strProducerCode, string strCustomerName) {
            return base.Channel.GetCustomerByProducerCode(strLVTokenID, strProducerCode, strCustomerName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerByProducerCodeAsync(string strLVTokenID, string strProducerCode, string strCustomerName) {
            return base.Channel.GetCustomerByProducerCodeAsync(strLVTokenID, strProducerCode, strCustomerName);
        }
        
        public PrjPASS.GCGenericService.GenericResult UpdatePANNo(string strLVTokenID, string strType, string strCode, string strPANNo, string strUserId, string strIPAddress) {
            return base.Channel.UpdatePANNo(strLVTokenID, strType, strCode, strPANNo, strUserId, strIPAddress);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> UpdatePANNoAsync(string strLVTokenID, string strType, string strCode, string strPANNo, string strUserId, string strIPAddress) {
            return base.Channel.UpdatePANNoAsync(strLVTokenID, strType, strCode, strPANNo, strUserId, strIPAddress);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetAgeGroupList(string strLVTokenID) {
            return base.Channel.GetAgeGroupList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAgeGroupListAsync(string strLVTokenID) {
            return base.Channel.GetAgeGroupListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetSumInsuredList(string strLVTokenID) {
            return base.Channel.GetSumInsuredList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSumInsuredListAsync(string strLVTokenID) {
            return base.Channel.GetSumInsuredListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GMCPlan AddGMCPlan(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan) {
            return base.Channel.AddGMCPlan(strLVTokenID, objLVGMCPlan);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GMCPlan> AddGMCPlanAsync(string strLVTokenID, PrjPASS.GCGenericService.GMCPlan objLVGMCPlan) {
            return base.Channel.AddGMCPlanAsync(strLVTokenID, objLVGMCPlan);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVParentCustomer(string strLVTokenID, string strLVCustomerCode, string strLVCustomerName, string strLVCustomerType) {
            return base.Channel.GetLOVParentCustomer(strLVTokenID, strLVCustomerCode, strLVCustomerName, strLVCustomerType);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVParentCustomerAsync(string strLVTokenID, string strLVCustomerCode, string strLVCustomerName, string strLVCustomerType) {
            return base.Channel.GetLOVParentCustomerAsync(strLVTokenID, strLVCustomerCode, strLVCustomerName, strLVCustomerType);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult FetchProposalInformation(string strLVTokenID, PrjPASS.GCGenericService.LovFetchInput ObjLVShowlovValue) {
            return base.Channel.FetchProposalInformation(strLVTokenID, ObjLVShowlovValue);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchProposalInformationAsync(string strLVTokenID, PrjPASS.GCGenericService.LovFetchInput ObjLVShowlovValue) {
            return base.Channel.FetchProposalInformationAsync(strLVTokenID, ObjLVShowlovValue);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetOccupationList(string strLVTokenID) {
            return base.Channel.GetOccupationList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetOccupationListAsync(string strLVTokenID) {
            return base.Channel.GetOccupationListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult FetchQualityForNewProposal(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode) {
            return base.Channel.FetchQualityForNewProposal(strLVTokenID, strProposalNo, StrTransactionDate, tarnsactionType, TodayDate, ProductCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchQualityForNewProposalAsync(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode) {
            return base.Channel.FetchQualityForNewProposalAsync(strLVTokenID, strProposalNo, StrTransactionDate, tarnsactionType, TodayDate, ProductCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult FetchQualityUpdate(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode, string StrWorkflowid) {
            return base.Channel.FetchQualityUpdate(strLVTokenID, strProposalNo, StrTransactionDate, tarnsactionType, TodayDate, ProductCode, StrWorkflowid);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchQualityUpdateAsync(string strLVTokenID, string strProposalNo, string StrTransactionDate, string tarnsactionType, string TodayDate, string ProductCode, string StrWorkflowid) {
            return base.Channel.FetchQualityUpdateAsync(strLVTokenID, strProposalNo, StrTransactionDate, tarnsactionType, TodayDate, ProductCode, StrWorkflowid);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetProposalRelatedData(string strLVTokenID, string strWorkFlowID) {
            return base.Channel.GetProposalRelatedData(strLVTokenID, strWorkFlowID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetProposalRelatedDataAsync(string strLVTokenID, string strWorkFlowID) {
            return base.Channel.GetProposalRelatedDataAsync(strLVTokenID, strWorkFlowID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetBankAccountType(string strLVTokenID) {
            return base.Channel.GetBankAccountType(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetBankAccountTypeAsync(string strLVTokenID) {
            return base.Channel.GetBankAccountTypeAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVBankBranch(string strLVTokenID, string strBankCode, string strBankBranchCode, string strBankBranchName) {
            return base.Channel.GetLOVBankBranch(strLVTokenID, strBankCode, strBankBranchCode, strBankBranchName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVBankBranchAsync(string strLVTokenID, string strBankCode, string strBankBranchCode, string strBankBranchName) {
            return base.Channel.GetLOVBankBranchAsync(strLVTokenID, strBankCode, strBankBranchCode, strBankBranchName);
        }
        
        public PrjPASS.GCGenericService.User ActivateUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.ActivateUser(strLVTokenID, objLVUser);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> ActivateUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.ActivateUserAsync(strLVTokenID, objLVUser);
        }
        
        public PrjPASS.GCGenericService.User ChangePassword(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.ChangePassword(strLVTokenID, objLVUserIdentity, objLVSessionParams);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> ChangePasswordAsync(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.ChangePasswordAsync(strLVTokenID, objLVUserIdentity, objLVSessionParams);
        }
        
        public PrjPASS.GCGenericService.User ForgotPassword(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.ForgotPassword(strLVTokenID, objLVUserIdentity, objLVSessionParams);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> ForgotPasswordAsync(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.ForgotPasswordAsync(strLVTokenID, objLVUserIdentity, objLVSessionParams);
        }
        
        public PrjPASS.GCGenericService.User AuthenticateUser(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.AuthenticateUser(strLVTokenID, objLVUserIdentity, objLVSessionParams);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AuthenticateUserAsync(string strLVTokenID, PrjPASS.GCGenericService.UserIdentity objLVUserIdentity, System.Collections.Generic.Dictionary<string, string> objLVSessionParams) {
            return base.Channel.AuthenticateUserAsync(strLVTokenID, objLVUserIdentity, objLVSessionParams);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetSecretQuestions(string strLVTokenID) {
            return base.Channel.GetSecretQuestions(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSecretQuestionsAsync(string strLVTokenID) {
            return base.Channel.GetSecretQuestionsAsync(strLVTokenID);
        }
        
        public string EncryptText(string strLVTokenID, string plainText) {
            return base.Channel.EncryptText(strLVTokenID, plainText);
        }
        
        public System.Threading.Tasks.Task<string> EncryptTextAsync(string strLVTokenID, string plainText) {
            return base.Channel.EncryptTextAsync(strLVTokenID, plainText);
        }
        
        public string DecryptText(string strLVTokenID, string plainText) {
            return base.Channel.DecryptText(strLVTokenID, plainText);
        }
        
        public System.Threading.Tasks.Task<string> DecryptTextAsync(string strLVTokenID, string plainText) {
            return base.Channel.DecryptTextAsync(strLVTokenID, plainText);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCustomerIDByPolicyNo(string strLVTokenID, string strPolicyNo) {
            return base.Channel.GetCustomerIDByPolicyNo(strLVTokenID, strPolicyNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerIDByPolicyNoAsync(string strLVTokenID, string strPolicyNo) {
            return base.Channel.GetCustomerIDByPolicyNoAsync(strLVTokenID, strPolicyNo);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCustomerIDByDetails(string strLVTokenID, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail) {
            return base.Channel.GetCustomerIDByDetails(strLVTokenID, StrFirstName, StrLastName, StrDOB, StrMobileNo, StrEmail);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerIDByDetailsAsync(string strLVTokenID, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail) {
            return base.Channel.GetCustomerIDByDetailsAsync(strLVTokenID, StrFirstName, StrLastName, StrDOB, StrMobileNo, StrEmail);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCustomerIDByCustomerDetails(string strLVTokenID, string StrCustomerType, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail, string StrSalutation, string StrPANNo, string StrUIDNo, string StrTANNo, string StrPolicyNo) {
            return base.Channel.GetCustomerIDByCustomerDetails(strLVTokenID, StrCustomerType, StrFirstName, StrLastName, StrDOB, StrMobileNo, StrEmail, StrSalutation, StrPANNo, StrUIDNo, StrTANNo, StrPolicyNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerIDByCustomerDetailsAsync(string strLVTokenID, string StrCustomerType, string StrFirstName, string StrLastName, string StrDOB, string StrMobileNo, string StrEmail, string StrSalutation, string StrPANNo, string StrUIDNo, string StrTANNo, string StrPolicyNo) {
            return base.Channel.GetCustomerIDByCustomerDetailsAsync(strLVTokenID, StrCustomerType, StrFirstName, StrLastName, StrDOB, StrMobileNo, StrEmail, StrSalutation, StrPANNo, StrUIDNo, StrTANNo, StrPolicyNo);
        }
        
        public PrjPASS.GCGenericService.User AddUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.AddUser(strLVTokenID, objLVUser);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AddUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.AddUserAsync(strLVTokenID, objLVUser);
        }
        
        public PrjPASS.GCGenericService.User EditUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.EditUser(strLVTokenID, objLVUser);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> EditUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.EditUserAsync(strLVTokenID, objLVUser);
        }
        
        public PrjPASS.GCGenericService.User AssignRoleToUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.AssignRoleToUser(strLVTokenID, objLVUser);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AssignRoleToUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.AssignRoleToUserAsync(strLVTokenID, objLVUser);
        }
        
        public PrjPASS.GCGenericService.User AssignLocationToUser(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.AssignLocationToUser(strLVTokenID, objLVUser);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> AssignLocationToUserAsync(string strLVTokenID, PrjPASS.GCGenericService.User objLVUser) {
            return base.Channel.AssignLocationToUserAsync(strLVTokenID, objLVUser);
        }
        
        public PrjPASS.GCGenericService.User GetUserInfo(string strLVTokenID, string strUserID) {
            return base.Channel.GetUserInfo(strLVTokenID, strUserID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.User> GetUserInfoAsync(string strLVTokenID, string strUserID) {
            return base.Channel.GetUserInfoAsync(strLVTokenID, strUserID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetUserOfficeList(string strLVTokenID, string strUserId, string strUserType) {
            return base.Channel.GetUserOfficeList(strLVTokenID, strUserId, strUserType);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetUserOfficeListAsync(string strLVTokenID, string strUserId, string strUserType) {
            return base.Channel.GetUserOfficeListAsync(strLVTokenID, strUserId, strUserType);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCityDistrictMasterNew(string strLVTokenID, PrjPASS.GCGenericService.CityDistrictMaster objCity) {
            return base.Channel.GetLOVCityDistrictMasterNew(strLVTokenID, objCity);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCityDistrictMasterNewAsync(string strLVTokenID, PrjPASS.GCGenericService.CityDistrictMaster objCity) {
            return base.Channel.GetLOVCityDistrictMasterNewAsync(strLVTokenID, objCity);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVBankDetails(string strLVTokenID, string strBankName, string strBankCode) {
            return base.Channel.GetLOVBankDetails(strLVTokenID, strBankName, strBankCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVBankDetailsAsync(string strLVTokenID, string strBankName, string strBankCode) {
            return base.Channel.GetLOVBankDetailsAsync(strLVTokenID, strBankName, strBankCode);
        }
        
        public PrjPASS.GCGenericService.Customer SaveDuplicateCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer) {
            return base.Channel.SaveDuplicateCustomer(strLVTokenID, objLVCustomer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> SaveDuplicateCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer) {
            return base.Channel.SaveDuplicateCustomerAsync(strLVTokenID, objLVCustomer);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetGenderList(string strLVTokenID) {
            return base.Channel.GetGenderList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetGenderListAsync(string strLVTokenID) {
            return base.Channel.GetGenderListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetSourceofFundList(string strLVTokenID) {
            return base.Channel.GetSourceofFundList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSourceofFundListAsync(string strLVTokenID) {
            return base.Channel.GetSourceofFundListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetInsuranceRepositoryList(string strLVTokenID) {
            return base.Channel.GetInsuranceRepositoryList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetInsuranceRepositoryListAsync(string strLVTokenID) {
            return base.Channel.GetInsuranceRepositoryListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetNationalityList(string strLVTokenID) {
            return base.Channel.GetNationalityList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetNationalityListAsync(string strLVTokenID) {
            return base.Channel.GetNationalityListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetTypeofCompanyList(string strLVTokenID) {
            return base.Channel.GetTypeofCompanyList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetTypeofCompanyListAsync(string strLVTokenID) {
            return base.Channel.GetTypeofCompanyListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVIntrHistoryData(string strLVTokenID, string strLVIntermediaryCode) {
            return base.Channel.GetLOVIntrHistoryData(strLVTokenID, strLVIntermediaryCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntrHistoryDataAsync(string strLVTokenID, string strLVIntermediaryCode) {
            return base.Channel.GetLOVIntrHistoryDataAsync(strLVTokenID, strLVIntermediaryCode);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVIntermediaryType(string strLVTokenID, string strLVIntermediaryTypeCode, string strLVIntermediaryTypeName) {
            return base.Channel.GetLOVIntermediaryType(strLVTokenID, strLVIntermediaryTypeCode, strLVIntermediaryTypeName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntermediaryTypeAsync(string strLVTokenID, string strLVIntermediaryTypeCode, string strLVIntermediaryTypeName) {
            return base.Channel.GetLOVIntermediaryTypeAsync(strLVTokenID, strLVIntermediaryTypeCode, strLVIntermediaryTypeName);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVIntrLicense(string strLVTokenID, string strLVLicenseNo, string strLVIntermediaryName, string strLVIntrCategoryID) {
            return base.Channel.GetLOVIntrLicense(strLVTokenID, strLVLicenseNo, strLVIntermediaryName, strLVIntrCategoryID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntrLicenseAsync(string strLVTokenID, string strLVLicenseNo, string strLVIntermediaryName, string strLVIntrCategoryID) {
            return base.Channel.GetLOVIntrLicenseAsync(strLVTokenID, strLVLicenseNo, strLVIntermediaryName, strLVIntrCategoryID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVPartner(string strLVTokenID, string strLVPartnerID, string strLVPartnerName, string strLVIntrCategoryID) {
            return base.Channel.GetLOVPartner(strLVTokenID, strLVPartnerID, strLVPartnerName, strLVIntrCategoryID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVPartnerAsync(string strLVTokenID, string strLVPartnerID, string strLVPartnerName, string strLVIntrCategoryID) {
            return base.Channel.GetLOVPartnerAsync(strLVTokenID, strLVPartnerID, strLVPartnerName, strLVIntrCategoryID);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetSourceBankMapID(string strLVTokenID, string strIntermediaryRole, string strLVSelectedSourceBankID) {
            return base.Channel.GetSourceBankMapID(strLVTokenID, strIntermediaryRole, strLVSelectedSourceBankID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetSourceBankMapIDAsync(string strLVTokenID, string strIntermediaryRole, string strLVSelectedSourceBankID) {
            return base.Channel.GetSourceBankMapIDAsync(strLVTokenID, strIntermediaryRole, strLVSelectedSourceBankID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVParentIntermediary(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID) {
            return base.Channel.GetLOVParentIntermediary(strLVTokenID, strLVIntremediaryID, strLVIntermediaryName, strLVAreaVillageName, strLVCityDistrict, strLVPinCode, strLVPinCodeLocality, strLVState, strLVInterEmptag, strLVEmployeeID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVParentIntermediaryAsync(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID) {
            return base.Channel.GetLOVParentIntermediaryAsync(strLVTokenID, strLVIntremediaryID, strLVIntermediaryName, strLVAreaVillageName, strLVCityDistrict, strLVPinCode, strLVPinCodeLocality, strLVState, strLVInterEmptag, strLVEmployeeID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVAssociatedAgent(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID) {
            return base.Channel.GetLOVAssociatedAgent(strLVTokenID, strLVIntremediaryID, strLVIntermediaryName, strLVAreaVillageName, strLVCityDistrict, strLVPinCode, strLVPinCodeLocality, strLVState, strLVInterEmptag, strLVEmployeeID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVAssociatedAgentAsync(string strLVTokenID, string strLVIntremediaryID, string strLVIntermediaryName, string strLVAreaVillageName, string strLVCityDistrict, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVInterEmptag, string strLVEmployeeID) {
            return base.Channel.GetLOVAssociatedAgentAsync(strLVTokenID, strLVIntremediaryID, strLVIntermediaryName, strLVAreaVillageName, strLVCityDistrict, strLVPinCode, strLVPinCodeLocality, strLVState, strLVInterEmptag, strLVEmployeeID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVPayLocation(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName) {
            return base.Channel.GetLOVPayLocation(strLVTokenID, strLVCityDistrictCode, strLVCityDistrictName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVPayLocationAsync(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName) {
            return base.Channel.GetLOVPayLocationAsync(strLVTokenID, strLVCityDistrictCode, strLVCityDistrictName);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDuplicateIntermediary(string strLVTokenID, string strIntermediaryName, string strDOB, string strPinCode) {
            return base.Channel.GetDuplicateIntermediary(strLVTokenID, strIntermediaryName, strDOB, strPinCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDuplicateIntermediaryAsync(string strLVTokenID, string strIntermediaryName, string strDOB, string strPinCode) {
            return base.Channel.GetDuplicateIntermediaryAsync(strLVTokenID, strIntermediaryName, strDOB, strPinCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult AddOffice(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice) {
            return base.Channel.AddOffice(strLVTokenID, objLVOffice);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddOfficeAsync(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice) {
            return base.Channel.AddOfficeAsync(strLVTokenID, objLVOffice);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult EditOffice(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice) {
            return base.Channel.EditOffice(strLVTokenID, objLVOffice);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditOfficeAsync(string strLVTokenID, PrjPASS.GCGenericService.Office objLVOffice) {
            return base.Channel.EditOfficeAsync(strLVTokenID, objLVOffice);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVOfficeHistoryData(string strLVTokenID, string strLVOfficeCode) {
            return base.Channel.GetLOVOfficeHistoryData(strLVTokenID, strLVOfficeCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVOfficeHistoryDataAsync(string strLVTokenID, string strLVOfficeCode) {
            return base.Channel.GetLOVOfficeHistoryDataAsync(strLVTokenID, strLVOfficeCode);
        }
        
        public object GetDuplicateCustomer(string strLVTokenID, string strCustomerID) {
            return base.Channel.GetDuplicateCustomer(strLVTokenID, strCustomerID);
        }
        
        public System.Threading.Tasks.Task<object> GetDuplicateCustomerAsync(string strLVTokenID, string strCustomerID) {
            return base.Channel.GetDuplicateCustomerAsync(strLVTokenID, strCustomerID);
        }
        
        public object GetUserDetails(string strLVTokenID, string strUserID) {
            return base.Channel.GetUserDetails(strLVTokenID, strUserID);
        }
        
        public System.Threading.Tasks.Task<object> GetUserDetailsAsync(string strLVTokenID, string strUserID) {
            return base.Channel.GetUserDetailsAsync(strLVTokenID, strUserID);
        }
        
        public PrjPASS.GCGenericService.Intermediary GetIntermediary(string strLVTokenID, string strIntermediaryId) {
            return base.Channel.GetIntermediary(strLVTokenID, strIntermediaryId);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Intermediary> GetIntermediaryAsync(string strLVTokenID, string strIntermediaryId) {
            return base.Channel.GetIntermediaryAsync(strLVTokenID, strIntermediaryId);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetDealer(string strLVTokenID, PrjPASS.GCGenericService.Dealer objLVDealer) {
            return base.Channel.GetDealer(strLVTokenID, objLVDealer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetDealerAsync(string strLVTokenID, PrjPASS.GCGenericService.Dealer objLVDealer) {
            return base.Channel.GetDealerAsync(strLVTokenID, objLVDealer);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetCustomerRoleList(string strLVTokenID) {
            return base.Channel.GetCustomerRoleList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetCustomerRoleListAsync(string strLVTokenID) {
            return base.Channel.GetCustomerRoleListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetSalutationList(string strLVTokenID, string strCustomerType, string strEntityCategory) {
            return base.Channel.GetSalutationList(strLVTokenID, strCustomerType, strEntityCategory);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetSalutationListAsync(string strLVTokenID, string strCustomerType, string strEntityCategory) {
            return base.Channel.GetSalutationListAsync(strLVTokenID, strCustomerType, strEntityCategory);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetIDProofList(string strLVTokenID, string strCustomerType) {
            return base.Channel.GetIDProofList(strLVTokenID, strCustomerType);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIDProofListAsync(string strLVTokenID, string strCustomerType) {
            return base.Channel.GetIDProofListAsync(strLVTokenID, strCustomerType);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetEducationQualificationList(string strLVTokenID) {
            return base.Channel.GetEducationQualificationList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetEducationQualificationListAsync(string strLVTokenID) {
            return base.Channel.GetEducationQualificationListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetInsuredDetails(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetInsuredDetails(strLVTokenID, strLVCustomerID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetInsuredDetailsAsync(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetInsuredDetailsAsync(strLVTokenID, strLVCustomerID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetApprovalDataForCustomer(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetApprovalDataForCustomer(strLVTokenID, strLVCustomerID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetApprovalDataForCustomerAsync(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetApprovalDataForCustomerAsync(strLVTokenID, strLVCustomerID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPopUpValues(string strLVTokenID, string strLVQry) {
            return base.Channel.GetPopUpValues(strLVTokenID, strLVQry);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPopUpValuesAsync(string strLVTokenID, string strLVQry) {
            return base.Channel.GetPopUpValuesAsync(strLVTokenID, strLVQry);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCustomerHistoryData(string strLVTokenID, string strCustomerID, int intIsPCG) {
            return base.Channel.GetLOVCustomerHistoryData(strLVTokenID, strCustomerID, intIsPCG);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCustomerHistoryDataAsync(string strLVTokenID, string strCustomerID, int intIsPCG) {
            return base.Channel.GetLOVCustomerHistoryDataAsync(strLVTokenID, strCustomerID, intIsPCG);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVDuplicateCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer) {
            return base.Channel.GetLOVDuplicateCustomer(strLVTokenID, objLVCustomer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVDuplicateCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objLVCustomer) {
            return base.Channel.GetLOVDuplicateCustomerAsync(strLVTokenID, objLVCustomer);
        }
        
        public PrjPASS.GCGenericService.Employee GetEmployee(string strLVTokenID, string strLVEmployeeCode, string strLVEmployeeType, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetEmployee(strLVTokenID, strLVEmployeeCode, strLVEmployeeType, strLVStartDate, strLVStartTime);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Employee> GetEmployeeAsync(string strLVTokenID, string strLVEmployeeCode, string strLVEmployeeType, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetEmployeeAsync(strLVTokenID, strLVEmployeeCode, strLVEmployeeType, strLVStartDate, strLVStartTime);
        }
        
        public object AddEmployee(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee) {
            return base.Channel.AddEmployee(strLVTokenID, objEmployee);
        }
        
        public System.Threading.Tasks.Task<object> AddEmployeeAsync(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee) {
            return base.Channel.AddEmployeeAsync(strLVTokenID, objEmployee);
        }
        
        public object EditEmployee(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee) {
            return base.Channel.EditEmployee(strLVTokenID, objEmployee);
        }
        
        public System.Threading.Tasks.Task<object> EditEmployeeAsync(string strLVTokenID, PrjPASS.GCGenericService.Employee objEmployee) {
            return base.Channel.EditEmployeeAsync(strLVTokenID, objEmployee);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVEmployee(string strLVTokenID, string strEmployeeType, string strDesignation, string strEmployeeCode, string strEmployeeName, string strOfficeCode, bool boolShowall) {
            return base.Channel.GetLOVEmployee(strLVTokenID, strEmployeeType, strDesignation, strEmployeeCode, strEmployeeName, strOfficeCode, boolShowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVEmployeeAsync(string strLVTokenID, string strEmployeeType, string strDesignation, string strEmployeeCode, string strEmployeeName, string strOfficeCode, bool boolShowall) {
            return base.Channel.GetLOVEmployeeAsync(strLVTokenID, strEmployeeType, strDesignation, strEmployeeCode, strEmployeeName, strOfficeCode, boolShowall);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetIndustryList(string strLVTokenID) {
            return base.Channel.GetIndustryList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIndustryListAsync(string strLVTokenID) {
            return base.Channel.GetIndustryListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCountry(string strLVTokenID, string strLVCountryCode, string strLVCountryName) {
            return base.Channel.GetLOVCountry(strLVTokenID, strLVCountryCode, strLVCountryName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCountryAsync(string strLVTokenID, string strLVCountryCode, string strLVCountryName) {
            return base.Channel.GetLOVCountryAsync(strLVTokenID, strLVCountryCode, strLVCountryName);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVStateHistoryData(string strLVTokenID, string strStateCode) {
            return base.Channel.GetLOVStateHistoryData(strLVTokenID, strStateCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVStateHistoryDataAsync(string strLVTokenID, string strStateCode) {
            return base.Channel.GetLOVStateHistoryDataAsync(strLVTokenID, strStateCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult AddCityDistrict(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict) {
            return base.Channel.AddCityDistrict(strLVTokenID, objLVCityDistrict);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddCityDistrictAsync(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict) {
            return base.Channel.AddCityDistrictAsync(strLVTokenID, objLVCityDistrict);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult EditCityDistrict(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict) {
            return base.Channel.EditCityDistrict(strLVTokenID, objLVCityDistrict);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditCityDistrictAsync(string strLVTokenID, PrjPASS.GCGenericService.CityDistrict objLVCityDistrict) {
            return base.Channel.EditCityDistrictAsync(strLVTokenID, objLVCityDistrict);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetCityDistrict(string strLVTokenID, string strCityDistrictCode, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetCityDistrict(strLVTokenID, strCityDistrictCode, strLVStartDate, strLVStartTime);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetCityDistrictAsync(string strLVTokenID, string strCityDistrictCode, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetCityDistrictAsync(strLVTokenID, strCityDistrictCode, strLVStartDate, strLVStartTime);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVCityDistrictHistoryData(string strLVTokenID, string strCityDistrictCode) {
            return base.Channel.GetLOVCityDistrictHistoryData(strLVTokenID, strCityDistrictCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVCityDistrictHistoryDataAsync(string strLVTokenID, string strCityDistrictCode) {
            return base.Channel.GetLOVCityDistrictHistoryDataAsync(strLVTokenID, strCityDistrictCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult AddAreaVillage(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage) {
            return base.Channel.AddAreaVillage(strLVTokenID, objLVAreaVillage);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddAreaVillageAsync(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage) {
            return base.Channel.AddAreaVillageAsync(strLVTokenID, objLVAreaVillage);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult EditAreaVillage(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage) {
            return base.Channel.EditAreaVillage(strLVTokenID, objLVAreaVillage);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditAreaVillageAsync(string strLVTokenID, PrjPASS.GCGenericService.AreaVillage objLVAreaVillage) {
            return base.Channel.EditAreaVillageAsync(strLVTokenID, objLVAreaVillage);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetAreaVillage(string strLVTokenID, string strStateCode, string strDistrictCode, string strAreaVillageCode, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetAreaVillage(strLVTokenID, strStateCode, strDistrictCode, strAreaVillageCode, strLVStartDate, strLVStartTime);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetAreaVillageAsync(string strLVTokenID, string strStateCode, string strDistrictCode, string strAreaVillageCode, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetAreaVillageAsync(strLVTokenID, strStateCode, strDistrictCode, strAreaVillageCode, strLVStartDate, strLVStartTime);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVAreaVillageHistoryData(string strLVTokenID, string strAreaVillageCode) {
            return base.Channel.GetLOVAreaVillageHistoryData(strLVTokenID, strAreaVillageCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVAreaVillageHistoryDataAsync(string strLVTokenID, string strAreaVillageCode) {
            return base.Channel.GetLOVAreaVillageHistoryDataAsync(strLVTokenID, strAreaVillageCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult AddPinCode(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode) {
            return base.Channel.AddPinCode(strLVTokenID, objLVPinCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddPinCodeAsync(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode) {
            return base.Channel.AddPinCodeAsync(strLVTokenID, objLVPinCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult EditPinCode(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode) {
            return base.Channel.EditPinCode(strLVTokenID, objLVPinCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditPinCodeAsync(string strLVTokenID, PrjPASS.GCGenericService.Pincode objLVPinCode) {
            return base.Channel.EditPinCodeAsync(strLVTokenID, objLVPinCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetPinCode(string strLVTokenID, string strStateCode, string strDistrictCode, string strPinCode, string strPinCodeLocality, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetPinCode(strLVTokenID, strStateCode, strDistrictCode, strPinCode, strPinCodeLocality, strLVStartDate, strLVStartTime);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetPinCodeAsync(string strLVTokenID, string strStateCode, string strDistrictCode, string strPinCode, string strPinCodeLocality, string strLVStartDate, string strLVStartTime) {
            return base.Channel.GetPinCodeAsync(strLVTokenID, strStateCode, strDistrictCode, strPinCode, strPinCodeLocality, strLVStartDate, strLVStartTime);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVPinCodeAddress(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVCityDistrict) {
            return base.Channel.GetLOVPinCodeAddress(strLVTokenID, strLVPinCode, strLVPinCodeLocality, strLVState, strLVCityDistrict);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVPinCodeAddressAsync(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVState, string strLVCityDistrict) {
            return base.Channel.GetLOVPinCodeAddressAsync(strLVTokenID, strLVPinCode, strLVPinCodeLocality, strLVState, strLVCityDistrict);
        }
        
        public PrjPASS.GCGenericService.Location GetLocation(string strLVTokenID, string strLocationCode) {
            return base.Channel.GetLocation(strLVTokenID, strLocationCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Location> GetLocationAsync(string strLVTokenID, string strLocationCode) {
            return base.Channel.GetLocationAsync(strLVTokenID, strLocationCode);
        }
        
        public PrjPASS.GCGenericService.Location AddLocation(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation) {
            return base.Channel.AddLocation(strLVTokenID, objLVLocation);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Location> AddLocationAsync(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation) {
            return base.Channel.AddLocationAsync(strLVTokenID, objLVLocation);
        }
        
        public object EditLocation(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation) {
            return base.Channel.EditLocation(strLVTokenID, objLVLocation);
        }
        
        public System.Threading.Tasks.Task<object> EditLocationAsync(string strLVTokenID, PrjPASS.GCGenericService.Location objLVLocation) {
            return base.Channel.EditLocationAsync(strLVTokenID, objLVLocation);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVAddress(string strLVTokenID, string strLVLocationCode, string strLVAddress1, string strLVAddress2, string strLVAddress3, string strLVPinCode, string strLVCityDistrict, string strLVPinCodeLocality, string strLVState) {
            return base.Channel.GetLOVAddress(strLVTokenID, strLVLocationCode, strLVAddress1, strLVAddress2, strLVAddress3, strLVPinCode, strLVCityDistrict, strLVPinCodeLocality, strLVState);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVAddressAsync(string strLVTokenID, string strLVLocationCode, string strLVAddress1, string strLVAddress2, string strLVAddress3, string strLVPinCode, string strLVCityDistrict, string strLVPinCodeLocality, string strLVState) {
            return base.Channel.GetLOVAddressAsync(strLVTokenID, strLVLocationCode, strLVAddress1, strLVAddress2, strLVAddress3, strLVPinCode, strLVCityDistrict, strLVPinCodeLocality, strLVState);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetIntermediaryCategoryList(string strLVTokenID, string strIntermediaryType) {
            return base.Channel.GetIntermediaryCategoryList(strLVTokenID, strIntermediaryType);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetIntermediaryCategoryListAsync(string strLVTokenID, string strIntermediaryType) {
            return base.Channel.GetIntermediaryCategoryListAsync(strLVTokenID, strIntermediaryType);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetParentRelationList(string strLVTokenID, string strIntermediaryCategoryID) {
            return base.Channel.GetParentRelationList(strLVTokenID, strIntermediaryCategoryID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetParentRelationListAsync(string strLVTokenID, string strIntermediaryCategoryID) {
            return base.Channel.GetParentRelationListAsync(strLVTokenID, strIntermediaryCategoryID);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetIsLicenseRequired(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsLicenseRequired(strLVTokenID, strIntermediaryRole);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsLicenseRequiredAsync(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsLicenseRequiredAsync(strLVTokenID, strIntermediaryRole);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetIsLicenseReqRoleWise(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsLicenseReqRoleWise(strLVTokenID, strIntermediaryRole);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsLicenseReqRoleWiseAsync(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsLicenseReqRoleWiseAsync(strLVTokenID, strIntermediaryRole);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLicenseDate(string strLVTokenID, string strLicenseNo) {
            return base.Channel.GetLicenseDate(strLVTokenID, strLicenseNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLicenseDateAsync(string strLVTokenID, string strLicenseNo) {
            return base.Channel.GetLicenseDateAsync(strLVTokenID, strLicenseNo);
        }
        
        public object GetIsSourceBankApplicable(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsSourceBankApplicable(strLVTokenID, strIntermediaryRole);
        }
        
        public System.Threading.Tasks.Task<object> GetIsSourceBankApplicableAsync(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsSourceBankApplicableAsync(strLVTokenID, strIntermediaryRole);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetCategoryChangeCount(string strLVTokenID, string strLVIntermediaryID) {
            return base.Channel.GetCategoryChangeCount(strLVTokenID, strLVIntermediaryID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetCategoryChangeCountAsync(string strLVTokenID, string strLVIntermediaryID) {
            return base.Channel.GetCategoryChangeCountAsync(strLVTokenID, strLVIntermediaryID);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetIsMultiUserRequired(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsMultiUserRequired(strLVTokenID, strIntermediaryRole);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsMultiUserRequiredAsync(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsMultiUserRequiredAsync(strLVTokenID, strIntermediaryRole);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetDealerFlag(string strLVTokenID, string strLVDealer) {
            return base.Channel.GetDealerFlag(strLVTokenID, strLVDealer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetDealerFlagAsync(string strLVTokenID, string strLVDealer) {
            return base.Channel.GetDealerFlagAsync(strLVTokenID, strLVDealer);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetIsIdentityNumRequired(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsIdentityNumRequired(strLVTokenID, strIntermediaryRole);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsIdentityNumRequiredAsync(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsIdentityNumRequiredAsync(strLVTokenID, strIntermediaryRole);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetApprovalDataForIntermediary(string strLVTokenID, string strIntermediaryCode) {
            return base.Channel.GetApprovalDataForIntermediary(strLVTokenID, strIntermediaryCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetApprovalDataForIntermediaryAsync(string strLVTokenID, string strIntermediaryCode) {
            return base.Channel.GetApprovalDataForIntermediaryAsync(strLVTokenID, strIntermediaryCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult AddIntermediary(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary) {
            return base.Channel.AddIntermediary(strLVTokenID, objIntermediary);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddIntermediaryAsync(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary) {
            return base.Channel.AddIntermediaryAsync(strLVTokenID, objIntermediary);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult EditIntermediary(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary) {
            return base.Channel.EditIntermediary(strLVTokenID, objIntermediary);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditIntermediaryAsync(string strLVTokenID, PrjPASS.GCGenericService.Intermediary objIntermediary) {
            return base.Channel.EditIntermediaryAsync(strLVTokenID, objIntermediary);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetIsServiceTaxRequired(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsServiceTaxRequired(strLVTokenID, strIntermediaryRole);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetIsServiceTaxRequiredAsync(string strLVTokenID, string strIntermediaryRole) {
            return base.Channel.GetIsServiceTaxRequiredAsync(strLVTokenID, strIntermediaryRole);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVIntermediary(string strLVTokenID, string strLVIntermediaryRole, string strLVIntermediaryType, string strLVIntermediaryCode, string strLVIntermediaryName, string strLVIntermediaryCity, string strLVIntermediaryPincode, string strLVIntermediaryPinLocality, string strLVIntermediaryState, bool boolLVShowall) {
            return base.Channel.GetLOVIntermediary(strLVTokenID, strLVIntermediaryRole, strLVIntermediaryType, strLVIntermediaryCode, strLVIntermediaryName, strLVIntermediaryCity, strLVIntermediaryPincode, strLVIntermediaryPinLocality, strLVIntermediaryState, boolLVShowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVIntermediaryAsync(string strLVTokenID, string strLVIntermediaryRole, string strLVIntermediaryType, string strLVIntermediaryCode, string strLVIntermediaryName, string strLVIntermediaryCity, string strLVIntermediaryPincode, string strLVIntermediaryPinLocality, string strLVIntermediaryState, bool boolLVShowall) {
            return base.Channel.GetLOVIntermediaryAsync(strLVTokenID, strLVIntermediaryRole, strLVIntermediaryType, strLVIntermediaryCode, strLVIntermediaryName, strLVIntermediaryCity, strLVIntermediaryPincode, strLVIntermediaryPinLocality, strLVIntermediaryState, boolLVShowall);
        }
        
        public string Authenticate(string UserID, string Password) {
            return base.Channel.Authenticate(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateAsync(string UserID, string Password) {
            return base.Channel.AuthenticateAsync(UserID, Password);
        }
        
        public bool IsAuthorized(string UserID, string Section, string Context) {
            return base.Channel.IsAuthorized(UserID, Section, Context);
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthorizedAsync(string UserID, string Section, string Context) {
            return base.Channel.IsAuthorizedAsync(UserID, Section, Context);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult FetchQualityCheck(string strLVTokenID, string strProposalNo) {
            return base.Channel.FetchQualityCheck(strLVTokenID, strProposalNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> FetchQualityCheckAsync(string strLVTokenID, string strProposalNo) {
            return base.Channel.FetchQualityCheckAsync(strLVTokenID, strProposalNo);
        }
        
        public PrjPASS.GCGenericService.GeneralServiceResult SaveQualityCheckWF(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicLVWFParams) {
            return base.Channel.SaveQualityCheckWF(strLVTokenID, objQualityCheck, dicLVWFParams);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GeneralServiceResult> SaveQualityCheckWFAsync(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicLVWFParams) {
            return base.Channel.SaveQualityCheckWFAsync(strLVTokenID, objQualityCheck, dicLVWFParams);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult SaveQualityCheck(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicProcessFlowParams, string StrModeofOperation, string StrWorkFlowID) {
            return base.Channel.SaveQualityCheck(strLVTokenID, objQualityCheck, dicProcessFlowParams, StrModeofOperation, StrWorkFlowID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> SaveQualityCheckAsync(string strLVTokenID, PrjPASS.GCGenericService.QualityCheck objQualityCheck, System.Collections.Generic.Dictionary<string, string> dicProcessFlowParams, string StrModeofOperation, string StrWorkFlowID) {
            return base.Channel.SaveQualityCheckAsync(strLVTokenID, objQualityCheck, dicProcessFlowParams, StrModeofOperation, StrWorkFlowID);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult SearchQualityCheck(string strLVTokenID, string strSearchProposalNo) {
            return base.Channel.SearchQualityCheck(strLVTokenID, strSearchProposalNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> SearchQualityCheckAsync(string strLVTokenID, string strSearchProposalNo) {
            return base.Channel.SearchQualityCheckAsync(strLVTokenID, strSearchProposalNo);
        }
        
        public PrjPASS.GCGenericService.Customer GetCustomer(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetCustomer(strLVTokenID, strLVCustomerID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetCustomerAsync(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetCustomerAsync(strLVTokenID, strLVCustomerID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetPCGTypeRole(string strLVTokenID) {
            return base.Channel.GetPCGTypeRole(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetPCGTypeRoleAsync(string strLVTokenID) {
            return base.Channel.GetPCGTypeRoleAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetBlacklistedRightRole(string strLVTokenID) {
            return base.Channel.GetBlacklistedRightRole(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetBlacklistedRightRoleAsync(string strLVTokenID) {
            return base.Channel.GetBlacklistedRightRoleAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.Customer GetPCGClient(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetPCGClient(strLVTokenID, strLVCustomerID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetPCGClientAsync(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetPCGClientAsync(strLVTokenID, strLVCustomerID);
        }
        
        public PrjPASS.GCGenericService.Customer GetCustomerMaster(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetCustomerMaster(strLVTokenID, strLVCustomerID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetCustomerMasterAsync(string strLVTokenID, string strLVCustomerID) {
            return base.Channel.GetCustomerMasterAsync(strLVTokenID, strLVCustomerID);
        }
        
        public PrjPASS.GCGenericService.Customer GetCustomerMasterHistory(string strLVTokenID, string strLVCustomerID, string strUpdateSerialNo, int intIsPCG) {
            return base.Channel.GetCustomerMasterHistory(strLVTokenID, strLVCustomerID, strUpdateSerialNo, intIsPCG);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> GetCustomerMasterHistoryAsync(string strLVTokenID, string strLVCustomerID, string strUpdateSerialNo, int intIsPCG) {
            return base.Channel.GetCustomerMasterHistoryAsync(strLVTokenID, strLVCustomerID, strUpdateSerialNo, intIsPCG);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetAffiliationList(string strLVTokenID) {
            return base.Channel.GetAffiliationList(strLVTokenID);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetAffiliationListAsync(string strLVTokenID) {
            return base.Channel.GetAffiliationListAsync(strLVTokenID);
        }
        
        public PrjPASS.GCGenericService.Customer AddCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer, bool boolInsertDuplicate) {
            return base.Channel.AddCustomer(strLVTokenID, objCVCustomer, boolInsertDuplicate);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> AddCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer, bool boolInsertDuplicate) {
            return base.Channel.AddCustomerAsync(strLVTokenID, objCVCustomer, boolInsertDuplicate);
        }
        
        public PrjPASS.GCGenericService.Customer EditCustomer(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer) {
            return base.Channel.EditCustomer(strLVTokenID, objCVCustomer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> EditCustomerAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer) {
            return base.Channel.EditCustomerAsync(strLVTokenID, objCVCustomer);
        }
        
        public PrjPASS.GCGenericService.Customer EditPCGClient(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer) {
            return base.Channel.EditPCGClient(strLVTokenID, objCVCustomer);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.Customer> EditPCGClientAsync(string strLVTokenID, PrjPASS.GCGenericService.Customer objCVCustomer) {
            return base.Channel.EditPCGClientAsync(strLVTokenID, objCVCustomer);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCustomer(string strLVTokenID, string strLVCustomerName, string strLVCustomerId, string strLVCustomerType, string strLVState, string strLVCityDistrict, string strLVAreaVillage, string strLVPincode, string strLVPincodeLocality, string strLVIntrEmpTag, string strLVUserId) {
            return base.Channel.GetLOVCustomer(strLVTokenID, strLVCustomerName, strLVCustomerId, strLVCustomerType, strLVState, strLVCityDistrict, strLVAreaVillage, strLVPincode, strLVPincodeLocality, strLVIntrEmpTag, strLVUserId);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCustomerAsync(string strLVTokenID, string strLVCustomerName, string strLVCustomerId, string strLVCustomerType, string strLVState, string strLVCityDistrict, string strLVAreaVillage, string strLVPincode, string strLVPincodeLocality, string strLVIntrEmpTag, string strLVUserId) {
            return base.Channel.GetLOVCustomerAsync(strLVTokenID, strLVCustomerName, strLVCustomerId, strLVCustomerType, strLVState, strLVCityDistrict, strLVAreaVillage, strLVPincode, strLVPincodeLocality, strLVIntrEmpTag, strLVUserId);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVLocation(string strLVTokenID, string strLVAddressLine1, string strLVAddressLine2, string strLVStreet, string strLVApartment, string strLVPincode, string strLVAreaVillageCode, string strLVCityDistrictCode, string strLVStateCode, string strLVLocationCode) {
            return base.Channel.GetLOVLocation(strLVTokenID, strLVAddressLine1, strLVAddressLine2, strLVStreet, strLVApartment, strLVPincode, strLVAreaVillageCode, strLVCityDistrictCode, strLVStateCode, strLVLocationCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVLocationAsync(string strLVTokenID, string strLVAddressLine1, string strLVAddressLine2, string strLVStreet, string strLVApartment, string strLVPincode, string strLVAreaVillageCode, string strLVCityDistrictCode, string strLVStateCode, string strLVLocationCode) {
            return base.Channel.GetLOVLocationAsync(strLVTokenID, strLVAddressLine1, strLVAddressLine2, strLVStreet, strLVApartment, strLVPincode, strLVAreaVillageCode, strLVCityDistrictCode, strLVStateCode, strLVLocationCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVState(string strLVTokenID, string strStateName, string strStateCode, bool boolShowall) {
            return base.Channel.GetLOVState(strLVTokenID, strStateName, strStateCode, boolShowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVStateAsync(string strLVTokenID, string strStateName, string strStateCode, bool boolShowall) {
            return base.Channel.GetLOVStateAsync(strLVTokenID, strStateName, strStateCode, boolShowall);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVStateMaster(string strLVTokenID, string StateCode, string StateName, string strCountryCode, bool Showall) {
            return base.Channel.GetLOVStateMaster(strLVTokenID, StateCode, StateName, strCountryCode, Showall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVStateMasterAsync(string strLVTokenID, string StateCode, string StateName, string strCountryCode, bool Showall) {
            return base.Channel.GetLOVStateMasterAsync(strLVTokenID, StateCode, StateName, strCountryCode, Showall);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCityDistrictMaster(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName, string strLVStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolLVShowall) {
            return base.Channel.GetLOVCityDistrictMaster(strLVTokenID, strLVCityDistrictCode, strLVCityDistrictName, strLVStateCode, strCityDistrictFlag, strEQZone, strRSMDZone, strSTFIZone, boolLVShowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCityDistrictMasterAsync(string strLVTokenID, string strLVCityDistrictCode, string strLVCityDistrictName, string strLVStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolLVShowall) {
            return base.Channel.GetLOVCityDistrictMasterAsync(strLVTokenID, strLVCityDistrictCode, strLVCityDistrictName, strLVStateCode, strCityDistrictFlag, strEQZone, strRSMDZone, strSTFIZone, boolLVShowall);
        }
        
        public PrjPASS.GCGenericService.GenericResult GetLOVCityDistrictNew(string strLVTokenID, string strLVCityCode, string strLVCityName, string strLVDistrictCode, string strLVStateCode, string strCityDistrictFlag) {
            return base.Channel.GetLOVCityDistrictNew(strLVTokenID, strLVCityCode, strLVCityName, strLVDistrictCode, strLVStateCode, strCityDistrictFlag);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericResult> GetLOVCityDistrictNewAsync(string strLVTokenID, string strLVCityCode, string strLVCityName, string strLVDistrictCode, string strLVStateCode, string strCityDistrictFlag) {
            return base.Channel.GetLOVCityDistrictNewAsync(strLVTokenID, strLVCityCode, strLVCityName, strLVDistrictCode, strLVStateCode, strCityDistrictFlag);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVOffice(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName, bool boolShowall) {
            return base.Channel.GetLOVOffice(strLVTokenID, strOfficeType, strOfficeCode, strOfficeName, boolShowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVOfficeAsync(string strLVTokenID, string strOfficeType, string strOfficeCode, string strOfficeName, bool boolShowall) {
            return base.Channel.GetLOVOfficeAsync(strLVTokenID, strOfficeType, strOfficeCode, strOfficeName, boolShowall);
        }
        
        public object GetOffice(string strLVTokenID, string strLVOfficeCode) {
            return base.Channel.GetOffice(strLVTokenID, strLVOfficeCode);
        }
        
        public System.Threading.Tasks.Task<object> GetOfficeAsync(string strLVTokenID, string strLVOfficeCode) {
            return base.Channel.GetOfficeAsync(strLVTokenID, strLVOfficeCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVCityDistrict(string strLVTokenID, string strCityDistrictCode, string strCityDistrictName, string strStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolshowall) {
            return base.Channel.GetLOVCityDistrict(strLVTokenID, strCityDistrictCode, strCityDistrictName, strStateCode, strCityDistrictFlag, strEQZone, strRSMDZone, strSTFIZone, boolshowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVCityDistrictAsync(string strLVTokenID, string strCityDistrictCode, string strCityDistrictName, string strStateCode, string strCityDistrictFlag, string strEQZone, string strRSMDZone, string strSTFIZone, bool boolshowall) {
            return base.Channel.GetLOVCityDistrictAsync(strLVTokenID, strCityDistrictCode, strCityDistrictName, strStateCode, strCityDistrictFlag, strEQZone, strRSMDZone, strSTFIZone, boolshowall);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVAreaVillage(string strLVTokenID, string strAreaVillageCode, string strAreaVillageName, string strStateCode, string strCityDistrictCode, string strRuralUrbanFlag, bool boolshowall) {
            return base.Channel.GetLOVAreaVillage(strLVTokenID, strAreaVillageCode, strAreaVillageName, strStateCode, strCityDistrictCode, strRuralUrbanFlag, boolshowall);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVAreaVillageAsync(string strLVTokenID, string strAreaVillageCode, string strAreaVillageName, string strStateCode, string strCityDistrictCode, string strRuralUrbanFlag, bool boolshowall) {
            return base.Channel.GetLOVAreaVillageAsync(strLVTokenID, strAreaVillageCode, strAreaVillageName, strStateCode, strCityDistrictCode, strRuralUrbanFlag, boolshowall);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVPin(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVStateCode, string strLVCityDistrictCode, string strLVCityCode, string strLVCityName, string strLVDistrictName) {
            return base.Channel.GetLOVPin(strLVTokenID, strLVPinCode, strLVPinCodeLocality, strLVStateCode, strLVCityDistrictCode, strLVCityCode, strLVCityName, strLVDistrictName);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVPinAsync(string strLVTokenID, string strLVPinCode, string strLVPinCodeLocality, string strLVStateCode, string strLVCityDistrictCode, string strLVCityCode, string strLVCityName, string strLVDistrictName) {
            return base.Channel.GetLOVPinAsync(strLVTokenID, strLVPinCode, strLVPinCodeLocality, strLVStateCode, strLVCityDistrictCode, strLVCityCode, strLVCityName, strLVDistrictName);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetLOVBank(string strLVTokenID, string strBankCode, string strBankName, string strBankBranchCode, string strBankBranchName, string strIFSCCode, string strMICRCode) {
            return base.Channel.GetLOVBank(strLVTokenID, strBankCode, strBankName, strBankBranchCode, strBankBranchName, strIFSCCode, strMICRCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetLOVBankAsync(string strLVTokenID, string strBankCode, string strBankName, string strBankBranchCode, string strBankBranchName, string strIFSCCode, string strMICRCode) {
            return base.Channel.GetLOVBankAsync(strLVTokenID, strBankCode, strBankName, strBankBranchCode, strBankBranchName, strIFSCCode, strMICRCode);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult AddState(string strLVTokenID, PrjPASS.GCGenericService.State objLVState) {
            return base.Channel.AddState(strLVTokenID, objLVState);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> AddStateAsync(string strLVTokenID, PrjPASS.GCGenericService.State objLVState) {
            return base.Channel.AddStateAsync(strLVTokenID, objLVState);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult EditState(string strLVTokenID, PrjPASS.GCGenericService.State objLVState) {
            return base.Channel.EditState(strLVTokenID, objLVState);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> EditStateAsync(string strLVTokenID, PrjPASS.GCGenericService.State objLVState) {
            return base.Channel.EditStateAsync(strLVTokenID, objLVState);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetState(string strLVTokenID, string strStateCode, string strStartDate, string strStartTime) {
            return base.Channel.GetState(strLVTokenID, strStateCode, strStartDate, strStartTime);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetStateAsync(string strLVTokenID, string strStateCode, string strStartDate, string strStartTime) {
            return base.Channel.GetStateAsync(strLVTokenID, strStateCode, strStartDate, strStartTime);
        }
        
        public PrjPASS.GCGenericService.GenericMasterResult GetRegion(string strLVTokenID, string strStateCode) {
            return base.Channel.GetRegion(strLVTokenID, strStateCode);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.GCGenericService.GenericMasterResult> GetRegionAsync(string strLVTokenID, string strStateCode) {
            return base.Channel.GetRegionAsync(strLVTokenID, strStateCode);
        }
    }
}
