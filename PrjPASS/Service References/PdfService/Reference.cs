//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrjPASS.PdfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PdfService.IKGIService")]
    public interface IKGIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPortal", ReplyAction="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPortalResponse")]
        PrjPASS.PdfService.KGIGetPolicyDocumentForPortalResponse KGIGetPolicyDocumentForPortal(PrjPASS.PdfService.KGIGetPolicyDocumentForPortalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPortal", ReplyAction="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPortalResponse")]
        System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetPolicyDocumentForPortalResponse> KGIGetPolicyDocumentForPortalAsync(PrjPASS.PdfService.KGIGetPolicyDocumentForPortalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPASS", ReplyAction="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPASSResponse")]
        PrjPASS.PdfService.KGIGetPolicyDocumentForPASSResponse KGIGetPolicyDocumentForPASS(PrjPASS.PdfService.KGIGetPolicyDocumentForPASSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPASS", ReplyAction="http://tempuri.org/IKGIService/KGIGetPolicyDocumentForPASSResponse")]
        System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetPolicyDocumentForPASSResponse> KGIGetPolicyDocumentForPASSAsync(PrjPASS.PdfService.KGIGetPolicyDocumentForPASSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetProposalStatus", ReplyAction="http://tempuri.org/IKGIService/KGIGetProposalStatusResponse")]
        PrjPASS.PdfService.KGIGetProposalStatusResponse KGIGetProposalStatus(PrjPASS.PdfService.KGIGetProposalStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetProposalStatus", ReplyAction="http://tempuri.org/IKGIService/KGIGetProposalStatusResponse")]
        System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetProposalStatusResponse> KGIGetProposalStatusAsync(PrjPASS.PdfService.KGIGetProposalStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetProposalStatusByPartnerApplicationNumber", ReplyAction="http://tempuri.org/IKGIService/KGIGetProposalStatusByPartnerApplicationNumberResp" +
            "onse")]
        PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberResponse KGIGetProposalStatusByPartnerApplicationNumber(PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/KGIGetProposalStatusByPartnerApplicationNumber", ReplyAction="http://tempuri.org/IKGIService/KGIGetProposalStatusByPartnerApplicationNumberResp" +
            "onse")]
        System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberResponse> KGIGetProposalStatusByPartnerApplicationNumberAsync(PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/AuthenticateUser", ReplyAction="http://tempuri.org/IKGIService/AuthenticateUserResponse")]
        string AuthenticateUser(string UserId, string Password, bool IsInternal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/AuthenticateUser", ReplyAction="http://tempuri.org/IKGIService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserAsync(string UserId, string Password, bool IsInternal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/ConvertLongURLToShortURL", ReplyAction="http://tempuri.org/IKGIService/ConvertLongURLToShortURLResponse")]
        PrjPASS.PdfService.ConvertLongURLToShortURLResponse ConvertLongURLToShortURL(PrjPASS.PdfService.ConvertLongURLToShortURLRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKGIService/ConvertLongURLToShortURL", ReplyAction="http://tempuri.org/IKGIService/ConvertLongURLToShortURLResponse")]
        System.Threading.Tasks.Task<PrjPASS.PdfService.ConvertLongURLToShortURLResponse> ConvertLongURLToShortURLAsync(PrjPASS.PdfService.ConvertLongURLToShortURLRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetPolicyDocumentForPortal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetPolicyDocumentForPortalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AccessKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PolicyNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ProductCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ErrorMsg;
        
        public KGIGetPolicyDocumentForPortalRequest() {
        }
        
        public KGIGetPolicyDocumentForPortalRequest(string AccessKey, string PolicyNumber, string ProductCode, string ErrorMsg) {
            this.AccessKey = AccessKey;
            this.PolicyNumber = PolicyNumber;
            this.ProductCode = ProductCode;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetPolicyDocumentForPortalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetPolicyDocumentForPortalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] KGIGetPolicyDocumentForPortalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorMsg;
        
        public KGIGetPolicyDocumentForPortalResponse() {
        }
        
        public KGIGetPolicyDocumentForPortalResponse(byte[] KGIGetPolicyDocumentForPortalResult, string ErrorMsg) {
            this.KGIGetPolicyDocumentForPortalResult = KGIGetPolicyDocumentForPortalResult;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetPolicyDocumentForPASS", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetPolicyDocumentForPASSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AccessKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PolicyNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ProductCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string InputProposalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ErrorMsg;
        
        public KGIGetPolicyDocumentForPASSRequest() {
        }
        
        public KGIGetPolicyDocumentForPASSRequest(string AccessKey, string PolicyNumber, string ProductCode, string InputProposalNumber, string ErrorMsg) {
            this.AccessKey = AccessKey;
            this.PolicyNumber = PolicyNumber;
            this.ProductCode = ProductCode;
            this.InputProposalNumber = InputProposalNumber;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetPolicyDocumentForPASSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetPolicyDocumentForPASSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] KGIGetPolicyDocumentForPASSResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorMsg;
        
        public KGIGetPolicyDocumentForPASSResponse() {
        }
        
        public KGIGetPolicyDocumentForPASSResponse(byte[] KGIGetPolicyDocumentForPASSResult, string ErrorMsg) {
            this.KGIGetPolicyDocumentForPASSResult = KGIGetPolicyDocumentForPASSResult;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetProposalStatus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetProposalStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AccessKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ProposalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string PolicyNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ProposalStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ErrorMsg;
        
        public KGIGetProposalStatusRequest() {
        }
        
        public KGIGetProposalStatusRequest(string AccessKey, string ProposalNumber, string PolicyNumber, string ProposalStatus, string ErrorMsg) {
            this.AccessKey = AccessKey;
            this.ProposalNumber = ProposalNumber;
            this.PolicyNumber = PolicyNumber;
            this.ProposalStatus = ProposalStatus;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetProposalStatusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetProposalStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PolicyNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ProposalStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ErrorMsg;
        
        public KGIGetProposalStatusResponse() {
        }
        
        public KGIGetProposalStatusResponse(string PolicyNumber, string ProposalStatus, string ErrorMsg) {
            this.PolicyNumber = PolicyNumber;
            this.ProposalStatus = ProposalStatus;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetProposalStatusByPartnerApplicationNumber", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetProposalStatusByPartnerApplicationNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AccessKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PartnerApplicationNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string PolicyNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ProposalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ProposalStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string ErrorMsg;
        
        public KGIGetProposalStatusByPartnerApplicationNumberRequest() {
        }
        
        public KGIGetProposalStatusByPartnerApplicationNumberRequest(string AccessKey, string PartnerApplicationNumber, string PolicyNumber, string ProposalNumber, string ProposalStatus, string ErrorMsg) {
            this.AccessKey = AccessKey;
            this.PartnerApplicationNumber = PartnerApplicationNumber;
            this.PolicyNumber = PolicyNumber;
            this.ProposalNumber = ProposalNumber;
            this.ProposalStatus = ProposalStatus;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KGIGetProposalStatusByPartnerApplicationNumberResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class KGIGetProposalStatusByPartnerApplicationNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PolicyNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ProposalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ProposalStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ErrorMsg;
        
        public KGIGetProposalStatusByPartnerApplicationNumberResponse() {
        }
        
        public KGIGetProposalStatusByPartnerApplicationNumberResponse(string PolicyNumber, string ProposalNumber, string ProposalStatus, string ErrorMsg) {
            this.PolicyNumber = PolicyNumber;
            this.ProposalNumber = ProposalNumber;
            this.ProposalStatus = ProposalStatus;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertLongURLToShortURL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConvertLongURLToShortURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string AccessKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string LongURL;
        
        public ConvertLongURLToShortURLRequest() {
        }
        
        public ConvertLongURLToShortURLRequest(string UserId, string AccessKey, string LongURL) {
            this.UserId = UserId;
            this.AccessKey = AccessKey;
            this.LongURL = LongURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertLongURLToShortURLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConvertLongURLToShortURLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ConvertLongURLToShortURLResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ShortURL;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ErrorMessage;
        
        public ConvertLongURLToShortURLResponse() {
        }
        
        public ConvertLongURLToShortURLResponse(bool ConvertLongURLToShortURLResult, string ShortURL, string ErrorMessage) {
            this.ConvertLongURLToShortURLResult = ConvertLongURLToShortURLResult;
            this.ShortURL = ShortURL;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKGIServiceChannel : PrjPASS.PdfService.IKGIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KGIServiceClient : System.ServiceModel.ClientBase<PrjPASS.PdfService.IKGIService>, PrjPASS.PdfService.IKGIService {
        
        public KGIServiceClient() {
        }
        
        public KGIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KGIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KGIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KGIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrjPASS.PdfService.KGIGetPolicyDocumentForPortalResponse PrjPASS.PdfService.IKGIService.KGIGetPolicyDocumentForPortal(PrjPASS.PdfService.KGIGetPolicyDocumentForPortalRequest request) {
            return base.Channel.KGIGetPolicyDocumentForPortal(request);
        }
        
        public byte[] KGIGetPolicyDocumentForPortal(string AccessKey, string PolicyNumber, string ProductCode, ref string ErrorMsg) {
            PrjPASS.PdfService.KGIGetPolicyDocumentForPortalRequest inValue = new PrjPASS.PdfService.KGIGetPolicyDocumentForPortalRequest();
            inValue.AccessKey = AccessKey;
            inValue.PolicyNumber = PolicyNumber;
            inValue.ProductCode = ProductCode;
            inValue.ErrorMsg = ErrorMsg;
            PrjPASS.PdfService.KGIGetPolicyDocumentForPortalResponse retVal = ((PrjPASS.PdfService.IKGIService)(this)).KGIGetPolicyDocumentForPortal(inValue);
            ErrorMsg = retVal.ErrorMsg;
            return retVal.KGIGetPolicyDocumentForPortalResult;
        }
        
        public System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetPolicyDocumentForPortalResponse> KGIGetPolicyDocumentForPortalAsync(PrjPASS.PdfService.KGIGetPolicyDocumentForPortalRequest request) {
            return base.Channel.KGIGetPolicyDocumentForPortalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrjPASS.PdfService.KGIGetPolicyDocumentForPASSResponse PrjPASS.PdfService.IKGIService.KGIGetPolicyDocumentForPASS(PrjPASS.PdfService.KGIGetPolicyDocumentForPASSRequest request) {
            return base.Channel.KGIGetPolicyDocumentForPASS(request);
        }
        
        public byte[] KGIGetPolicyDocumentForPASS(string AccessKey, string PolicyNumber, string ProductCode, string InputProposalNumber, ref string ErrorMsg) {
            PrjPASS.PdfService.KGIGetPolicyDocumentForPASSRequest inValue = new PrjPASS.PdfService.KGIGetPolicyDocumentForPASSRequest();
            inValue.AccessKey = AccessKey;
            inValue.PolicyNumber = PolicyNumber;
            inValue.ProductCode = ProductCode;
            inValue.InputProposalNumber = InputProposalNumber;
            inValue.ErrorMsg = ErrorMsg;
            PrjPASS.PdfService.KGIGetPolicyDocumentForPASSResponse retVal = ((PrjPASS.PdfService.IKGIService)(this)).KGIGetPolicyDocumentForPASS(inValue);
            ErrorMsg = retVal.ErrorMsg;
            return retVal.KGIGetPolicyDocumentForPASSResult;
        }
        
        public System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetPolicyDocumentForPASSResponse> KGIGetPolicyDocumentForPASSAsync(PrjPASS.PdfService.KGIGetPolicyDocumentForPASSRequest request) {
            return base.Channel.KGIGetPolicyDocumentForPASSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrjPASS.PdfService.KGIGetProposalStatusResponse PrjPASS.PdfService.IKGIService.KGIGetProposalStatus(PrjPASS.PdfService.KGIGetProposalStatusRequest request) {
            return base.Channel.KGIGetProposalStatus(request);
        }
        
        public void KGIGetProposalStatus(string AccessKey, string ProposalNumber, ref string PolicyNumber, ref string ProposalStatus, ref string ErrorMsg) {
            PrjPASS.PdfService.KGIGetProposalStatusRequest inValue = new PrjPASS.PdfService.KGIGetProposalStatusRequest();
            inValue.AccessKey = AccessKey;
            inValue.ProposalNumber = ProposalNumber;
            inValue.PolicyNumber = PolicyNumber;
            inValue.ProposalStatus = ProposalStatus;
            inValue.ErrorMsg = ErrorMsg;
            PrjPASS.PdfService.KGIGetProposalStatusResponse retVal = ((PrjPASS.PdfService.IKGIService)(this)).KGIGetProposalStatus(inValue);
            PolicyNumber = retVal.PolicyNumber;
            ProposalStatus = retVal.ProposalStatus;
            ErrorMsg = retVal.ErrorMsg;
        }
        
        public System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetProposalStatusResponse> KGIGetProposalStatusAsync(PrjPASS.PdfService.KGIGetProposalStatusRequest request) {
            return base.Channel.KGIGetProposalStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberResponse PrjPASS.PdfService.IKGIService.KGIGetProposalStatusByPartnerApplicationNumber(PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberRequest request) {
            return base.Channel.KGIGetProposalStatusByPartnerApplicationNumber(request);
        }
        
        public void KGIGetProposalStatusByPartnerApplicationNumber(string AccessKey, string PartnerApplicationNumber, ref string PolicyNumber, ref string ProposalNumber, ref string ProposalStatus, ref string ErrorMsg) {
            PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberRequest inValue = new PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberRequest();
            inValue.AccessKey = AccessKey;
            inValue.PartnerApplicationNumber = PartnerApplicationNumber;
            inValue.PolicyNumber = PolicyNumber;
            inValue.ProposalNumber = ProposalNumber;
            inValue.ProposalStatus = ProposalStatus;
            inValue.ErrorMsg = ErrorMsg;
            PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberResponse retVal = ((PrjPASS.PdfService.IKGIService)(this)).KGIGetProposalStatusByPartnerApplicationNumber(inValue);
            PolicyNumber = retVal.PolicyNumber;
            ProposalNumber = retVal.ProposalNumber;
            ProposalStatus = retVal.ProposalStatus;
            ErrorMsg = retVal.ErrorMsg;
        }
        
        public System.Threading.Tasks.Task<PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberResponse> KGIGetProposalStatusByPartnerApplicationNumberAsync(PrjPASS.PdfService.KGIGetProposalStatusByPartnerApplicationNumberRequest request) {
            return base.Channel.KGIGetProposalStatusByPartnerApplicationNumberAsync(request);
        }
        
        public string AuthenticateUser(string UserId, string Password, bool IsInternal) {
            return base.Channel.AuthenticateUser(UserId, Password, IsInternal);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserAsync(string UserId, string Password, bool IsInternal) {
            return base.Channel.AuthenticateUserAsync(UserId, Password, IsInternal);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrjPASS.PdfService.ConvertLongURLToShortURLResponse PrjPASS.PdfService.IKGIService.ConvertLongURLToShortURL(PrjPASS.PdfService.ConvertLongURLToShortURLRequest request) {
            return base.Channel.ConvertLongURLToShortURL(request);
        }
        
        public bool ConvertLongURLToShortURL(string UserId, string AccessKey, string LongURL, out string ShortURL, out string ErrorMessage) {
            PrjPASS.PdfService.ConvertLongURLToShortURLRequest inValue = new PrjPASS.PdfService.ConvertLongURLToShortURLRequest();
            inValue.UserId = UserId;
            inValue.AccessKey = AccessKey;
            inValue.LongURL = LongURL;
            PrjPASS.PdfService.ConvertLongURLToShortURLResponse retVal = ((PrjPASS.PdfService.IKGIService)(this)).ConvertLongURLToShortURL(inValue);
            ShortURL = retVal.ShortURL;
            ErrorMessage = retVal.ErrorMessage;
            return retVal.ConvertLongURLToShortURLResult;
        }
        
        public System.Threading.Tasks.Task<PrjPASS.PdfService.ConvertLongURLToShortURLResponse> ConvertLongURLToShortURLAsync(PrjPASS.PdfService.ConvertLongURLToShortURLRequest request) {
            return base.Channel.ConvertLongURLToShortURLAsync(request);
        }
    }
}
