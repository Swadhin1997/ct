//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrjPASS.ServiceReference3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImagePath", Namespace="http://schemas.datacontract.org/2004/07/CMCDocsService")]
    [System.SerializableAttribute()]
    public partial class ImagePath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImgPath {
            get {
                return this.ImgPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgPathField, value) != true)) {
                    this.ImgPathField = value;
                    this.RaisePropertyChanged("ImgPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImagePathDMS", Namespace="http://schemas.datacontract.org/2004/07/CMCDocsService")]
    [System.SerializableAttribute()]
    public partial class ImagePathDMS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.MemoryStream ResponseMemoryStreamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.MemoryStream ResponseMemoryStream {
            get {
                return this.ResponseMemoryStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseMemoryStreamField, value) != true)) {
                    this.ResponseMemoryStreamField = value;
                    this.RaisePropertyChanged("ResponseMemoryStream");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchDocument", ReplyAction="http://tempuri.org/IService1/SearchDocumentResponse")]
        PrjPASS.ServiceReference3.ImagePath[] SearchDocument(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchDocument", ReplyAction="http://tempuri.org/IService1/SearchDocumentResponse")]
        System.Threading.Tasks.Task<PrjPASS.ServiceReference3.ImagePath[]> SearchDocumentAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateDocument", ReplyAction="http://tempuri.org/IService1/CreateDocumentResponse")]
        string CreateDocument(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string DocumentPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateDocument", ReplyAction="http://tempuri.org/IService1/CreateDocumentResponse")]
        System.Threading.Tasks.Task<string> CreateDocumentAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string DocumentPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Validate", ReplyAction="http://tempuri.org/IService1/ValidateResponse")]
        string Validate(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Validate", ReplyAction="http://tempuri.org/IService1/ValidateResponse")]
        System.Threading.Tasks.Task<string> ValidateAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchDocumentDMS", ReplyAction="http://tempuri.org/IService1/SearchDocumentDMSResponse")]
        PrjPASS.ServiceReference3.ImagePath[] SearchDocumentDMS(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchDocumentDMS", ReplyAction="http://tempuri.org/IService1/SearchDocumentDMSResponse")]
        System.Threading.Tasks.Task<PrjPASS.ServiceReference3.ImagePath[]> SearchDocumentDMSAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateDocumentDMS", ReplyAction="http://tempuri.org/IService1/CreateDocumentDMSResponse")]
        string CreateDocumentDMS(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string Source, string FileName, byte[] requestedByte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateDocumentDMS", ReplyAction="http://tempuri.org/IService1/CreateDocumentDMSResponse")]
        System.Threading.Tasks.Task<string> CreateDocumentDMSAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string Source, string FileName, byte[] requestedByte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ViewDocumentDMS", ReplyAction="http://tempuri.org/IService1/ViewDocumentDMSResponse")]
        PrjPASS.ServiceReference3.ImagePathDMS[] ViewDocumentDMS(string usename, string password, string Filename, string FilePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ViewDocumentDMS", ReplyAction="http://tempuri.org/IService1/ViewDocumentDMSResponse")]
        System.Threading.Tasks.Task<PrjPASS.ServiceReference3.ImagePathDMS[]> ViewDocumentDMSAsync(string usename, string password, string Filename, string FilePath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PrjPASS.ServiceReference3.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PrjPASS.ServiceReference3.IService1>, PrjPASS.ServiceReference3.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PrjPASS.ServiceReference3.ImagePath[] SearchDocument(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo) {
            return base.Channel.SearchDocument(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.ServiceReference3.ImagePath[]> SearchDocumentAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo) {
            return base.Channel.SearchDocumentAsync(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo);
        }
        
        public string CreateDocument(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string DocumentPath) {
            return base.Channel.CreateDocument(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo, DocumentPath);
        }
        
        public System.Threading.Tasks.Task<string> CreateDocumentAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string DocumentPath) {
            return base.Channel.CreateDocumentAsync(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo, DocumentPath);
        }
        
        public string Validate(string userName, string password) {
            return base.Channel.Validate(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAsync(string userName, string password) {
            return base.Channel.ValidateAsync(userName, password);
        }
        
        public PrjPASS.ServiceReference3.ImagePath[] SearchDocumentDMS(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo) {
            return base.Channel.SearchDocumentDMS(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.ServiceReference3.ImagePath[]> SearchDocumentDMSAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo) {
            return base.Channel.SearchDocumentDMSAsync(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo);
        }
        
        public string CreateDocumentDMS(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string Source, string FileName, byte[] requestedByte) {
            return base.Channel.CreateDocumentDMS(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo, Source, FileName, requestedByte);
        }
        
        public System.Threading.Tasks.Task<string> CreateDocumentDMSAsync(string username, string password, string InwardId, string ApplicationNo, string CustomerId, string DocumentUniqNo, string PolicyNo, string ClaimNo, string Source, string FileName, byte[] requestedByte) {
            return base.Channel.CreateDocumentDMSAsync(username, password, InwardId, ApplicationNo, CustomerId, DocumentUniqNo, PolicyNo, ClaimNo, Source, FileName, requestedByte);
        }
        
        public PrjPASS.ServiceReference3.ImagePathDMS[] ViewDocumentDMS(string usename, string password, string Filename, string FilePath) {
            return base.Channel.ViewDocumentDMS(usename, password, Filename, FilePath);
        }
        
        public System.Threading.Tasks.Task<PrjPASS.ServiceReference3.ImagePathDMS[]> ViewDocumentDMSAsync(string usename, string password, string Filename, string FilePath) {
            return base.Channel.ViewDocumentDMSAsync(usename, password, Filename, FilePath);
        }
    }
}
