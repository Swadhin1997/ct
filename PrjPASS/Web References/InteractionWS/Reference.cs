//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PrjPASS.InteractionWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Interaction Web ServiceSoap", Namespace="http://www.talisma.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class InteractionWebService : Microsoft.Web.Services3.WebServicesClientProtocol
    {
        
        private System.Threading.SendOrPostCallback CreateInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInteractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMsgToInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentsToInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentsToInteractionWithAttchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInteractionEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllInteractionEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInteractionEvents2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMessageContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetInteractionPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetInteractionStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssignToUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferToListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInteractionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInteractionReadUnReadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInteractionTrackingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildForwardOrConsultOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildSmsReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePropertyTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRLTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRLTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedTabOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InteractionWebService() {
            this.Url = global::PrjPASS.Properties.Settings.Default.PrjPASS_InteractionWS_Interaction_x0020_Web_x0020_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateInteractionCompletedEventHandler CreateInteractionCompleted;
        
        /// <remarks/>
        public event DeleteInteractionCompletedEventHandler DeleteInteractionCompleted;
        
        /// <remarks/>
        public event DeleteInteractionsCompletedEventHandler DeleteInteractionsCompleted;
        
        /// <remarks/>
        public event AddMsgToInteractionCompletedEventHandler AddMsgToInteractionCompleted;
        
        /// <remarks/>
        public event AddAttachmentsCompletedEventHandler AddAttachmentsCompleted;
        
        /// <remarks/>
        public event AddCommentsToInteractionCompletedEventHandler AddCommentsToInteractionCompleted;
        
        /// <remarks/>
        public event AddCommentsToInteractionWithAttchCompletedEventHandler AddCommentsToInteractionWithAttchCompleted;
        
        /// <remarks/>
        public event GetInteractionEventsCompletedEventHandler GetInteractionEventsCompleted;
        
        /// <remarks/>
        public event GetAllInteractionEventsCompletedEventHandler GetAllInteractionEventsCompleted;
        
        /// <remarks/>
        public event GetInteractionEvents2CompletedEventHandler GetInteractionEvents2Completed;
        
        /// <remarks/>
        public event GetMessageContentCompletedEventHandler GetMessageContentCompleted;
        
        /// <remarks/>
        public event GetAllMessageContentsCompletedEventHandler GetAllMessageContentsCompleted;
        
        /// <remarks/>
        public event SetInteractionPriorityCompletedEventHandler SetInteractionPriorityCompleted;
        
        /// <remarks/>
        public event SetInteractionStateCompletedEventHandler SetInteractionStateCompleted;
        
        /// <remarks/>
        public event AssignCompletedEventHandler AssignCompleted;
        
        /// <remarks/>
        public event TransferCompletedEventHandler TransferCompleted;
        
        /// <remarks/>
        public event GetAttachmentFileCompletedEventHandler GetAttachmentFileCompleted;
        
        /// <remarks/>
        public event GetAssignToUserListCompletedEventHandler GetAssignToUserListCompleted;
        
        /// <remarks/>
        public event GetTransferToListCompletedEventHandler GetTransferToListCompleted;
        
        /// <remarks/>
        public event GetInteractionInfoCompletedEventHandler GetInteractionInfoCompleted;
        
        /// <remarks/>
        public event BeginReplyCompletedEventHandler BeginReplyCompleted;
        
        /// <remarks/>
        public event SaveReplyCompletedEventHandler SaveReplyCompleted;
        
        /// <remarks/>
        public event UpdateInteractionReadUnReadStatusCompletedEventHandler UpdateInteractionReadUnReadStatusCompleted;
        
        /// <remarks/>
        public event SaveInteractionTrackingInfoCompletedEventHandler SaveInteractionTrackingInfoCompleted;
        
        /// <remarks/>
        public event CancelReplyCompletedEventHandler CancelReplyCompleted;
        
        /// <remarks/>
        public event UnlockInteractionCompletedEventHandler UnlockInteractionCompleted;
        
        /// <remarks/>
        public event BuildForwardOrConsultCompletedEventHandler BuildForwardOrConsultCompleted;
        
        /// <remarks/>
        public event BuildSmsReplyCompletedEventHandler BuildSmsReplyCompleted;
        
        /// <remarks/>
        public event BuildReplyCompletedEventHandler BuildReplyCompleted;
        
        /// <remarks/>
        public event DeleteReplyCompletedEventHandler DeleteReplyCompleted;
        
        /// <remarks/>
        public event GetPropertiesTabCompletedEventHandler GetPropertiesTabCompleted;
        
        /// <remarks/>
        public event UpdatePropertyTabCompletedEventHandler UpdatePropertyTabCompleted;
        
        /// <remarks/>
        public event GetRLTabCompletedEventHandler GetRLTabCompleted;
        
        /// <remarks/>
        public event UpdateRLTabCompletedEventHandler UpdateRLTabCompleted;
        
        /// <remarks/>
        public event GetLinkedTabCompletedEventHandler GetLinkedTabCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/CreateInteraction", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateInteraction(
                    long contactId, 
                    string phone, 
                    System.DateTime receivedAt, 
                    int receivedByUserId, 
                    int mediaId, 
                    int direction, 
                    string subject, 
                    int teamId, 
                    int assigntouserId, 
                    int aliasId, 
                    int priority, 
                    int resolved, 
                    string contactMsg, 
                    string userMsg, 
                    InteractionAttachmentData[] IntrnAttachData, 
                    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, 
                    bool updateReadOnly, 
                    bool ignoreMandatoryCheck, 
                    out long interactionId, 
                    out long evtId, 
                    out string error, 
                    out bool contactPreviouslyUnblocked) {
            object[] results = this.Invoke("CreateInteraction", new object[] {
                        contactId,
                        phone,
                        receivedAt,
                        receivedByUserId,
                        mediaId,
                        direction,
                        subject,
                        teamId,
                        assigntouserId,
                        aliasId,
                        priority,
                        resolved,
                        contactMsg,
                        userMsg,
                        IntrnAttachData,
                        propData,
                        updateReadOnly,
                        ignoreMandatoryCheck});
            interactionId = ((long)(results[1]));
            evtId = ((long)(results[2]));
            error = ((string)(results[3]));
            contactPreviouslyUnblocked = ((bool)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInteractionAsync(
                    long contactId, 
                    string phone, 
                    System.DateTime receivedAt, 
                    int receivedByUserId, 
                    int mediaId, 
                    int direction, 
                    string subject, 
                    int teamId, 
                    int assigntouserId, 
                    int aliasId, 
                    int priority, 
                    int resolved, 
                    string contactMsg, 
                    string userMsg, 
                    InteractionAttachmentData[] IntrnAttachData, 
                    PropertyInfo[] propData, 
                    bool updateReadOnly, 
                    bool ignoreMandatoryCheck) {
            this.CreateInteractionAsync(contactId, phone, receivedAt, receivedByUserId, mediaId, direction, subject, teamId, assigntouserId, aliasId, priority, resolved, contactMsg, userMsg, IntrnAttachData, propData, updateReadOnly, ignoreMandatoryCheck, null);
        }
        
        /// <remarks/>
        public void CreateInteractionAsync(
                    long contactId, 
                    string phone, 
                    System.DateTime receivedAt, 
                    int receivedByUserId, 
                    int mediaId, 
                    int direction, 
                    string subject, 
                    int teamId, 
                    int assigntouserId, 
                    int aliasId, 
                    int priority, 
                    int resolved, 
                    string contactMsg, 
                    string userMsg, 
                    InteractionAttachmentData[] IntrnAttachData, 
                    PropertyInfo[] propData, 
                    bool updateReadOnly, 
                    bool ignoreMandatoryCheck, 
                    object userState) {
            if ((this.CreateInteractionOperationCompleted == null)) {
                this.CreateInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInteractionOperationCompleted);
            }
            this.InvokeAsync("CreateInteraction", new object[] {
                        contactId,
                        phone,
                        receivedAt,
                        receivedByUserId,
                        mediaId,
                        direction,
                        subject,
                        teamId,
                        assigntouserId,
                        aliasId,
                        priority,
                        resolved,
                        contactMsg,
                        userMsg,
                        IntrnAttachData,
                        propData,
                        updateReadOnly,
                        ignoreMandatoryCheck}, this.CreateInteractionOperationCompleted, userState);
        }
        
        private void OnCreateInteractionOperationCompleted(object arg) {
            if ((this.CreateInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInteractionCompleted(this, new CreateInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/DeleteInteraction", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DeleteInteraction(long interactionId, bool deleteRelatedObjects, out string error) {
            object[] results = this.Invoke("DeleteInteraction", new object[] {
                        interactionId,
                        deleteRelatedObjects});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInteractionAsync(long interactionId, bool deleteRelatedObjects) {
            this.DeleteInteractionAsync(interactionId, deleteRelatedObjects, null);
        }
        
        /// <remarks/>
        public void DeleteInteractionAsync(long interactionId, bool deleteRelatedObjects, object userState) {
            if ((this.DeleteInteractionOperationCompleted == null)) {
                this.DeleteInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInteractionOperationCompleted);
            }
            this.InvokeAsync("DeleteInteraction", new object[] {
                        interactionId,
                        deleteRelatedObjects}, this.DeleteInteractionOperationCompleted, userState);
        }
        
        private void OnDeleteInteractionOperationCompleted(object arg) {
            if ((this.DeleteInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInteractionCompleted(this, new DeleteInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/DeleteInteractions", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DeleteInteractions(string interactionIds, bool deleteRelatedObjects, out string error) {
            object[] results = this.Invoke("DeleteInteractions", new object[] {
                        interactionIds,
                        deleteRelatedObjects});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInteractionsAsync(string interactionIds, bool deleteRelatedObjects) {
            this.DeleteInteractionsAsync(interactionIds, deleteRelatedObjects, null);
        }
        
        /// <remarks/>
        public void DeleteInteractionsAsync(string interactionIds, bool deleteRelatedObjects, object userState) {
            if ((this.DeleteInteractionsOperationCompleted == null)) {
                this.DeleteInteractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInteractionsOperationCompleted);
            }
            this.InvokeAsync("DeleteInteractions", new object[] {
                        interactionIds,
                        deleteRelatedObjects}, this.DeleteInteractionsOperationCompleted, userState);
        }
        
        private void OnDeleteInteractionsOperationCompleted(object arg) {
            if ((this.DeleteInteractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInteractionsCompleted(this, new DeleteInteractionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/AddMsgToInteraction", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddMsgToInteraction(
                    long interactionId, 
                    long contactId, 
                    string phone, 
                    System.DateTime receivedAt, 
                    int receivedByUserId, 
                    int mediaId, 
                    int direction, 
                    string subject, 
                    int assigntouserId, 
                    int aliasId, 
                    int priority, 
                    int resolved, 
                    string contactMsg, 
                    string userMsg, 
                    InteractionAttachmentData[] IntrnAttachData, 
                    ref bool contactPreviouslyUnblocked, 
                    out long evtId, 
                    out string error) {
            object[] results = this.Invoke("AddMsgToInteraction", new object[] {
                        interactionId,
                        contactId,
                        phone,
                        receivedAt,
                        receivedByUserId,
                        mediaId,
                        direction,
                        subject,
                        assigntouserId,
                        aliasId,
                        priority,
                        resolved,
                        contactMsg,
                        userMsg,
                        IntrnAttachData,
                        contactPreviouslyUnblocked});
            contactPreviouslyUnblocked = ((bool)(results[1]));
            evtId = ((long)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddMsgToInteractionAsync(
                    long interactionId, 
                    long contactId, 
                    string phone, 
                    System.DateTime receivedAt, 
                    int receivedByUserId, 
                    int mediaId, 
                    int direction, 
                    string subject, 
                    int assigntouserId, 
                    int aliasId, 
                    int priority, 
                    int resolved, 
                    string contactMsg, 
                    string userMsg, 
                    InteractionAttachmentData[] IntrnAttachData, 
                    bool contactPreviouslyUnblocked) {
            this.AddMsgToInteractionAsync(interactionId, contactId, phone, receivedAt, receivedByUserId, mediaId, direction, subject, assigntouserId, aliasId, priority, resolved, contactMsg, userMsg, IntrnAttachData, contactPreviouslyUnblocked, null);
        }
        
        /// <remarks/>
        public void AddMsgToInteractionAsync(
                    long interactionId, 
                    long contactId, 
                    string phone, 
                    System.DateTime receivedAt, 
                    int receivedByUserId, 
                    int mediaId, 
                    int direction, 
                    string subject, 
                    int assigntouserId, 
                    int aliasId, 
                    int priority, 
                    int resolved, 
                    string contactMsg, 
                    string userMsg, 
                    InteractionAttachmentData[] IntrnAttachData, 
                    bool contactPreviouslyUnblocked, 
                    object userState) {
            if ((this.AddMsgToInteractionOperationCompleted == null)) {
                this.AddMsgToInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMsgToInteractionOperationCompleted);
            }
            this.InvokeAsync("AddMsgToInteraction", new object[] {
                        interactionId,
                        contactId,
                        phone,
                        receivedAt,
                        receivedByUserId,
                        mediaId,
                        direction,
                        subject,
                        assigntouserId,
                        aliasId,
                        priority,
                        resolved,
                        contactMsg,
                        userMsg,
                        IntrnAttachData,
                        contactPreviouslyUnblocked}, this.AddMsgToInteractionOperationCompleted, userState);
        }
        
        private void OnAddMsgToInteractionOperationCompleted(object arg) {
            if ((this.AddMsgToInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMsgToInteractionCompleted(this, new AddMsgToInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/AddAttachments", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddAttachments(long eventId, InteractionAttachmentData[] attachmentCollection, bool includeInTransaction, out string error) {
            object[] results = this.Invoke("AddAttachments", new object[] {
                        eventId,
                        attachmentCollection,
                        includeInTransaction});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddAttachmentsAsync(long eventId, InteractionAttachmentData[] attachmentCollection, bool includeInTransaction) {
            this.AddAttachmentsAsync(eventId, attachmentCollection, includeInTransaction, null);
        }
        
        /// <remarks/>
        public void AddAttachmentsAsync(long eventId, InteractionAttachmentData[] attachmentCollection, bool includeInTransaction, object userState) {
            if ((this.AddAttachmentsOperationCompleted == null)) {
                this.AddAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentsOperationCompleted);
            }
            this.InvokeAsync("AddAttachments", new object[] {
                        eventId,
                        attachmentCollection,
                        includeInTransaction}, this.AddAttachmentsOperationCompleted, userState);
        }
        
        private void OnAddAttachmentsOperationCompleted(object arg) {
            if ((this.AddAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachmentsCompleted(this, new AddAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/AddCommentsToInteraction", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddCommentsToInteraction(long interactionId, string comment, out long eventId, out string error) {
            object[] results = this.Invoke("AddCommentsToInteraction", new object[] {
                        interactionId,
                        comment});
            eventId = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommentsToInteractionAsync(long interactionId, string comment) {
            this.AddCommentsToInteractionAsync(interactionId, comment, null);
        }
        
        /// <remarks/>
        public void AddCommentsToInteractionAsync(long interactionId, string comment, object userState) {
            if ((this.AddCommentsToInteractionOperationCompleted == null)) {
                this.AddCommentsToInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentsToInteractionOperationCompleted);
            }
            this.InvokeAsync("AddCommentsToInteraction", new object[] {
                        interactionId,
                        comment}, this.AddCommentsToInteractionOperationCompleted, userState);
        }
        
        private void OnAddCommentsToInteractionOperationCompleted(object arg) {
            if ((this.AddCommentsToInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentsToInteractionCompleted(this, new AddCommentsToInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/AddCommentsToInteractionWithAttch", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddCommentsToInteractionWithAttch(long interactionId, string comment, out long eventId, out string error) {
            object[] results = this.Invoke("AddCommentsToInteractionWithAttch", new object[] {
                        interactionId,
                        comment});
            eventId = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommentsToInteractionWithAttchAsync(long interactionId, string comment) {
            this.AddCommentsToInteractionWithAttchAsync(interactionId, comment, null);
        }
        
        /// <remarks/>
        public void AddCommentsToInteractionWithAttchAsync(long interactionId, string comment, object userState) {
            if ((this.AddCommentsToInteractionWithAttchOperationCompleted == null)) {
                this.AddCommentsToInteractionWithAttchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentsToInteractionWithAttchOperationCompleted);
            }
            this.InvokeAsync("AddCommentsToInteractionWithAttch", new object[] {
                        interactionId,
                        comment}, this.AddCommentsToInteractionWithAttchOperationCompleted, userState);
        }
        
        private void OnAddCommentsToInteractionWithAttchOperationCompleted(object arg) {
            if ((this.AddCommentsToInteractionWithAttchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentsToInteractionWithAttchCompleted(this, new AddCommentsToInteractionWithAttchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetInteractionEvents", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetInteractionEvents(long interactionId, bool eventsOrder, int getPropInfoOrPropXml, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out ActivityInfo[] activityData, out string activityInfoXml, out int totalEventsCount, out string error) {
            object[] results = this.Invoke("GetInteractionEvents", new object[] {
                        interactionId,
                        eventsOrder,
                        getPropInfoOrPropXml});
            activityData = ((ActivityInfo[])(results[1]));
            activityInfoXml = ((string)(results[2]));
            totalEventsCount = ((int)(results[3]));
            error = ((string)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetInteractionEventsAsync(long interactionId, bool eventsOrder, int getPropInfoOrPropXml) {
            this.GetInteractionEventsAsync(interactionId, eventsOrder, getPropInfoOrPropXml, null);
        }
        
        /// <remarks/>
        public void GetInteractionEventsAsync(long interactionId, bool eventsOrder, int getPropInfoOrPropXml, object userState) {
            if ((this.GetInteractionEventsOperationCompleted == null)) {
                this.GetInteractionEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInteractionEventsOperationCompleted);
            }
            this.InvokeAsync("GetInteractionEvents", new object[] {
                        interactionId,
                        eventsOrder,
                        getPropInfoOrPropXml}, this.GetInteractionEventsOperationCompleted, userState);
        }
        
        private void OnGetInteractionEventsOperationCompleted(object arg) {
            if ((this.GetInteractionEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInteractionEventsCompleted(this, new GetInteractionEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAllInteractionEvents", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAllInteractionEvents(int interactionId, bool eventsOrder, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref ActivityInfo[] activityData, ref AttachmentInfo[] attachmentInfo, out int totalEventsCount, out string error) {
            object[] results = this.Invoke("GetAllInteractionEvents", new object[] {
                        interactionId,
                        eventsOrder,
                        activityData,
                        attachmentInfo});
            activityData = ((ActivityInfo[])(results[1]));
            attachmentInfo = ((AttachmentInfo[])(results[2]));
            totalEventsCount = ((int)(results[3]));
            error = ((string)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllInteractionEventsAsync(int interactionId, bool eventsOrder, ActivityInfo[] activityData, AttachmentInfo[] attachmentInfo) {
            this.GetAllInteractionEventsAsync(interactionId, eventsOrder, activityData, attachmentInfo, null);
        }
        
        /// <remarks/>
        public void GetAllInteractionEventsAsync(int interactionId, bool eventsOrder, ActivityInfo[] activityData, AttachmentInfo[] attachmentInfo, object userState) {
            if ((this.GetAllInteractionEventsOperationCompleted == null)) {
                this.GetAllInteractionEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllInteractionEventsOperationCompleted);
            }
            this.InvokeAsync("GetAllInteractionEvents", new object[] {
                        interactionId,
                        eventsOrder,
                        activityData,
                        attachmentInfo}, this.GetAllInteractionEventsOperationCompleted, userState);
        }
        
        private void OnGetAllInteractionEventsOperationCompleted(object arg) {
            if ((this.GetAllInteractionEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllInteractionEventsCompleted(this, new GetAllInteractionEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetInteractionEvents2", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetInteractionEvents2(long interactionId, EventRetrivingOptions eventRetrivingOptions, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref ActivityInfo[] activityData, out int totalEventsCount, out string error) {
            object[] results = this.Invoke("GetInteractionEvents2", new object[] {
                        interactionId,
                        eventRetrivingOptions,
                        activityData});
            activityData = ((ActivityInfo[])(results[1]));
            totalEventsCount = ((int)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetInteractionEvents2Async(long interactionId, EventRetrivingOptions eventRetrivingOptions, ActivityInfo[] activityData) {
            this.GetInteractionEvents2Async(interactionId, eventRetrivingOptions, activityData, null);
        }
        
        /// <remarks/>
        public void GetInteractionEvents2Async(long interactionId, EventRetrivingOptions eventRetrivingOptions, ActivityInfo[] activityData, object userState) {
            if ((this.GetInteractionEvents2OperationCompleted == null)) {
                this.GetInteractionEvents2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInteractionEvents2OperationCompleted);
            }
            this.InvokeAsync("GetInteractionEvents2", new object[] {
                        interactionId,
                        eventRetrivingOptions,
                        activityData}, this.GetInteractionEvents2OperationCompleted, userState);
        }
        
        private void OnGetInteractionEvents2OperationCompleted(object arg) {
            if ((this.GetInteractionEvents2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInteractionEvents2Completed(this, new GetInteractionEvents2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetMessageContent", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetMessageContent(long messageId, ref MessageContent messageContent, out string error) {
            object[] results = this.Invoke("GetMessageContent", new object[] {
                        messageId,
                        messageContent});
            messageContent = ((MessageContent)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageContentAsync(long messageId, MessageContent messageContent) {
            this.GetMessageContentAsync(messageId, messageContent, null);
        }
        
        /// <remarks/>
        public void GetMessageContentAsync(long messageId, MessageContent messageContent, object userState) {
            if ((this.GetMessageContentOperationCompleted == null)) {
                this.GetMessageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageContentOperationCompleted);
            }
            this.InvokeAsync("GetMessageContent", new object[] {
                        messageId,
                        messageContent}, this.GetMessageContentOperationCompleted, userState);
        }
        
        private void OnGetMessageContentOperationCompleted(object arg) {
            if ((this.GetMessageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageContentCompleted(this, new GetMessageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAllMessageContents", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAllMessageContents(int interactionId, ref MessageContent[] messageContents, out string error) {
            object[] results = this.Invoke("GetAllMessageContents", new object[] {
                        interactionId,
                        messageContents});
            messageContents = ((MessageContent[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMessageContentsAsync(int interactionId, MessageContent[] messageContents) {
            this.GetAllMessageContentsAsync(interactionId, messageContents, null);
        }
        
        /// <remarks/>
        public void GetAllMessageContentsAsync(int interactionId, MessageContent[] messageContents, object userState) {
            if ((this.GetAllMessageContentsOperationCompleted == null)) {
                this.GetAllMessageContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMessageContentsOperationCompleted);
            }
            this.InvokeAsync("GetAllMessageContents", new object[] {
                        interactionId,
                        messageContents}, this.GetAllMessageContentsOperationCompleted, userState);
        }
        
        private void OnGetAllMessageContentsOperationCompleted(object arg) {
            if ((this.GetAllMessageContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMessageContentsCompleted(this, new GetAllMessageContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/SetInteractionPriority", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SetInteractionPriority(long interactionId, int priority, out string error) {
            object[] results = this.Invoke("SetInteractionPriority", new object[] {
                        interactionId,
                        priority});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SetInteractionPriorityAsync(long interactionId, int priority) {
            this.SetInteractionPriorityAsync(interactionId, priority, null);
        }
        
        /// <remarks/>
        public void SetInteractionPriorityAsync(long interactionId, int priority, object userState) {
            if ((this.SetInteractionPriorityOperationCompleted == null)) {
                this.SetInteractionPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetInteractionPriorityOperationCompleted);
            }
            this.InvokeAsync("SetInteractionPriority", new object[] {
                        interactionId,
                        priority}, this.SetInteractionPriorityOperationCompleted, userState);
        }
        
        private void OnSetInteractionPriorityOperationCompleted(object arg) {
            if ((this.SetInteractionPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetInteractionPriorityCompleted(this, new SetInteractionPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/SetInteractionState", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SetInteractionState(long interactionId, InteractionState interactionState, string comments, bool force, ref int lockedByUserId, out string lockedByUserName, out string error) {
            object[] results = this.Invoke("SetInteractionState", new object[] {
                        interactionId,
                        interactionState,
                        comments,
                        force,
                        lockedByUserId});
            lockedByUserId = ((int)(results[1]));
            lockedByUserName = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SetInteractionStateAsync(long interactionId, InteractionState interactionState, string comments, bool force, int lockedByUserId) {
            this.SetInteractionStateAsync(interactionId, interactionState, comments, force, lockedByUserId, null);
        }
        
        /// <remarks/>
        public void SetInteractionStateAsync(long interactionId, InteractionState interactionState, string comments, bool force, int lockedByUserId, object userState) {
            if ((this.SetInteractionStateOperationCompleted == null)) {
                this.SetInteractionStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetInteractionStateOperationCompleted);
            }
            this.InvokeAsync("SetInteractionState", new object[] {
                        interactionId,
                        interactionState,
                        comments,
                        force,
                        lockedByUserId}, this.SetInteractionStateOperationCompleted, userState);
        }
        
        private void OnSetInteractionStateOperationCompleted(object arg) {
            if ((this.SetInteractionStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetInteractionStateCompleted(this, new SetInteractionStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/Assign", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Assign(long interactionId, int assignToUserId, ref int lockByUserId, string comment, bool force, bool checkDeletedStatus, bool checkClosedStatus, bool addEvent, bool checkExpiredStatus, bool checkUndeliveredStatus, out string lockByUserName, out long assignEventId, out string error) {
            object[] results = this.Invoke("Assign", new object[] {
                        interactionId,
                        assignToUserId,
                        lockByUserId,
                        comment,
                        force,
                        checkDeletedStatus,
                        checkClosedStatus,
                        addEvent,
                        checkExpiredStatus,
                        checkUndeliveredStatus});
            lockByUserId = ((int)(results[1]));
            lockByUserName = ((string)(results[2]));
            assignEventId = ((long)(results[3]));
            error = ((string)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAsync(long interactionId, int assignToUserId, int lockByUserId, string comment, bool force, bool checkDeletedStatus, bool checkClosedStatus, bool addEvent, bool checkExpiredStatus, bool checkUndeliveredStatus) {
            this.AssignAsync(interactionId, assignToUserId, lockByUserId, comment, force, checkDeletedStatus, checkClosedStatus, addEvent, checkExpiredStatus, checkUndeliveredStatus, null);
        }
        
        /// <remarks/>
        public void AssignAsync(long interactionId, int assignToUserId, int lockByUserId, string comment, bool force, bool checkDeletedStatus, bool checkClosedStatus, bool addEvent, bool checkExpiredStatus, bool checkUndeliveredStatus, object userState) {
            if ((this.AssignOperationCompleted == null)) {
                this.AssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignOperationCompleted);
            }
            this.InvokeAsync("Assign", new object[] {
                        interactionId,
                        assignToUserId,
                        lockByUserId,
                        comment,
                        force,
                        checkDeletedStatus,
                        checkClosedStatus,
                        addEvent,
                        checkExpiredStatus,
                        checkUndeliveredStatus}, this.AssignOperationCompleted, userState);
        }
        
        private void OnAssignOperationCompleted(object arg) {
            if ((this.AssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignCompleted(this, new AssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/Transfer", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Transfer(long interactionId, int assignToTeamId, int assignToUserId, bool transferIfNotOwner, ref int lockByUserId, out string lockByUserName, out string error) {
            object[] results = this.Invoke("Transfer", new object[] {
                        interactionId,
                        assignToTeamId,
                        assignToUserId,
                        transferIfNotOwner,
                        lockByUserId});
            lockByUserId = ((int)(results[1]));
            lockByUserName = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void TransferAsync(long interactionId, int assignToTeamId, int assignToUserId, bool transferIfNotOwner, int lockByUserId) {
            this.TransferAsync(interactionId, assignToTeamId, assignToUserId, transferIfNotOwner, lockByUserId, null);
        }
        
        /// <remarks/>
        public void TransferAsync(long interactionId, int assignToTeamId, int assignToUserId, bool transferIfNotOwner, int lockByUserId, object userState) {
            if ((this.TransferOperationCompleted == null)) {
                this.TransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOperationCompleted);
            }
            this.InvokeAsync("Transfer", new object[] {
                        interactionId,
                        assignToTeamId,
                        assignToUserId,
                        transferIfNotOwner,
                        lockByUserId}, this.TransferOperationCompleted, userState);
        }
        
        private void OnTransferOperationCompleted(object arg) {
            if ((this.TransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCompleted(this, new TransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAttachmentFile", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAttachmentFile(long attachmentId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] fileBlob, out string error) {
            object[] results = this.Invoke("GetAttachmentFile", new object[] {
                        attachmentId});
            fileBlob = ((byte[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentFileAsync(long attachmentId) {
            this.GetAttachmentFileAsync(attachmentId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentFileAsync(long attachmentId, object userState) {
            if ((this.GetAttachmentFileOperationCompleted == null)) {
                this.GetAttachmentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentFileOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentFile", new object[] {
                        attachmentId}, this.GetAttachmentFileOperationCompleted, userState);
        }
        
        private void OnGetAttachmentFileOperationCompleted(object arg) {
            if ((this.GetAttachmentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentFileCompleted(this, new GetAttachmentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAssignToUserList", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAssignToUserList(int getUsersBasedOnPermissions, long interactionId, int teamId, out string assignToUsersListXml, out string error) {
            object[] results = this.Invoke("GetAssignToUserList", new object[] {
                        getUsersBasedOnPermissions,
                        interactionId,
                        teamId});
            assignToUsersListXml = ((string)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssignToUserListAsync(int getUsersBasedOnPermissions, long interactionId, int teamId) {
            this.GetAssignToUserListAsync(getUsersBasedOnPermissions, interactionId, teamId, null);
        }
        
        /// <remarks/>
        public void GetAssignToUserListAsync(int getUsersBasedOnPermissions, long interactionId, int teamId, object userState) {
            if ((this.GetAssignToUserListOperationCompleted == null)) {
                this.GetAssignToUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssignToUserListOperationCompleted);
            }
            this.InvokeAsync("GetAssignToUserList", new object[] {
                        getUsersBasedOnPermissions,
                        interactionId,
                        teamId}, this.GetAssignToUserListOperationCompleted, userState);
        }
        
        private void OnGetAssignToUserListOperationCompleted(object arg) {
            if ((this.GetAssignToUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssignToUserListCompleted(this, new GetAssignToUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetTransferToList", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetTransferToList(out string transferToListXml, out string error) {
            object[] results = this.Invoke("GetTransferToList", new object[0]);
            transferToListXml = ((string)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferToListAsync() {
            this.GetTransferToListAsync(null);
        }
        
        /// <remarks/>
        public void GetTransferToListAsync(object userState) {
            if ((this.GetTransferToListOperationCompleted == null)) {
                this.GetTransferToListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferToListOperationCompleted);
            }
            this.InvokeAsync("GetTransferToList", new object[0], this.GetTransferToListOperationCompleted, userState);
        }
        
        private void OnGetTransferToListOperationCompleted(object arg) {
            if ((this.GetTransferToListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferToListCompleted(this, new GetTransferToListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetInteractionInfo", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetInteractionInfo(ref InteractionInfo interactionInfo, out string error) {
            object[] results = this.Invoke("GetInteractionInfo", new object[] {
                        interactionInfo});
            interactionInfo = ((InteractionInfo)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetInteractionInfoAsync(InteractionInfo interactionInfo) {
            this.GetInteractionInfoAsync(interactionInfo, null);
        }
        
        /// <remarks/>
        public void GetInteractionInfoAsync(InteractionInfo interactionInfo, object userState) {
            if ((this.GetInteractionInfoOperationCompleted == null)) {
                this.GetInteractionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInteractionInfoOperationCompleted);
            }
            this.InvokeAsync("GetInteractionInfo", new object[] {
                        interactionInfo}, this.GetInteractionInfoOperationCompleted, userState);
        }
        
        private void OnGetInteractionInfoOperationCompleted(object arg) {
            if ((this.GetInteractionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInteractionInfoCompleted(this, new GetInteractionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/BeginReply", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long BeginReply(long interactionId, ref long replyId, out string lockedByUserName, out long originalMessageId, out long outgoingMessageId, out string error) {
            object[] results = this.Invoke("BeginReply", new object[] {
                        interactionId,
                        replyId});
            replyId = ((long)(results[1]));
            lockedByUserName = ((string)(results[2]));
            originalMessageId = ((long)(results[3]));
            outgoingMessageId = ((long)(results[4]));
            error = ((string)(results[5]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void BeginReplyAsync(long interactionId, long replyId) {
            this.BeginReplyAsync(interactionId, replyId, null);
        }
        
        /// <remarks/>
        public void BeginReplyAsync(long interactionId, long replyId, object userState) {
            if ((this.BeginReplyOperationCompleted == null)) {
                this.BeginReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginReplyOperationCompleted);
            }
            this.InvokeAsync("BeginReply", new object[] {
                        interactionId,
                        replyId}, this.BeginReplyOperationCompleted, userState);
        }
        
        private void OnBeginReplyOperationCompleted(object arg) {
            if ((this.BeginReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginReplyCompleted(this, new BeginReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/SaveReply", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveReply(
                    long interactionId, 
                    ReplyMessage replyMessage, 
                    ReplyAddresses replyAddress, 
                    bool send, 
                    ref long outgoingMessageId, 
                    ref long eventId, 
                    bool unlock, 
                    bool resolve, 
                    int aliasId, 
                    bool addTalismaSignature, 
                    int operationType, 
                    long messageLanguageId, 
                    bool reviewReply, 
                    string insertedCRIds, 
                    string smsExtractorName, 
                    int smsExtractorId, 
                    out string error) {
            object[] results = this.Invoke("SaveReply", new object[] {
                        interactionId,
                        replyMessage,
                        replyAddress,
                        send,
                        outgoingMessageId,
                        eventId,
                        unlock,
                        resolve,
                        aliasId,
                        addTalismaSignature,
                        operationType,
                        messageLanguageId,
                        reviewReply,
                        insertedCRIds,
                        smsExtractorName,
                        smsExtractorId});
            outgoingMessageId = ((long)(results[1]));
            eventId = ((long)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReplyAsync(
                    long interactionId, 
                    ReplyMessage replyMessage, 
                    ReplyAddresses replyAddress, 
                    bool send, 
                    long outgoingMessageId, 
                    long eventId, 
                    bool unlock, 
                    bool resolve, 
                    int aliasId, 
                    bool addTalismaSignature, 
                    int operationType, 
                    long messageLanguageId, 
                    bool reviewReply, 
                    string insertedCRIds, 
                    string smsExtractorName, 
                    int smsExtractorId) {
            this.SaveReplyAsync(interactionId, replyMessage, replyAddress, send, outgoingMessageId, eventId, unlock, resolve, aliasId, addTalismaSignature, operationType, messageLanguageId, reviewReply, insertedCRIds, smsExtractorName, smsExtractorId, null);
        }
        
        /// <remarks/>
        public void SaveReplyAsync(
                    long interactionId, 
                    ReplyMessage replyMessage, 
                    ReplyAddresses replyAddress, 
                    bool send, 
                    long outgoingMessageId, 
                    long eventId, 
                    bool unlock, 
                    bool resolve, 
                    int aliasId, 
                    bool addTalismaSignature, 
                    int operationType, 
                    long messageLanguageId, 
                    bool reviewReply, 
                    string insertedCRIds, 
                    string smsExtractorName, 
                    int smsExtractorId, 
                    object userState) {
            if ((this.SaveReplyOperationCompleted == null)) {
                this.SaveReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReplyOperationCompleted);
            }
            this.InvokeAsync("SaveReply", new object[] {
                        interactionId,
                        replyMessage,
                        replyAddress,
                        send,
                        outgoingMessageId,
                        eventId,
                        unlock,
                        resolve,
                        aliasId,
                        addTalismaSignature,
                        operationType,
                        messageLanguageId,
                        reviewReply,
                        insertedCRIds,
                        smsExtractorName,
                        smsExtractorId}, this.SaveReplyOperationCompleted, userState);
        }
        
        private void OnSaveReplyOperationCompleted(object arg) {
            if ((this.SaveReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReplyCompleted(this, new SaveReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateInteractionReadUnReadStatus", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateInteractionReadUnReadStatus(string readInteractionIds, string unReadInteractionIds, out string error) {
            object[] results = this.Invoke("UpdateInteractionReadUnReadStatus", new object[] {
                        readInteractionIds,
                        unReadInteractionIds});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInteractionReadUnReadStatusAsync(string readInteractionIds, string unReadInteractionIds) {
            this.UpdateInteractionReadUnReadStatusAsync(readInteractionIds, unReadInteractionIds, null);
        }
        
        /// <remarks/>
        public void UpdateInteractionReadUnReadStatusAsync(string readInteractionIds, string unReadInteractionIds, object userState) {
            if ((this.UpdateInteractionReadUnReadStatusOperationCompleted == null)) {
                this.UpdateInteractionReadUnReadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInteractionReadUnReadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateInteractionReadUnReadStatus", new object[] {
                        readInteractionIds,
                        unReadInteractionIds}, this.UpdateInteractionReadUnReadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateInteractionReadUnReadStatusOperationCompleted(object arg) {
            if ((this.UpdateInteractionReadUnReadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInteractionReadUnReadStatusCompleted(this, new UpdateInteractionReadUnReadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/SaveInteractionTrackingInfo", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveInteractionTrackingInfo(object[] listOfTrackingStrings, out string error) {
            object[] results = this.Invoke("SaveInteractionTrackingInfo", new object[] {
                        listOfTrackingStrings});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInteractionTrackingInfoAsync(object[] listOfTrackingStrings) {
            this.SaveInteractionTrackingInfoAsync(listOfTrackingStrings, null);
        }
        
        /// <remarks/>
        public void SaveInteractionTrackingInfoAsync(object[] listOfTrackingStrings, object userState) {
            if ((this.SaveInteractionTrackingInfoOperationCompleted == null)) {
                this.SaveInteractionTrackingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInteractionTrackingInfoOperationCompleted);
            }
            this.InvokeAsync("SaveInteractionTrackingInfo", new object[] {
                        listOfTrackingStrings}, this.SaveInteractionTrackingInfoOperationCompleted, userState);
        }
        
        private void OnSaveInteractionTrackingInfoOperationCompleted(object arg) {
            if ((this.SaveInteractionTrackingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInteractionTrackingInfoCompleted(this, new SaveInteractionTrackingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/CancelReply", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CancelReply(long interactionId, long teamId, ref long outGoingMessageId, out long lockedByUserId, out string error) {
            object[] results = this.Invoke("CancelReply", new object[] {
                        interactionId,
                        teamId,
                        outGoingMessageId});
            outGoingMessageId = ((long)(results[1]));
            lockedByUserId = ((long)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReplyAsync(long interactionId, long teamId, long outGoingMessageId) {
            this.CancelReplyAsync(interactionId, teamId, outGoingMessageId, null);
        }
        
        /// <remarks/>
        public void CancelReplyAsync(long interactionId, long teamId, long outGoingMessageId, object userState) {
            if ((this.CancelReplyOperationCompleted == null)) {
                this.CancelReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReplyOperationCompleted);
            }
            this.InvokeAsync("CancelReply", new object[] {
                        interactionId,
                        teamId,
                        outGoingMessageId}, this.CancelReplyOperationCompleted, userState);
        }
        
        private void OnCancelReplyOperationCompleted(object arg) {
            if ((this.CancelReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReplyCompleted(this, new CancelReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UnlockInteraction", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UnlockInteraction(long interactionId, long outGoingMsgId, out string error) {
            object[] results = this.Invoke("UnlockInteraction", new object[] {
                        interactionId,
                        outGoingMsgId});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockInteractionAsync(long interactionId, long outGoingMsgId) {
            this.UnlockInteractionAsync(interactionId, outGoingMsgId, null);
        }
        
        /// <remarks/>
        public void UnlockInteractionAsync(long interactionId, long outGoingMsgId, object userState) {
            if ((this.UnlockInteractionOperationCompleted == null)) {
                this.UnlockInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockInteractionOperationCompleted);
            }
            this.InvokeAsync("UnlockInteraction", new object[] {
                        interactionId,
                        outGoingMsgId}, this.UnlockInteractionOperationCompleted, userState);
        }
        
        private void OnUnlockInteractionOperationCompleted(object arg) {
            if ((this.UnlockInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockInteractionCompleted(this, new UnlockInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/BuildForwardOrConsult", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long BuildForwardOrConsult(
                    long userId, 
                    long interactionId, 
                    int operation, 
                    long[] cachedTeams, 
                    ref long teamId, 
                    bool force, 
                    out ReplyInfo replyInfoData, 
                    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out ActivityInfo[] activityData, 
                    out AttachmentInfo[] attachmentData, 
                    out int totalEventsCount, 
                    out long eventId, 
                    out long outGoingMessageId, 
                    out bool useExternalDispatcher, 
                    out string lockedByUserName, 
                    out InteractionInfo interactionInfo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] fileBlob, 
                    out string error) {
            object[] results = this.Invoke("BuildForwardOrConsult", new object[] {
                        userId,
                        interactionId,
                        operation,
                        cachedTeams,
                        teamId,
                        force});
            teamId = ((long)(results[1]));
            replyInfoData = ((ReplyInfo)(results[2]));
            activityData = ((ActivityInfo[])(results[3]));
            attachmentData = ((AttachmentInfo[])(results[4]));
            totalEventsCount = ((int)(results[5]));
            eventId = ((long)(results[6]));
            outGoingMessageId = ((long)(results[7]));
            useExternalDispatcher = ((bool)(results[8]));
            lockedByUserName = ((string)(results[9]));
            interactionInfo = ((InteractionInfo)(results[10]));
            fileBlob = ((byte[])(results[11]));
            error = ((string)(results[12]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void BuildForwardOrConsultAsync(long userId, long interactionId, int operation, long[] cachedTeams, long teamId, bool force) {
            this.BuildForwardOrConsultAsync(userId, interactionId, operation, cachedTeams, teamId, force, null);
        }
        
        /// <remarks/>
        public void BuildForwardOrConsultAsync(long userId, long interactionId, int operation, long[] cachedTeams, long teamId, bool force, object userState) {
            if ((this.BuildForwardOrConsultOperationCompleted == null)) {
                this.BuildForwardOrConsultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildForwardOrConsultOperationCompleted);
            }
            this.InvokeAsync("BuildForwardOrConsult", new object[] {
                        userId,
                        interactionId,
                        operation,
                        cachedTeams,
                        teamId,
                        force}, this.BuildForwardOrConsultOperationCompleted, userState);
        }
        
        private void OnBuildForwardOrConsultOperationCompleted(object arg) {
            if ((this.BuildForwardOrConsultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildForwardOrConsultCompleted(this, new BuildForwardOrConsultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/BuildSmsReply", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long BuildSmsReply(long userId, long interactionId, ref long teamId, long[] cachedTeams, ref long replyId, out string lockedbyUserName, out bool interactionReplyPermission, out bool sendSmsPermission, out bool isContactValidForSms, out InteractionInfo interactionInfo, out string smsExtractorDispatcherDetails, out string error) {
            object[] results = this.Invoke("BuildSmsReply", new object[] {
                        userId,
                        interactionId,
                        teamId,
                        cachedTeams,
                        replyId});
            teamId = ((long)(results[1]));
            replyId = ((long)(results[2]));
            lockedbyUserName = ((string)(results[3]));
            interactionReplyPermission = ((bool)(results[4]));
            sendSmsPermission = ((bool)(results[5]));
            isContactValidForSms = ((bool)(results[6]));
            interactionInfo = ((InteractionInfo)(results[7]));
            smsExtractorDispatcherDetails = ((string)(results[8]));
            error = ((string)(results[9]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void BuildSmsReplyAsync(long userId, long interactionId, long teamId, long[] cachedTeams, long replyId) {
            this.BuildSmsReplyAsync(userId, interactionId, teamId, cachedTeams, replyId, null);
        }
        
        /// <remarks/>
        public void BuildSmsReplyAsync(long userId, long interactionId, long teamId, long[] cachedTeams, long replyId, object userState) {
            if ((this.BuildSmsReplyOperationCompleted == null)) {
                this.BuildSmsReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildSmsReplyOperationCompleted);
            }
            this.InvokeAsync("BuildSmsReply", new object[] {
                        userId,
                        interactionId,
                        teamId,
                        cachedTeams,
                        replyId}, this.BuildSmsReplyOperationCompleted, userState);
        }
        
        private void OnBuildSmsReplyOperationCompleted(object arg) {
            if ((this.BuildSmsReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildSmsReplyCompleted(this, new BuildSmsReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/BuildReply", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long BuildReply(long userId, long interactionId, long[] cachedTeams, ref long teamId, ref long replyId, out ReplyInfo replyInfoData, out ReplyMsg replyinProgress, out ReplyMsg replyOriginalMessage, out InteractionInfo intInfo, out string error) {
            object[] results = this.Invoke("BuildReply", new object[] {
                        userId,
                        interactionId,
                        cachedTeams,
                        teamId,
                        replyId});
            teamId = ((long)(results[1]));
            replyId = ((long)(results[2]));
            replyInfoData = ((ReplyInfo)(results[3]));
            replyinProgress = ((ReplyMsg)(results[4]));
            replyOriginalMessage = ((ReplyMsg)(results[5]));
            intInfo = ((InteractionInfo)(results[6]));
            error = ((string)(results[7]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void BuildReplyAsync(long userId, long interactionId, long[] cachedTeams, long teamId, long replyId) {
            this.BuildReplyAsync(userId, interactionId, cachedTeams, teamId, replyId, null);
        }
        
        /// <remarks/>
        public void BuildReplyAsync(long userId, long interactionId, long[] cachedTeams, long teamId, long replyId, object userState) {
            if ((this.BuildReplyOperationCompleted == null)) {
                this.BuildReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildReplyOperationCompleted);
            }
            this.InvokeAsync("BuildReply", new object[] {
                        userId,
                        interactionId,
                        cachedTeams,
                        teamId,
                        replyId}, this.BuildReplyOperationCompleted, userState);
        }
        
        private void OnBuildReplyOperationCompleted(object arg) {
            if ((this.BuildReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildReplyCompleted(this, new BuildReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/DeleteReply", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DeleteReply(long interactionId, bool force, bool ignoreLocks, out string lockedByUserName, out string error) {
            object[] results = this.Invoke("DeleteReply", new object[] {
                        interactionId,
                        force,
                        ignoreLocks});
            lockedByUserName = ((string)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReplyAsync(long interactionId, bool force, bool ignoreLocks) {
            this.DeleteReplyAsync(interactionId, force, ignoreLocks, null);
        }
        
        /// <remarks/>
        public void DeleteReplyAsync(long interactionId, bool force, bool ignoreLocks, object userState) {
            if ((this.DeleteReplyOperationCompleted == null)) {
                this.DeleteReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReplyOperationCompleted);
            }
            this.InvokeAsync("DeleteReply", new object[] {
                        interactionId,
                        force,
                        ignoreLocks}, this.DeleteReplyOperationCompleted, userState);
        }
        
        private void OnDeleteReplyOperationCompleted(object arg) {
            if ((this.DeleteReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReplyCompleted(this, new DeleteReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetPropertiesTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetPropertiesTab(long interactionId, long tabId, int getPropInfoOrPropXml, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] propData, out string propXml, out string error) {
            object[] results = this.Invoke("GetPropertiesTab", new object[] {
                        interactionId,
                        tabId,
                        getPropInfoOrPropXml});
            propData = ((PropertyInfo[])(results[1]));
            propXml = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesTabAsync(long interactionId, long tabId, int getPropInfoOrPropXml) {
            this.GetPropertiesTabAsync(interactionId, tabId, getPropInfoOrPropXml, null);
        }
        
        /// <remarks/>
        public void GetPropertiesTabAsync(long interactionId, long tabId, int getPropInfoOrPropXml, object userState) {
            if ((this.GetPropertiesTabOperationCompleted == null)) {
                this.GetPropertiesTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesTabOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesTab", new object[] {
                        interactionId,
                        tabId,
                        getPropInfoOrPropXml}, this.GetPropertiesTabOperationCompleted, userState);
        }
        
        private void OnGetPropertiesTabOperationCompleted(object arg) {
            if ((this.GetPropertiesTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesTabCompleted(this, new GetPropertiesTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdatePropertyTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdatePropertyTab(int interactionId, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, bool updateReadOnly, bool ignoreMandatoryCheck, out string error) {
            object[] results = this.Invoke("UpdatePropertyTab", new object[] {
                        interactionId,
                        propData,
                        updateReadOnly,
                        ignoreMandatoryCheck});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePropertyTabAsync(int interactionId, PropertyInfo[] propData, bool updateReadOnly, bool ignoreMandatoryCheck) {
            this.UpdatePropertyTabAsync(interactionId, propData, updateReadOnly, ignoreMandatoryCheck, null);
        }
        
        /// <remarks/>
        public void UpdatePropertyTabAsync(int interactionId, PropertyInfo[] propData, bool updateReadOnly, bool ignoreMandatoryCheck, object userState) {
            if ((this.UpdatePropertyTabOperationCompleted == null)) {
                this.UpdatePropertyTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePropertyTabOperationCompleted);
            }
            this.InvokeAsync("UpdatePropertyTab", new object[] {
                        interactionId,
                        propData,
                        updateReadOnly,
                        ignoreMandatoryCheck}, this.UpdatePropertyTabOperationCompleted, userState);
        }
        
        private void OnUpdatePropertyTabOperationCompleted(object arg) {
            if ((this.UpdatePropertyTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePropertyTabCompleted(this, new UpdatePropertyTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetRLTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetRLTab(int interactionId, int tabId, int getPropInfoOrPropXml, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] propData, out string propXml, out string error) {
            object[] results = this.Invoke("GetRLTab", new object[] {
                        interactionId,
                        tabId,
                        getPropInfoOrPropXml});
            propData = ((PropertyInfo[])(results[1]));
            propXml = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetRLTabAsync(int interactionId, int tabId, int getPropInfoOrPropXml) {
            this.GetRLTabAsync(interactionId, tabId, getPropInfoOrPropXml, null);
        }
        
        /// <remarks/>
        public void GetRLTabAsync(int interactionId, int tabId, int getPropInfoOrPropXml, object userState) {
            if ((this.GetRLTabOperationCompleted == null)) {
                this.GetRLTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRLTabOperationCompleted);
            }
            this.InvokeAsync("GetRLTab", new object[] {
                        interactionId,
                        tabId,
                        getPropInfoOrPropXml}, this.GetRLTabOperationCompleted, userState);
        }
        
        private void OnGetRLTabOperationCompleted(object arg) {
            if ((this.GetRLTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRLTabCompleted(this, new GetRLTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateRLTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateRLTab(long interactionId, int tabId, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, int[] deleteRowsList, out string error) {
            object[] results = this.Invoke("UpdateRLTab", new object[] {
                        interactionId,
                        tabId,
                        propData,
                        deleteRowsList});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRLTabAsync(long interactionId, int tabId, PropertyInfo[] propData, int[] deleteRowsList) {
            this.UpdateRLTabAsync(interactionId, tabId, propData, deleteRowsList, null);
        }
        
        /// <remarks/>
        public void UpdateRLTabAsync(long interactionId, int tabId, PropertyInfo[] propData, int[] deleteRowsList, object userState) {
            if ((this.UpdateRLTabOperationCompleted == null)) {
                this.UpdateRLTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRLTabOperationCompleted);
            }
            this.InvokeAsync("UpdateRLTab", new object[] {
                        interactionId,
                        tabId,
                        propData,
                        deleteRowsList}, this.UpdateRLTabOperationCompleted, userState);
        }
        
        private void OnUpdateRLTabOperationCompleted(object arg) {
            if ((this.UpdateRLTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRLTabCompleted(this, new UpdateRLTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetLinkedTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetLinkedTab(int interactionId, int tabId, int getPropInfoOrPropXml, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] propData, out string propXml, out string error) {
            object[] results = this.Invoke("GetLinkedTab", new object[] {
                        interactionId,
                        tabId,
                        getPropInfoOrPropXml});
            propData = ((PropertyInfo[])(results[1]));
            propXml = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedTabAsync(int interactionId, int tabId, int getPropInfoOrPropXml) {
            this.GetLinkedTabAsync(interactionId, tabId, getPropInfoOrPropXml, null);
        }
        
        /// <remarks/>
        public void GetLinkedTabAsync(int interactionId, int tabId, int getPropInfoOrPropXml, object userState) {
            if ((this.GetLinkedTabOperationCompleted == null)) {
                this.GetLinkedTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedTabOperationCompleted);
            }
            this.InvokeAsync("GetLinkedTab", new object[] {
                        interactionId,
                        tabId,
                        getPropInfoOrPropXml}, this.GetLinkedTabOperationCompleted, userState);
        }
        
        private void OnGetLinkedTabOperationCompleted(object arg) {
            if ((this.GetLinkedTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedTabCompleted(this, new GetLinkedTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class InteractionAttachmentData {
        
        private int eventIdField;
        
        private int attachmentIdField;
        
        private string fileNameField;
        
        private string cIdField;
        
        private int sizeField;
        
        private byte[] fileBlobField;
        
        private bool isNewAttachmentField;
        
        private bool copyAttachmentFromServerField;
        
        private bool retainAttachmentField;
        
        private bool deleteAttachmentField;
        
        private bool editAttachmentField;
        
        /// <remarks/>
        public int eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public int attachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string cId {
            get {
                return this.cIdField;
            }
            set {
                this.cIdField = value;
            }
        }
        
        /// <remarks/>
        public int size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileBlob {
            get {
                return this.fileBlobField;
            }
            set {
                this.fileBlobField = value;
            }
        }
        
        /// <remarks/>
        public bool isNewAttachment {
            get {
                return this.isNewAttachmentField;
            }
            set {
                this.isNewAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public bool copyAttachmentFromServer {
            get {
                return this.copyAttachmentFromServerField;
            }
            set {
                this.copyAttachmentFromServerField = value;
            }
        }
        
        /// <remarks/>
        public bool retainAttachment {
            get {
                return this.retainAttachmentField;
            }
            set {
                this.retainAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public bool deleteAttachment {
            get {
                return this.deleteAttachmentField;
            }
            set {
                this.deleteAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public bool editAttachment {
            get {
                return this.editAttachmentField;
            }
            set {
                this.editAttachmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class ReplyMsg {
        
        private long msgIdField;
        
        private long languageIdField;
        
        private long aliasIdField;
        
        private bool bHasAttachmentsField;
        
        private string strToField;
        
        private string strFromField;
        
        private string strCCField;
        
        private string strBccField;
        
        private string strSubjectField;
        
        private string strPlainTextField;
        
        private string strHTMLTextField;
        
        private string strMailServerTimeField;
        
        private long lOutGoingMsgIdField;
        
        private long lLockedByUserIdField;
        
        private string strLockedByUserNameField;
        
        private AttachmentInfo[] attachmentsField;
        
        /// <remarks/>
        public long msgId {
            get {
                return this.msgIdField;
            }
            set {
                this.msgIdField = value;
            }
        }
        
        /// <remarks/>
        public long languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        public long aliasId {
            get {
                return this.aliasIdField;
            }
            set {
                this.aliasIdField = value;
            }
        }
        
        /// <remarks/>
        public bool bHasAttachments {
            get {
                return this.bHasAttachmentsField;
            }
            set {
                this.bHasAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        public string strTo {
            get {
                return this.strToField;
            }
            set {
                this.strToField = value;
            }
        }
        
        /// <remarks/>
        public string strFrom {
            get {
                return this.strFromField;
            }
            set {
                this.strFromField = value;
            }
        }
        
        /// <remarks/>
        public string strCC {
            get {
                return this.strCCField;
            }
            set {
                this.strCCField = value;
            }
        }
        
        /// <remarks/>
        public string strBcc {
            get {
                return this.strBccField;
            }
            set {
                this.strBccField = value;
            }
        }
        
        /// <remarks/>
        public string strSubject {
            get {
                return this.strSubjectField;
            }
            set {
                this.strSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string strPlainText {
            get {
                return this.strPlainTextField;
            }
            set {
                this.strPlainTextField = value;
            }
        }
        
        /// <remarks/>
        public string strHTMLText {
            get {
                return this.strHTMLTextField;
            }
            set {
                this.strHTMLTextField = value;
            }
        }
        
        /// <remarks/>
        public string strMailServerTime {
            get {
                return this.strMailServerTimeField;
            }
            set {
                this.strMailServerTimeField = value;
            }
        }
        
        /// <remarks/>
        public long lOutGoingMsgId {
            get {
                return this.lOutGoingMsgIdField;
            }
            set {
                this.lOutGoingMsgIdField = value;
            }
        }
        
        /// <remarks/>
        public long lLockedByUserId {
            get {
                return this.lLockedByUserIdField;
            }
            set {
                this.lLockedByUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string strLockedByUserName {
            get {
                return this.strLockedByUserNameField;
            }
            set {
                this.strLockedByUserNameField = value;
            }
        }
        
        /// <remarks/>
        public AttachmentInfo[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class AttachmentInfo {
        
        private int eventIdField;
        
        private int attachmentIdField;
        
        private string fileNameField;
        
        private string cIdField;
        
        private int sizeField;
        
        private bool inlineField;
        
        /// <remarks/>
        public int eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public int attachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string cId {
            get {
                return this.cIdField;
            }
            set {
                this.cIdField = value;
            }
        }
        
        /// <remarks/>
        public int size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public bool inline {
            get {
                return this.inlineField;
            }
            set {
                this.inlineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class OutGoingAlias {
        
        private long aliasIdField;
        
        private long teamIdField;
        
        private string nameField;
        
        private string emailField;
        
        private int heuristicThreadField;
        
        /// <remarks/>
        public long aliasId {
            get {
                return this.aliasIdField;
            }
            set {
                this.aliasIdField = value;
            }
        }
        
        /// <remarks/>
        public long teamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int heuristicThread {
            get {
                return this.heuristicThreadField;
            }
            set {
                this.heuristicThreadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class GlobalConfigDetails {
        
        private long versionIdField;
        
        private long maxMessageSizeInKbField;
        
        private string talismaInstallationIdField;
        
        private string outboundMailerUrlField;
        
        private long maxNumberOfMessagesField;
        
        private string chatUrlField;
        
        private long maxNumberOfRequestsField;
        
        private int sendAttachmentOptionField;
        
        private bool isTagLineRequiredField;
        
        private bool sendPropertyDetailsInConsultField;
        
        /// <remarks/>
        public long versionId {
            get {
                return this.versionIdField;
            }
            set {
                this.versionIdField = value;
            }
        }
        
        /// <remarks/>
        public long maxMessageSizeInKb {
            get {
                return this.maxMessageSizeInKbField;
            }
            set {
                this.maxMessageSizeInKbField = value;
            }
        }
        
        /// <remarks/>
        public string talismaInstallationId {
            get {
                return this.talismaInstallationIdField;
            }
            set {
                this.talismaInstallationIdField = value;
            }
        }
        
        /// <remarks/>
        public string outboundMailerUrl {
            get {
                return this.outboundMailerUrlField;
            }
            set {
                this.outboundMailerUrlField = value;
            }
        }
        
        /// <remarks/>
        public long maxNumberOfMessages {
            get {
                return this.maxNumberOfMessagesField;
            }
            set {
                this.maxNumberOfMessagesField = value;
            }
        }
        
        /// <remarks/>
        public string chatUrl {
            get {
                return this.chatUrlField;
            }
            set {
                this.chatUrlField = value;
            }
        }
        
        /// <remarks/>
        public long maxNumberOfRequests {
            get {
                return this.maxNumberOfRequestsField;
            }
            set {
                this.maxNumberOfRequestsField = value;
            }
        }
        
        /// <remarks/>
        public int sendAttachmentOption {
            get {
                return this.sendAttachmentOptionField;
            }
            set {
                this.sendAttachmentOptionField = value;
            }
        }
        
        /// <remarks/>
        public bool isTagLineRequired {
            get {
                return this.isTagLineRequiredField;
            }
            set {
                this.isTagLineRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool sendPropertyDetailsInConsult {
            get {
                return this.sendPropertyDetailsInConsultField;
            }
            set {
                this.sendPropertyDetailsInConsultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class LanguageInfo {
        
        private long languageIdField;
        
        private string nameField;
        
        /// <remarks/>
        public long languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class PrefixOptions {
        
        private long languageIdField;
        
        private string prefixForReplyField;
        
        private string prefixForForwardField;
        
        /// <remarks/>
        public long languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        public string prefixForReply {
            get {
                return this.prefixForReplyField;
            }
            set {
                this.prefixForReplyField = value;
            }
        }
        
        /// <remarks/>
        public string prefixForForward {
            get {
                return this.prefixForForwardField;
            }
            set {
                this.prefixForForwardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class UserSignature {
        
        private long signatureIdField;
        
        private long userIdField;
        
        private long teamIdField;
        
        private string signatureHtmlFormatField;
        
        private string signaturePlainTextFormatField;
        
        private bool emptyField;
        
        private bool attachToMessageField;
        
        private long languageIdField;
        
        /// <remarks/>
        public long signatureId {
            get {
                return this.signatureIdField;
            }
            set {
                this.signatureIdField = value;
            }
        }
        
        /// <remarks/>
        public long userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long teamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        public string signatureHtmlFormat {
            get {
                return this.signatureHtmlFormatField;
            }
            set {
                this.signatureHtmlFormatField = value;
            }
        }
        
        /// <remarks/>
        public string signaturePlainTextFormat {
            get {
                return this.signaturePlainTextFormatField;
            }
            set {
                this.signaturePlainTextFormatField = value;
            }
        }
        
        /// <remarks/>
        public bool empty {
            get {
                return this.emptyField;
            }
            set {
                this.emptyField = value;
            }
        }
        
        /// <remarks/>
        public bool attachToMessage {
            get {
                return this.attachToMessageField;
            }
            set {
                this.attachToMessageField = value;
            }
        }
        
        /// <remarks/>
        public long languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class ReplyInfo {
        
        private long maxCharactersInReplyField;
        
        private string strPrefixField;
        
        private bool bEnableFeatureField;
        
        private UserSignature[] signatureOptionsField;
        
        private PrefixOptions[] prefixOptionsField;
        
        private LanguageInfo[] languageOptionsField;
        
        private GlobalConfigDetails globalConfigOptionsField;
        
        private OutGoingAlias[] stOutGoingAliasesField;
        
        private string strSnifferURLField;
        
        private bool bOriginalMessageIncludeField;
        
        private bool bSubjectLineInTheEndField;
        
        private string strLockedByField;
        
        private bool bLockAcquiredField;
        
        /// <remarks/>
        public long maxCharactersInReply {
            get {
                return this.maxCharactersInReplyField;
            }
            set {
                this.maxCharactersInReplyField = value;
            }
        }
        
        /// <remarks/>
        public string strPrefix {
            get {
                return this.strPrefixField;
            }
            set {
                this.strPrefixField = value;
            }
        }
        
        /// <remarks/>
        public bool bEnableFeature {
            get {
                return this.bEnableFeatureField;
            }
            set {
                this.bEnableFeatureField = value;
            }
        }
        
        /// <remarks/>
        public UserSignature[] signatureOptions {
            get {
                return this.signatureOptionsField;
            }
            set {
                this.signatureOptionsField = value;
            }
        }
        
        /// <remarks/>
        public PrefixOptions[] prefixOptions {
            get {
                return this.prefixOptionsField;
            }
            set {
                this.prefixOptionsField = value;
            }
        }
        
        /// <remarks/>
        public LanguageInfo[] languageOptions {
            get {
                return this.languageOptionsField;
            }
            set {
                this.languageOptionsField = value;
            }
        }
        
        /// <remarks/>
        public GlobalConfigDetails globalConfigOptions {
            get {
                return this.globalConfigOptionsField;
            }
            set {
                this.globalConfigOptionsField = value;
            }
        }
        
        /// <remarks/>
        public OutGoingAlias[] stOutGoingAliases {
            get {
                return this.stOutGoingAliasesField;
            }
            set {
                this.stOutGoingAliasesField = value;
            }
        }
        
        /// <remarks/>
        public string strSnifferURL {
            get {
                return this.strSnifferURLField;
            }
            set {
                this.strSnifferURLField = value;
            }
        }
        
        /// <remarks/>
        public bool bOriginalMessageInclude {
            get {
                return this.bOriginalMessageIncludeField;
            }
            set {
                this.bOriginalMessageIncludeField = value;
            }
        }
        
        /// <remarks/>
        public bool bSubjectLineInTheEnd {
            get {
                return this.bSubjectLineInTheEndField;
            }
            set {
                this.bSubjectLineInTheEndField = value;
            }
        }
        
        /// <remarks/>
        public string strLockedBy {
            get {
                return this.strLockedByField;
            }
            set {
                this.strLockedByField = value;
            }
        }
        
        /// <remarks/>
        public bool bLockAcquired {
            get {
                return this.bLockAcquiredField;
            }
            set {
                this.bLockAcquiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class ReplyAddresses {
        
        private string toField;
        
        private string ccField;
        
        private string bccField;
        
        private string toDLsExpandedField;
        
        private string ccDLsExpandedField;
        
        private string bccDLsExpandedField;
        
        /// <remarks/>
        public string to {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string cc {
            get {
                return this.ccField;
            }
            set {
                this.ccField = value;
            }
        }
        
        /// <remarks/>
        public string bcc {
            get {
                return this.bccField;
            }
            set {
                this.bccField = value;
            }
        }
        
        /// <remarks/>
        public string toDLsExpanded {
            get {
                return this.toDLsExpandedField;
            }
            set {
                this.toDLsExpandedField = value;
            }
        }
        
        /// <remarks/>
        public string ccDLsExpanded {
            get {
                return this.ccDLsExpandedField;
            }
            set {
                this.ccDLsExpandedField = value;
            }
        }
        
        /// <remarks/>
        public string bccDLsExpanded {
            get {
                return this.bccDLsExpandedField;
            }
            set {
                this.bccDLsExpandedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class ReplyMessage {
        
        private string subjectPrefixField;
        
        private string subjectField;
        
        private string partialMessageContentsField;
        
        private string fullMessageContentsField;
        
        private long includeOriginalMessageIdField;
        
        private string temporaryPathField;
        
        private InteractionAttachmentData[] attachmentArrayField;
        
        private bool rushReplyField;
        
        private string plainTextFullMessageContentsField;
        
        private string partialPlainTextContentsField;
        
        private string userMsgPlainTextContentField;
        
        private string userMsgHTMLTextContentField;
        
        private string hTMLAttachmentContentField;
        
        private string plainTextAttachmentContentField;
        
        /// <remarks/>
        public string subjectPrefix {
            get {
                return this.subjectPrefixField;
            }
            set {
                this.subjectPrefixField = value;
            }
        }
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string partialMessageContents {
            get {
                return this.partialMessageContentsField;
            }
            set {
                this.partialMessageContentsField = value;
            }
        }
        
        /// <remarks/>
        public string fullMessageContents {
            get {
                return this.fullMessageContentsField;
            }
            set {
                this.fullMessageContentsField = value;
            }
        }
        
        /// <remarks/>
        public long includeOriginalMessageId {
            get {
                return this.includeOriginalMessageIdField;
            }
            set {
                this.includeOriginalMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public string temporaryPath {
            get {
                return this.temporaryPathField;
            }
            set {
                this.temporaryPathField = value;
            }
        }
        
        /// <remarks/>
        public InteractionAttachmentData[] AttachmentArray {
            get {
                return this.attachmentArrayField;
            }
            set {
                this.attachmentArrayField = value;
            }
        }
        
        /// <remarks/>
        public bool rushReply {
            get {
                return this.rushReplyField;
            }
            set {
                this.rushReplyField = value;
            }
        }
        
        /// <remarks/>
        public string plainTextFullMessageContents {
            get {
                return this.plainTextFullMessageContentsField;
            }
            set {
                this.plainTextFullMessageContentsField = value;
            }
        }
        
        /// <remarks/>
        public string partialPlainTextContents {
            get {
                return this.partialPlainTextContentsField;
            }
            set {
                this.partialPlainTextContentsField = value;
            }
        }
        
        /// <remarks/>
        public string userMsgPlainTextContent {
            get {
                return this.userMsgPlainTextContentField;
            }
            set {
                this.userMsgPlainTextContentField = value;
            }
        }
        
        /// <remarks/>
        public string userMsgHTMLTextContent {
            get {
                return this.userMsgHTMLTextContentField;
            }
            set {
                this.userMsgHTMLTextContentField = value;
            }
        }
        
        /// <remarks/>
        public string HTMLAttachmentContent {
            get {
                return this.hTMLAttachmentContentField;
            }
            set {
                this.hTMLAttachmentContentField = value;
            }
        }
        
        /// <remarks/>
        public string plainTextAttachmentContent {
            get {
                return this.plainTextAttachmentContentField;
            }
            set {
                this.plainTextAttachmentContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class InteractionInfo {
        
        private long interactionIdField;
        
        private long nSystemAdminField;
        
        private int teamIdField;
        
        private string teamNameField;
        
        private int ownerIdField;
        
        private string ownerNameField;
        
        private int priorityField;
        
        private long aliasIdField;
        
        private long contactIdField;
        
        private string contactNameField;
        
        private string contactEmailField;
        
        private string subjectField;
        
        private System.DateTime lastUpdatedField;
        
        private int systemPriorityField;
        
        private int userPriorityField;
        
        private int ruleBasedPriorityField;
        
        private int interactionStateField;
        
        private int consultStateField;
        
        private int replyStateField;
        
        private System.DateTime dateOfLastMessageFromContactField;
        
        private System.DateTime expiryDateField;
        
        private bool isDeletedField;
        
        private int messageCountField;
        
        private System.DateTime lastOpenedField;
        
        private System.DateTime createdDateField;
        
        private System.DateTime lastResolvedDateField;
        
        private long outgoingMessageIdField;
        
        private long reviewerIdField;
        
        private long reviewerStateField;
        
        private long lastMessageLanguageIdField;
        
        private string sOrderDisplNameField;
        
        /// <remarks/>
        public long interactionId {
            get {
                return this.interactionIdField;
            }
            set {
                this.interactionIdField = value;
            }
        }
        
        /// <remarks/>
        public long nSystemAdmin {
            get {
                return this.nSystemAdminField;
            }
            set {
                this.nSystemAdminField = value;
            }
        }
        
        /// <remarks/>
        public int teamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        public string teamName {
            get {
                return this.teamNameField;
            }
            set {
                this.teamNameField = value;
            }
        }
        
        /// <remarks/>
        public int ownerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public string ownerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public long aliasId {
            get {
                return this.aliasIdField;
            }
            set {
                this.aliasIdField = value;
            }
        }
        
        /// <remarks/>
        public long contactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public string contactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        public string contactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int systemPriority {
            get {
                return this.systemPriorityField;
            }
            set {
                this.systemPriorityField = value;
            }
        }
        
        /// <remarks/>
        public int userPriority {
            get {
                return this.userPriorityField;
            }
            set {
                this.userPriorityField = value;
            }
        }
        
        /// <remarks/>
        public int ruleBasedPriority {
            get {
                return this.ruleBasedPriorityField;
            }
            set {
                this.ruleBasedPriorityField = value;
            }
        }
        
        /// <remarks/>
        public int interactionState {
            get {
                return this.interactionStateField;
            }
            set {
                this.interactionStateField = value;
            }
        }
        
        /// <remarks/>
        public int consultState {
            get {
                return this.consultStateField;
            }
            set {
                this.consultStateField = value;
            }
        }
        
        /// <remarks/>
        public int replyState {
            get {
                return this.replyStateField;
            }
            set {
                this.replyStateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateOfLastMessageFromContact {
            get {
                return this.dateOfLastMessageFromContactField;
            }
            set {
                this.dateOfLastMessageFromContactField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public bool isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public int messageCount {
            get {
                return this.messageCountField;
            }
            set {
                this.messageCountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastOpened {
            get {
                return this.lastOpenedField;
            }
            set {
                this.lastOpenedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastResolvedDate {
            get {
                return this.lastResolvedDateField;
            }
            set {
                this.lastResolvedDateField = value;
            }
        }
        
        /// <remarks/>
        public long outgoingMessageId {
            get {
                return this.outgoingMessageIdField;
            }
            set {
                this.outgoingMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public long reviewerId {
            get {
                return this.reviewerIdField;
            }
            set {
                this.reviewerIdField = value;
            }
        }
        
        /// <remarks/>
        public long reviewerState {
            get {
                return this.reviewerStateField;
            }
            set {
                this.reviewerStateField = value;
            }
        }
        
        /// <remarks/>
        public long lastMessageLanguageId {
            get {
                return this.lastMessageLanguageIdField;
            }
            set {
                this.lastMessageLanguageIdField = value;
            }
        }
        
        /// <remarks/>
        public string sOrderDisplName {
            get {
                return this.sOrderDisplNameField;
            }
            set {
                this.sOrderDisplNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class EventRetrivingOptions {
        
        private bool eventsOrderField;
        
        private int filterEventsField;
        
        private bool userPreferenceField;
        
        private int eventExpandedTypeField;
        
        private int numberOfEventsToFetchField;
        
        private int showSubInteractionEventsField;
        
        private string lastEventRetrivedServerTimeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public bool eventsOrder {
            get {
                return this.eventsOrderField;
            }
            set {
                this.eventsOrderField = value;
            }
        }
        
        /// <remarks/>
        public int filterEvents {
            get {
                return this.filterEventsField;
            }
            set {
                this.filterEventsField = value;
            }
        }
        
        /// <remarks/>
        public bool userPreference {
            get {
                return this.userPreferenceField;
            }
            set {
                this.userPreferenceField = value;
            }
        }
        
        /// <remarks/>
        public int eventExpandedType {
            get {
                return this.eventExpandedTypeField;
            }
            set {
                this.eventExpandedTypeField = value;
            }
        }
        
        /// <remarks/>
        public int numberOfEventsToFetch {
            get {
                return this.numberOfEventsToFetchField;
            }
            set {
                this.numberOfEventsToFetchField = value;
            }
        }
        
        /// <remarks/>
        public int showSubInteractionEvents {
            get {
                return this.showSubInteractionEventsField;
            }
            set {
                this.showSubInteractionEventsField = value;
            }
        }
        
        /// <remarks/>
        public string lastEventRetrivedServerTime {
            get {
                return this.lastEventRetrivedServerTimeField;
            }
            set {
                this.lastEventRetrivedServerTimeField = value;
            }
        }
        
        /// <remarks/>
        public int pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class MessageContent {
        
        private long interactionIdField;
        
        private long eventIdField;
        
        private string messageContentField;
        
        private string messageHtmlContentField;
        
        private bool hasAttachmentField;
        
        private AttachmentInfo[] attachmentInfoField;
        
        private int[] attachmentIdsField;
        
        /// <remarks/>
        public long interactionId {
            get {
                return this.interactionIdField;
            }
            set {
                this.interactionIdField = value;
            }
        }
        
        /// <remarks/>
        public long eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public string messageContent {
            get {
                return this.messageContentField;
            }
            set {
                this.messageContentField = value;
            }
        }
        
        /// <remarks/>
        public string messageHtmlContent {
            get {
                return this.messageHtmlContentField;
            }
            set {
                this.messageHtmlContentField = value;
            }
        }
        
        /// <remarks/>
        public bool hasAttachment {
            get {
                return this.hasAttachmentField;
            }
            set {
                this.hasAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public AttachmentInfo[] attachmentInfo {
            get {
                return this.attachmentInfoField;
            }
            set {
                this.attachmentInfoField = value;
            }
        }
        
        /// <remarks/>
        public int[] attachmentIds {
            get {
                return this.attachmentIdsField;
            }
            set {
                this.attachmentIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class ActivityInfo {
        
        private int eventIdField;
        
        private int eventTypeField;
        
        private string fromField;
        
        private string toField;
        
        private string ccField;
        
        private string bccField;
        
        private int originatorIdField;
        
        private int beforeIdField;
        
        private int afterIdField;
        
        private string byRuleField;
        
        private int mediaIdField;
        
        private System.DateTime eventDateField;
        
        private System.DateTime mailServerEventDateField;
        
        private int directionField;
        
        private int isIncomingField;
        
        private bool hasAttachmentField;
        
        private bool emptyField;
        
        private MessageContent messageContentField;
        
        private string interactionPriorityField;
        
        private string beforeIdUserField;
        
        private string afterIdUserField;
        
        private string originatorIdUserField;
        
        private string subjectField;
        
        private long interactionIdField;
        
        /// <remarks/>
        public int eventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public int eventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public string to {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string cc {
            get {
                return this.ccField;
            }
            set {
                this.ccField = value;
            }
        }
        
        /// <remarks/>
        public string bcc {
            get {
                return this.bccField;
            }
            set {
                this.bccField = value;
            }
        }
        
        /// <remarks/>
        public int originatorId {
            get {
                return this.originatorIdField;
            }
            set {
                this.originatorIdField = value;
            }
        }
        
        /// <remarks/>
        public int beforeId {
            get {
                return this.beforeIdField;
            }
            set {
                this.beforeIdField = value;
            }
        }
        
        /// <remarks/>
        public int afterId {
            get {
                return this.afterIdField;
            }
            set {
                this.afterIdField = value;
            }
        }
        
        /// <remarks/>
        public string byRule {
            get {
                return this.byRuleField;
            }
            set {
                this.byRuleField = value;
            }
        }
        
        /// <remarks/>
        public int mediaId {
            get {
                return this.mediaIdField;
            }
            set {
                this.mediaIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime mailServerEventDate {
            get {
                return this.mailServerEventDateField;
            }
            set {
                this.mailServerEventDateField = value;
            }
        }
        
        /// <remarks/>
        public int direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public int isIncoming {
            get {
                return this.isIncomingField;
            }
            set {
                this.isIncomingField = value;
            }
        }
        
        /// <remarks/>
        public bool hasAttachment {
            get {
                return this.hasAttachmentField;
            }
            set {
                this.hasAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public bool empty {
            get {
                return this.emptyField;
            }
            set {
                this.emptyField = value;
            }
        }
        
        /// <remarks/>
        public MessageContent messageContent {
            get {
                return this.messageContentField;
            }
            set {
                this.messageContentField = value;
            }
        }
        
        /// <remarks/>
        public string interactionPriority {
            get {
                return this.interactionPriorityField;
            }
            set {
                this.interactionPriorityField = value;
            }
        }
        
        /// <remarks/>
        public string beforeIdUser {
            get {
                return this.beforeIdUserField;
            }
            set {
                this.beforeIdUserField = value;
            }
        }
        
        /// <remarks/>
        public string afterIdUser {
            get {
                return this.afterIdUserField;
            }
            set {
                this.afterIdUserField = value;
            }
        }
        
        /// <remarks/>
        public string originatorIdUser {
            get {
                return this.originatorIdUserField;
            }
            set {
                this.originatorIdUserField = value;
            }
        }
        
        /// <remarks/>
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public long interactionId {
            get {
                return this.interactionIdField;
            }
            set {
                this.interactionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class PropertyInfo {
        
        private long propertyIDField;
        
        private string propValueField;
        
        private long rowIDField;
        
        private long relJoinIDField;
        
        private string propValAttrsField;
        
        /// <remarks/>
        public long propertyID {
            get {
                return this.propertyIDField;
            }
            set {
                this.propertyIDField = value;
            }
        }
        
        /// <remarks/>
        public string propValue {
            get {
                return this.propValueField;
            }
            set {
                this.propValueField = value;
            }
        }
        
        /// <remarks/>
        public long rowID {
            get {
                return this.rowIDField;
            }
            set {
                this.rowIDField = value;
            }
        }
        
        /// <remarks/>
        public long relJoinID {
            get {
                return this.relJoinIDField;
            }
            set {
                this.relJoinIDField = value;
            }
        }
        
        /// <remarks/>
        public string propValAttrs {
            get {
                return this.propValAttrsField;
            }
            set {
                this.propValAttrsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public enum InteractionState {
        
        /// <remarks/>
        isOpen,
        
        /// <remarks/>
        isResolved,
        
        /// <remarks/>
        isClosed,
        
        /// <remarks/>
        isExpired,
        
        /// <remarks/>
        isPending,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateInteractionCompletedEventHandler(object sender, CreateInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long interactionId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long evtId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool contactPreviouslyUnblocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteInteractionCompletedEventHandler(object sender, DeleteInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteInteractionsCompletedEventHandler(object sender, DeleteInteractionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInteractionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInteractionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddMsgToInteractionCompletedEventHandler(object sender, AddMsgToInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMsgToInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMsgToInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool contactPreviouslyUnblocked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long evtId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddAttachmentsCompletedEventHandler(object sender, AddAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddCommentsToInteractionCompletedEventHandler(object sender, AddCommentsToInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentsToInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommentsToInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long eventId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddCommentsToInteractionWithAttchCompletedEventHandler(object sender, AddCommentsToInteractionWithAttchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentsToInteractionWithAttchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommentsToInteractionWithAttchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long eventId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetInteractionEventsCompletedEventHandler(object sender, GetInteractionEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInteractionEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInteractionEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ActivityInfo[] activityData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string activityInfoXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int totalEventsCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllInteractionEventsCompletedEventHandler(object sender, GetAllInteractionEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllInteractionEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllInteractionEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ActivityInfo[] activityData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public AttachmentInfo[] attachmentInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentInfo[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int totalEventsCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetInteractionEvents2CompletedEventHandler(object sender, GetInteractionEvents2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInteractionEvents2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInteractionEvents2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ActivityInfo[] activityData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalEventsCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMessageContentCompletedEventHandler(object sender, GetMessageContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public MessageContent messageContent {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageContent)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllMessageContentsCompletedEventHandler(object sender, GetAllMessageContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMessageContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMessageContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public MessageContent[] messageContents {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageContent[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SetInteractionPriorityCompletedEventHandler(object sender, SetInteractionPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetInteractionPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetInteractionPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SetInteractionStateCompletedEventHandler(object sender, SetInteractionStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetInteractionStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetInteractionStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lockedByUserId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string lockedByUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AssignCompletedEventHandler(object sender, AssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lockByUserId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string lockByUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long assignEventId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TransferCompletedEventHandler(object sender, TransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lockByUserId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string lockByUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAttachmentFileCompletedEventHandler(object sender, GetAttachmentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] fileBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAssignToUserListCompletedEventHandler(object sender, GetAssignToUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssignToUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssignToUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string assignToUsersListXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetTransferToListCompletedEventHandler(object sender, GetTransferToListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferToListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferToListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string transferToListXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetInteractionInfoCompletedEventHandler(object sender, GetInteractionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInteractionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInteractionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public InteractionInfo interactionInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InteractionInfo)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void BeginReplyCompletedEventHandler(object sender, BeginReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long replyId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string lockedByUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long originalMessageId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public long outgoingMessageId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SaveReplyCompletedEventHandler(object sender, SaveReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long outgoingMessageId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long eventId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateInteractionReadUnReadStatusCompletedEventHandler(object sender, UpdateInteractionReadUnReadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInteractionReadUnReadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInteractionReadUnReadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SaveInteractionTrackingInfoCompletedEventHandler(object sender, SaveInteractionTrackingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInteractionTrackingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInteractionTrackingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelReplyCompletedEventHandler(object sender, CancelReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long outGoingMessageId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long lockedByUserId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UnlockInteractionCompletedEventHandler(object sender, UnlockInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void BuildForwardOrConsultCompletedEventHandler(object sender, BuildForwardOrConsultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildForwardOrConsultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildForwardOrConsultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long teamId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ReplyInfo replyInfoData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplyInfo)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public ActivityInfo[] activityData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityInfo[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public AttachmentInfo[] attachmentData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentInfo[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int totalEventsCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public long eventId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public long outGoingMessageId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public bool useExternalDispatcher {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string lockedByUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public InteractionInfo interactionInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InteractionInfo)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public byte[] fileBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void BuildSmsReplyCompletedEventHandler(object sender, BuildSmsReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildSmsReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildSmsReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long teamId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long replyId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string lockedbyUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool interactionReplyPermission {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public bool sendSmsPermission {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public bool isContactValidForSms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public InteractionInfo interactionInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InteractionInfo)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string smsExtractorDispatcherDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void BuildReplyCompletedEventHandler(object sender, BuildReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long teamId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long replyId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public ReplyInfo replyInfoData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplyInfo)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public ReplyMsg replyinProgress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplyMsg)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public ReplyMsg replyOriginalMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplyMsg)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public InteractionInfo intInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InteractionInfo)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteReplyCompletedEventHandler(object sender, DeleteReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string lockedByUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPropertiesTabCompletedEventHandler(object sender, GetPropertiesTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] propData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string propXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdatePropertyTabCompletedEventHandler(object sender, UpdatePropertyTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePropertyTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePropertyTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetRLTabCompletedEventHandler(object sender, GetRLTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRLTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRLTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] propData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string propXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateRLTabCompletedEventHandler(object sender, UpdateRLTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRLTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRLTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLinkedTabCompletedEventHandler(object sender, GetLinkedTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] propData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string propXml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591