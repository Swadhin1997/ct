//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PrjPASS.ContactWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Contact Web ServiceSoap", Namespace="http://www.talisma.com/")]
    public partial class ContactWebService : Microsoft.Web.Services3.WebServicesClientProtocol
    {
        
        private System.Threading.SendOrPostCallback CreateContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveContactExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactLogoffOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeContactPortalPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPortalPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterContactForPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPortalConfigDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePropertyTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRLTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRLTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedTabExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentTabExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAttachmentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAttachmentCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAttachmentTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommentsTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContactToAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveContactFromAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContactWebService() {
            this.Url = global::PrjPASS.Properties.Settings.Default.PrjPASS_ContactWS_Contact_x0020_Web_x0020_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateContactCompletedEventHandler CreateContactCompleted;
        
        /// <remarks/>
        public event ResolveContactCompletedEventHandler ResolveContactCompleted;
        
        /// <remarks/>
        public event ResolveContactExCompletedEventHandler ResolveContactExCompleted;
        
        /// <remarks/>
        public event DeleteContactCompletedEventHandler DeleteContactCompleted;
        
        /// <remarks/>
        public event DeleteContactsCompletedEventHandler DeleteContactsCompleted;
        
        /// <remarks/>
        public event ContactLogonCompletedEventHandler ContactLogonCompleted;
        
        /// <remarks/>
        public event ContactLogoffCompletedEventHandler ContactLogoffCompleted;
        
        /// <remarks/>
        public event ChangeContactPortalPasswordCompletedEventHandler ChangeContactPortalPasswordCompleted;
        
        /// <remarks/>
        public event SendPortalPasswordCompletedEventHandler SendPortalPasswordCompleted;
        
        /// <remarks/>
        public event RegisterContactForPortalCompletedEventHandler RegisterContactForPortalCompleted;
        
        /// <remarks/>
        public event GetPortalConfigDetailsCompletedEventHandler GetPortalConfigDetailsCompleted;
        
        /// <remarks/>
        public event UpdatePropertyTabCompletedEventHandler UpdatePropertyTabCompleted;
        
        /// <remarks/>
        public event GetPropertiesTabCompletedEventHandler GetPropertiesTabCompleted;
        
        /// <remarks/>
        public event UpdateRLTabCompletedEventHandler UpdateRLTabCompleted;
        
        /// <remarks/>
        public event GetRLTabCompletedEventHandler GetRLTabCompleted;
        
        /// <remarks/>
        public event GetLinkedTabCompletedEventHandler GetLinkedTabCompleted;
        
        /// <remarks/>
        public event GetLinkedTabExCompletedEventHandler GetLinkedTabExCompleted;
        
        /// <remarks/>
        public event GetAttachmentTabCompletedEventHandler GetAttachmentTabCompleted;
        
        /// <remarks/>
        public event GetAttachmentTabExCompletedEventHandler GetAttachmentTabExCompleted;
        
        /// <remarks/>
        public event GetAttachmentFileCompletedEventHandler GetAttachmentFileCompleted;
        
        /// <remarks/>
        public event UpdateAttachmentFileCompletedEventHandler UpdateAttachmentFileCompleted;
        
        /// <remarks/>
        public event UpdateAttachmentCommentsCompletedEventHandler UpdateAttachmentCommentsCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;
        
        /// <remarks/>
        public event UpdateAttachmentTabCompletedEventHandler UpdateAttachmentTabCompleted;
        
        /// <remarks/>
        public event GetCommentsTabCompletedEventHandler GetCommentsTabCompleted;
        
        /// <remarks/>
        public event UpdateCommentsTabCompletedEventHandler UpdateCommentsTabCompleted;
        
        /// <remarks/>
        public event AddContactToAccountsCompletedEventHandler AddContactToAccountsCompleted;
        
        /// <remarks/>
        public event RemoveContactFromAccountCompletedEventHandler RemoveContactFromAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/CreateContact", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateContact(string contactName, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, bool bUpdateReadOnly, bool bIgnoreMandatoryCheck, out long contactID, out string error) {
            object[] results = this.Invoke("CreateContact", new object[] {
                        contactName,
                        propData,
                        bUpdateReadOnly,
                        bIgnoreMandatoryCheck});
            contactID = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContactAsync(string contactName, PropertyInfo[] propData, bool bUpdateReadOnly, bool bIgnoreMandatoryCheck) {
            this.CreateContactAsync(contactName, propData, bUpdateReadOnly, bIgnoreMandatoryCheck, null);
        }
        
        /// <remarks/>
        public void CreateContactAsync(string contactName, PropertyInfo[] propData, bool bUpdateReadOnly, bool bIgnoreMandatoryCheck, object userState) {
            if ((this.CreateContactOperationCompleted == null)) {
                this.CreateContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContactOperationCompleted);
            }
            this.InvokeAsync("CreateContact", new object[] {
                        contactName,
                        propData,
                        bUpdateReadOnly,
                        bIgnoreMandatoryCheck}, this.CreateContactOperationCompleted, userState);
        }
        
        private void OnCreateContactOperationCompleted(object arg) {
            if ((this.CreateContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContactCompleted(this, new CreateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/ResolveContact", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ResolveContact(bool noCheckForDuplicateEmail, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] contactPropData, out long contactId, out string error) {
            object[] results = this.Invoke("ResolveContact", new object[] {
                        noCheckForDuplicateEmail,
                        contactPropData});
            contactId = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveContactAsync(bool noCheckForDuplicateEmail, PropertyInfo[] contactPropData) {
            this.ResolveContactAsync(noCheckForDuplicateEmail, contactPropData, null);
        }
        
        /// <remarks/>
        public void ResolveContactAsync(bool noCheckForDuplicateEmail, PropertyInfo[] contactPropData, object userState) {
            if ((this.ResolveContactOperationCompleted == null)) {
                this.ResolveContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveContactOperationCompleted);
            }
            this.InvokeAsync("ResolveContact", new object[] {
                        noCheckForDuplicateEmail,
                        contactPropData}, this.ResolveContactOperationCompleted, userState);
        }
        
        private void OnResolveContactOperationCompleted(object arg) {
            if ((this.ResolveContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveContactCompleted(this, new ResolveContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/ResolveContactEx", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ResolveContactEx(bool noCheckForDuplicateEmail, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] contactPropData, int nOperator, out long contactId, out string error) {
            object[] results = this.Invoke("ResolveContactEx", new object[] {
                        noCheckForDuplicateEmail,
                        contactPropData,
                        nOperator});
            contactId = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveContactExAsync(bool noCheckForDuplicateEmail, PropertyInfo[] contactPropData, int nOperator) {
            this.ResolveContactExAsync(noCheckForDuplicateEmail, contactPropData, nOperator, null);
        }
        
        /// <remarks/>
        public void ResolveContactExAsync(bool noCheckForDuplicateEmail, PropertyInfo[] contactPropData, int nOperator, object userState) {
            if ((this.ResolveContactExOperationCompleted == null)) {
                this.ResolveContactExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveContactExOperationCompleted);
            }
            this.InvokeAsync("ResolveContactEx", new object[] {
                        noCheckForDuplicateEmail,
                        contactPropData,
                        nOperator}, this.ResolveContactExOperationCompleted, userState);
        }
        
        private void OnResolveContactExOperationCompleted(object arg) {
            if ((this.ResolveContactExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveContactExCompleted(this, new ResolveContactExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/DeleteContact", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DeleteContact(long contactID, bool deleteRelatedObjects, out string error) {
            object[] results = this.Invoke("DeleteContact", new object[] {
                        contactID,
                        deleteRelatedObjects});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContactAsync(long contactID, bool deleteRelatedObjects) {
            this.DeleteContactAsync(contactID, deleteRelatedObjects, null);
        }
        
        /// <remarks/>
        public void DeleteContactAsync(long contactID, bool deleteRelatedObjects, object userState) {
            if ((this.DeleteContactOperationCompleted == null)) {
                this.DeleteContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactOperationCompleted);
            }
            this.InvokeAsync("DeleteContact", new object[] {
                        contactID,
                        deleteRelatedObjects}, this.DeleteContactOperationCompleted, userState);
        }
        
        private void OnDeleteContactOperationCompleted(object arg) {
            if ((this.DeleteContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactCompleted(this, new DeleteContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/DeleteContacts", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DeleteContacts(string strContactIDs, bool bDeleteRelatedObjects, out string error) {
            object[] results = this.Invoke("DeleteContacts", new object[] {
                        strContactIDs,
                        bDeleteRelatedObjects});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContactsAsync(string strContactIDs, bool bDeleteRelatedObjects) {
            this.DeleteContactsAsync(strContactIDs, bDeleteRelatedObjects, null);
        }
        
        /// <remarks/>
        public void DeleteContactsAsync(string strContactIDs, bool bDeleteRelatedObjects, object userState) {
            if ((this.DeleteContactsOperationCompleted == null)) {
                this.DeleteContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactsOperationCompleted);
            }
            this.InvokeAsync("DeleteContacts", new object[] {
                        strContactIDs,
                        bDeleteRelatedObjects}, this.DeleteContactsOperationCompleted, userState);
        }
        
        private void OnDeleteContactsOperationCompleted(object arg) {
            if ((this.DeleteContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactsCompleted(this, new DeleteContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/ContactLogon", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ContactLogon(string emailId, string password, int portalId, bool customLogin, out bool validContact, out string guid, out long contactId, out string error) {
            object[] results = this.Invoke("ContactLogon", new object[] {
                        emailId,
                        password,
                        portalId,
                        customLogin});
            validContact = ((bool)(results[1]));
            guid = ((string)(results[2]));
            contactId = ((long)(results[3]));
            error = ((string)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ContactLogonAsync(string emailId, string password, int portalId, bool customLogin) {
            this.ContactLogonAsync(emailId, password, portalId, customLogin, null);
        }
        
        /// <remarks/>
        public void ContactLogonAsync(string emailId, string password, int portalId, bool customLogin, object userState) {
            if ((this.ContactLogonOperationCompleted == null)) {
                this.ContactLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactLogonOperationCompleted);
            }
            this.InvokeAsync("ContactLogon", new object[] {
                        emailId,
                        password,
                        portalId,
                        customLogin}, this.ContactLogonOperationCompleted, userState);
        }
        
        private void OnContactLogonOperationCompleted(object arg) {
            if ((this.ContactLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactLogonCompleted(this, new ContactLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/ContactLogoff", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ContactLogoff(int contactId, int portalId, string sessionKey, out string error) {
            object[] results = this.Invoke("ContactLogoff", new object[] {
                        contactId,
                        portalId,
                        sessionKey});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ContactLogoffAsync(int contactId, int portalId, string sessionKey) {
            this.ContactLogoffAsync(contactId, portalId, sessionKey, null);
        }
        
        /// <remarks/>
        public void ContactLogoffAsync(int contactId, int portalId, string sessionKey, object userState) {
            if ((this.ContactLogoffOperationCompleted == null)) {
                this.ContactLogoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactLogoffOperationCompleted);
            }
            this.InvokeAsync("ContactLogoff", new object[] {
                        contactId,
                        portalId,
                        sessionKey}, this.ContactLogoffOperationCompleted, userState);
        }
        
        private void OnContactLogoffOperationCompleted(object arg) {
            if ((this.ContactLogoffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactLogoffCompleted(this, new ContactLogoffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/ChangeContactPortalPassword", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ChangeContactPortalPassword(long contactID, string emailId, string oldPassword, string newPassword, int portalId, bool doTpinCheck, out string error) {
            object[] results = this.Invoke("ChangeContactPortalPassword", new object[] {
                        contactID,
                        emailId,
                        oldPassword,
                        newPassword,
                        portalId,
                        doTpinCheck});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeContactPortalPasswordAsync(long contactID, string emailId, string oldPassword, string newPassword, int portalId, bool doTpinCheck) {
            this.ChangeContactPortalPasswordAsync(contactID, emailId, oldPassword, newPassword, portalId, doTpinCheck, null);
        }
        
        /// <remarks/>
        public void ChangeContactPortalPasswordAsync(long contactID, string emailId, string oldPassword, string newPassword, int portalId, bool doTpinCheck, object userState) {
            if ((this.ChangeContactPortalPasswordOperationCompleted == null)) {
                this.ChangeContactPortalPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeContactPortalPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeContactPortalPassword", new object[] {
                        contactID,
                        emailId,
                        oldPassword,
                        newPassword,
                        portalId,
                        doTpinCheck}, this.ChangeContactPortalPasswordOperationCompleted, userState);
        }
        
        private void OnChangeContactPortalPasswordOperationCompleted(object arg) {
            if ((this.ChangeContactPortalPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeContactPortalPasswordCompleted(this, new ChangeContactPortalPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/SendPortalPassword", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendPortalPassword(int PortalId, string emailId, out string error) {
            object[] results = this.Invoke("SendPortalPassword", new object[] {
                        PortalId,
                        emailId});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendPortalPasswordAsync(int PortalId, string emailId) {
            this.SendPortalPasswordAsync(PortalId, emailId, null);
        }
        
        /// <remarks/>
        public void SendPortalPasswordAsync(int PortalId, string emailId, object userState) {
            if ((this.SendPortalPasswordOperationCompleted == null)) {
                this.SendPortalPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPortalPasswordOperationCompleted);
            }
            this.InvokeAsync("SendPortalPassword", new object[] {
                        PortalId,
                        emailId}, this.SendPortalPasswordOperationCompleted, userState);
        }
        
        private void OnSendPortalPasswordOperationCompleted(object arg) {
            if ((this.SendPortalPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPortalPasswordCompleted(this, new SendPortalPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/RegisterContactForPortal", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long RegisterContactForPortal(long portalId, string contactName, string contactEmailId, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, out long contactId, out string error) {
            object[] results = this.Invoke("RegisterContactForPortal", new object[] {
                        portalId,
                        contactName,
                        contactEmailId,
                        propData});
            contactId = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterContactForPortalAsync(long portalId, string contactName, string contactEmailId, PropertyInfo[] propData) {
            this.RegisterContactForPortalAsync(portalId, contactName, contactEmailId, propData, null);
        }
        
        /// <remarks/>
        public void RegisterContactForPortalAsync(long portalId, string contactName, string contactEmailId, PropertyInfo[] propData, object userState) {
            if ((this.RegisterContactForPortalOperationCompleted == null)) {
                this.RegisterContactForPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterContactForPortalOperationCompleted);
            }
            this.InvokeAsync("RegisterContactForPortal", new object[] {
                        portalId,
                        contactName,
                        contactEmailId,
                        propData}, this.RegisterContactForPortalOperationCompleted, userState);
        }
        
        private void OnRegisterContactForPortalOperationCompleted(object arg) {
            if ((this.RegisterContactForPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterContactForPortalCompleted(this, new RegisterContactForPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetPortalConfigDetails", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetPortalConfigDetails(long contactId, long portalId, string valueIds, int valueIdCount, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] arrPropInfo, out string error) {
            object[] results = this.Invoke("GetPortalConfigDetails", new object[] {
                        contactId,
                        portalId,
                        valueIds,
                        valueIdCount});
            arrPropInfo = ((PropertyInfo[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetPortalConfigDetailsAsync(long contactId, long portalId, string valueIds, int valueIdCount) {
            this.GetPortalConfigDetailsAsync(contactId, portalId, valueIds, valueIdCount, null);
        }
        
        /// <remarks/>
        public void GetPortalConfigDetailsAsync(long contactId, long portalId, string valueIds, int valueIdCount, object userState) {
            if ((this.GetPortalConfigDetailsOperationCompleted == null)) {
                this.GetPortalConfigDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPortalConfigDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPortalConfigDetails", new object[] {
                        contactId,
                        portalId,
                        valueIds,
                        valueIdCount}, this.GetPortalConfigDetailsOperationCompleted, userState);
        }
        
        private void OnGetPortalConfigDetailsOperationCompleted(object arg) {
            if ((this.GetPortalConfigDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPortalConfigDetailsCompleted(this, new GetPortalConfigDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdatePropertyTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdatePropertyTab(long contactId, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, bool bUpdateReadOnly, bool bIgnoreMandatoryCheck, out string error) {
            object[] results = this.Invoke("UpdatePropertyTab", new object[] {
                        contactId,
                        propData,
                        bUpdateReadOnly,
                        bIgnoreMandatoryCheck});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePropertyTabAsync(long contactId, PropertyInfo[] propData, bool bUpdateReadOnly, bool bIgnoreMandatoryCheck) {
            this.UpdatePropertyTabAsync(contactId, propData, bUpdateReadOnly, bIgnoreMandatoryCheck, null);
        }
        
        /// <remarks/>
        public void UpdatePropertyTabAsync(long contactId, PropertyInfo[] propData, bool bUpdateReadOnly, bool bIgnoreMandatoryCheck, object userState) {
            if ((this.UpdatePropertyTabOperationCompleted == null)) {
                this.UpdatePropertyTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePropertyTabOperationCompleted);
            }
            this.InvokeAsync("UpdatePropertyTab", new object[] {
                        contactId,
                        propData,
                        bUpdateReadOnly,
                        bIgnoreMandatoryCheck}, this.UpdatePropertyTabOperationCompleted, userState);
        }
        
        private void OnUpdatePropertyTabOperationCompleted(object arg) {
            if ((this.UpdatePropertyTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePropertyTabCompleted(this, new UpdatePropertyTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetPropertiesTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetPropertiesTab(long contactID, long tabID, int getPropinfoOrPropxml, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] propData, out string propXML, out string error) {
            object[] results = this.Invoke("GetPropertiesTab", new object[] {
                        contactID,
                        tabID,
                        getPropinfoOrPropxml});
            propData = ((PropertyInfo[])(results[1]));
            propXML = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesTabAsync(long contactID, long tabID, int getPropinfoOrPropxml) {
            this.GetPropertiesTabAsync(contactID, tabID, getPropinfoOrPropxml, null);
        }
        
        /// <remarks/>
        public void GetPropertiesTabAsync(long contactID, long tabID, int getPropinfoOrPropxml, object userState) {
            if ((this.GetPropertiesTabOperationCompleted == null)) {
                this.GetPropertiesTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesTabOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesTab", new object[] {
                        contactID,
                        tabID,
                        getPropinfoOrPropxml}, this.GetPropertiesTabOperationCompleted, userState);
        }
        
        private void OnGetPropertiesTabOperationCompleted(object arg) {
            if ((this.GetPropertiesTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesTabCompleted(this, new GetPropertiesTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateRLTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateRLTab(long contactID, long tabID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PropertyInfo[] propData, int[] deleteRows, bool bUpdateReadOnly, out string error) {
            object[] results = this.Invoke("UpdateRLTab", new object[] {
                        contactID,
                        tabID,
                        propData,
                        deleteRows,
                        bUpdateReadOnly});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRLTabAsync(long contactID, long tabID, PropertyInfo[] propData, int[] deleteRows, bool bUpdateReadOnly) {
            this.UpdateRLTabAsync(contactID, tabID, propData, deleteRows, bUpdateReadOnly, null);
        }
        
        /// <remarks/>
        public void UpdateRLTabAsync(long contactID, long tabID, PropertyInfo[] propData, int[] deleteRows, bool bUpdateReadOnly, object userState) {
            if ((this.UpdateRLTabOperationCompleted == null)) {
                this.UpdateRLTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRLTabOperationCompleted);
            }
            this.InvokeAsync("UpdateRLTab", new object[] {
                        contactID,
                        tabID,
                        propData,
                        deleteRows,
                        bUpdateReadOnly}, this.UpdateRLTabOperationCompleted, userState);
        }
        
        private void OnUpdateRLTabOperationCompleted(object arg) {
            if ((this.UpdateRLTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRLTabCompleted(this, new UpdateRLTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetRLTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetRLTab(long contactID, long tabID, int getPropinfoOrPropxml, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] propData, out string rlpropXML, out string error) {
            object[] results = this.Invoke("GetRLTab", new object[] {
                        contactID,
                        tabID,
                        getPropinfoOrPropxml});
            propData = ((PropertyInfo[])(results[1]));
            rlpropXML = ((string)(results[2]));
            error = ((string)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetRLTabAsync(long contactID, long tabID, int getPropinfoOrPropxml) {
            this.GetRLTabAsync(contactID, tabID, getPropinfoOrPropxml, null);
        }
        
        /// <remarks/>
        public void GetRLTabAsync(long contactID, long tabID, int getPropinfoOrPropxml, object userState) {
            if ((this.GetRLTabOperationCompleted == null)) {
                this.GetRLTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRLTabOperationCompleted);
            }
            this.InvokeAsync("GetRLTab", new object[] {
                        contactID,
                        tabID,
                        getPropinfoOrPropxml}, this.GetRLTabOperationCompleted, userState);
        }
        
        private void OnGetRLTabOperationCompleted(object arg) {
            if ((this.GetRLTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRLTabCompleted(this, new GetRLTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetLinkedTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetLinkedTab(long contactID, long tabID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out PropertyInfo[] propData, out string error) {
            object[] results = this.Invoke("GetLinkedTab", new object[] {
                        contactID,
                        tabID});
            propData = ((PropertyInfo[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedTabAsync(long contactID, long tabID) {
            this.GetLinkedTabAsync(contactID, tabID, null);
        }
        
        /// <remarks/>
        public void GetLinkedTabAsync(long contactID, long tabID, object userState) {
            if ((this.GetLinkedTabOperationCompleted == null)) {
                this.GetLinkedTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedTabOperationCompleted);
            }
            this.InvokeAsync("GetLinkedTab", new object[] {
                        contactID,
                        tabID}, this.GetLinkedTabOperationCompleted, userState);
        }
        
        private void OnGetLinkedTabOperationCompleted(object arg) {
            if ((this.GetLinkedTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedTabCompleted(this, new GetLinkedTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetLinkedTabEx", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetLinkedTabEx(long contactID, long tabID, out string propXML, out string error) {
            object[] results = this.Invoke("GetLinkedTabEx", new object[] {
                        contactID,
                        tabID});
            propXML = ((string)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedTabExAsync(long contactID, long tabID) {
            this.GetLinkedTabExAsync(contactID, tabID, null);
        }
        
        /// <remarks/>
        public void GetLinkedTabExAsync(long contactID, long tabID, object userState) {
            if ((this.GetLinkedTabExOperationCompleted == null)) {
                this.GetLinkedTabExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedTabExOperationCompleted);
            }
            this.InvokeAsync("GetLinkedTabEx", new object[] {
                        contactID,
                        tabID}, this.GetLinkedTabExOperationCompleted, userState);
        }
        
        private void OnGetLinkedTabExOperationCompleted(object arg) {
            if ((this.GetLinkedTabExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedTabExCompleted(this, new GetLinkedTabExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAttachmentTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAttachmentTab(long contactID, long tabID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out AttachmentData[] attachments, out string error) {
            object[] results = this.Invoke("GetAttachmentTab", new object[] {
                        contactID,
                        tabID});
            attachments = ((AttachmentData[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentTabAsync(long contactID, long tabID) {
            this.GetAttachmentTabAsync(contactID, tabID, null);
        }
        
        /// <remarks/>
        public void GetAttachmentTabAsync(long contactID, long tabID, object userState) {
            if ((this.GetAttachmentTabOperationCompleted == null)) {
                this.GetAttachmentTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentTabOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentTab", new object[] {
                        contactID,
                        tabID}, this.GetAttachmentTabOperationCompleted, userState);
        }
        
        private void OnGetAttachmentTabOperationCompleted(object arg) {
            if ((this.GetAttachmentTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentTabCompleted(this, new GetAttachmentTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAttachmentTabEx", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAttachmentTabEx(long objectType, long objectID, long tabID, out string strXML, out string error) {
            object[] results = this.Invoke("GetAttachmentTabEx", new object[] {
                        objectType,
                        objectID,
                        tabID});
            strXML = ((string)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentTabExAsync(long objectType, long objectID, long tabID) {
            this.GetAttachmentTabExAsync(objectType, objectID, tabID, null);
        }
        
        /// <remarks/>
        public void GetAttachmentTabExAsync(long objectType, long objectID, long tabID, object userState) {
            if ((this.GetAttachmentTabExOperationCompleted == null)) {
                this.GetAttachmentTabExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentTabExOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentTabEx", new object[] {
                        objectType,
                        objectID,
                        tabID}, this.GetAttachmentTabExOperationCompleted, userState);
        }
        
        private void OnGetAttachmentTabExOperationCompleted(object arg) {
            if ((this.GetAttachmentTabExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentTabExCompleted(this, new GetAttachmentTabExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetAttachmentFile", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAttachmentFile(long lObjectType, long objectID, long lAttachmentID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] fileBlob, out string error) {
            object[] results = this.Invoke("GetAttachmentFile", new object[] {
                        lObjectType,
                        objectID,
                        lAttachmentID});
            fileBlob = ((byte[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentFileAsync(long lObjectType, long objectID, long lAttachmentID) {
            this.GetAttachmentFileAsync(lObjectType, objectID, lAttachmentID, null);
        }
        
        /// <remarks/>
        public void GetAttachmentFileAsync(long lObjectType, long objectID, long lAttachmentID, object userState) {
            if ((this.GetAttachmentFileOperationCompleted == null)) {
                this.GetAttachmentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentFileOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentFile", new object[] {
                        lObjectType,
                        objectID,
                        lAttachmentID}, this.GetAttachmentFileOperationCompleted, userState);
        }
        
        private void OnGetAttachmentFileOperationCompleted(object arg) {
            if ((this.GetAttachmentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentFileCompleted(this, new GetAttachmentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateAttachmentFile", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateAttachmentFile(long lObjectType, long lobjectID, ref long lAttachmentID, long lTabId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileBlob, string strAttName, out string error) {
            object[] results = this.Invoke("UpdateAttachmentFile", new object[] {
                        lObjectType,
                        lobjectID,
                        lAttachmentID,
                        lTabId,
                        fileBlob,
                        strAttName});
            lAttachmentID = ((long)(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAttachmentFileAsync(long lObjectType, long lobjectID, long lAttachmentID, long lTabId, byte[] fileBlob, string strAttName) {
            this.UpdateAttachmentFileAsync(lObjectType, lobjectID, lAttachmentID, lTabId, fileBlob, strAttName, null);
        }
        
        /// <remarks/>
        public void UpdateAttachmentFileAsync(long lObjectType, long lobjectID, long lAttachmentID, long lTabId, byte[] fileBlob, string strAttName, object userState) {
            if ((this.UpdateAttachmentFileOperationCompleted == null)) {
                this.UpdateAttachmentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAttachmentFileOperationCompleted);
            }
            this.InvokeAsync("UpdateAttachmentFile", new object[] {
                        lObjectType,
                        lobjectID,
                        lAttachmentID,
                        lTabId,
                        fileBlob,
                        strAttName}, this.UpdateAttachmentFileOperationCompleted, userState);
        }
        
        private void OnUpdateAttachmentFileOperationCompleted(object arg) {
            if ((this.UpdateAttachmentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAttachmentFileCompleted(this, new UpdateAttachmentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateAttachmentComments", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateAttachmentComments(long lobjectType, long lobjectID, long lAttachmentId, string commentsData, out string error) {
            object[] results = this.Invoke("UpdateAttachmentComments", new object[] {
                        lobjectType,
                        lobjectID,
                        lAttachmentId,
                        commentsData});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAttachmentCommentsAsync(long lobjectType, long lobjectID, long lAttachmentId, string commentsData) {
            this.UpdateAttachmentCommentsAsync(lobjectType, lobjectID, lAttachmentId, commentsData, null);
        }
        
        /// <remarks/>
        public void UpdateAttachmentCommentsAsync(long lobjectType, long lobjectID, long lAttachmentId, string commentsData, object userState) {
            if ((this.UpdateAttachmentCommentsOperationCompleted == null)) {
                this.UpdateAttachmentCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAttachmentCommentsOperationCompleted);
            }
            this.InvokeAsync("UpdateAttachmentComments", new object[] {
                        lobjectType,
                        lobjectID,
                        lAttachmentId,
                        commentsData}, this.UpdateAttachmentCommentsOperationCompleted, userState);
        }
        
        private void OnUpdateAttachmentCommentsOperationCompleted(object arg) {
            if ((this.UpdateAttachmentCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAttachmentCommentsCompleted(this, new UpdateAttachmentCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/DeleteAttachment", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DeleteAttachment(long objectType, long objectID, long tabID, long lAttachmentId, out string error) {
            object[] results = this.Invoke("DeleteAttachment", new object[] {
                        objectType,
                        objectID,
                        tabID,
                        lAttachmentId});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(long objectType, long objectID, long tabID, long lAttachmentId) {
            this.DeleteAttachmentAsync(objectType, objectID, tabID, lAttachmentId, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(long objectType, long objectID, long tabID, long lAttachmentId, object userState) {
            if ((this.DeleteAttachmentOperationCompleted == null)) {
                this.DeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachment", new object[] {
                        objectType,
                        objectID,
                        tabID,
                        lAttachmentId}, this.DeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.DeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateAttachmentTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateAttachmentTab(long contactID, long tabId, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref AttachmentData[] attachments, out string error) {
            object[] results = this.Invoke("UpdateAttachmentTab", new object[] {
                        contactID,
                        tabId,
                        attachments});
            attachments = ((AttachmentData[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAttachmentTabAsync(long contactID, long tabId, AttachmentData[] attachments) {
            this.UpdateAttachmentTabAsync(contactID, tabId, attachments, null);
        }
        
        /// <remarks/>
        public void UpdateAttachmentTabAsync(long contactID, long tabId, AttachmentData[] attachments, object userState) {
            if ((this.UpdateAttachmentTabOperationCompleted == null)) {
                this.UpdateAttachmentTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAttachmentTabOperationCompleted);
            }
            this.InvokeAsync("UpdateAttachmentTab", new object[] {
                        contactID,
                        tabId,
                        attachments}, this.UpdateAttachmentTabOperationCompleted, userState);
        }
        
        private void OnUpdateAttachmentTabOperationCompleted(object arg) {
            if ((this.UpdateAttachmentTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAttachmentTabCompleted(this, new UpdateAttachmentTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/GetCommentsTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCommentsTab(long contactID, long tabID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out CommentsData[] comments, out string error) {
            object[] results = this.Invoke("GetCommentsTab", new object[] {
                        contactID,
                        tabID});
            comments = ((CommentsData[])(results[1]));
            error = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsTabAsync(long contactID, long tabID) {
            this.GetCommentsTabAsync(contactID, tabID, null);
        }
        
        /// <remarks/>
        public void GetCommentsTabAsync(long contactID, long tabID, object userState) {
            if ((this.GetCommentsTabOperationCompleted == null)) {
                this.GetCommentsTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsTabOperationCompleted);
            }
            this.InvokeAsync("GetCommentsTab", new object[] {
                        contactID,
                        tabID}, this.GetCommentsTabOperationCompleted, userState);
        }
        
        private void OnGetCommentsTabOperationCompleted(object arg) {
            if ((this.GetCommentsTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsTabCompleted(this, new GetCommentsTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/UpdateCommentsTab", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateCommentsTab(long contactID, long tabId, CommentsData comment, out string error) {
            object[] results = this.Invoke("UpdateCommentsTab", new object[] {
                        contactID,
                        tabId,
                        comment});
            error = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommentsTabAsync(long contactID, long tabId, CommentsData comment) {
            this.UpdateCommentsTabAsync(contactID, tabId, comment, null);
        }
        
        /// <remarks/>
        public void UpdateCommentsTabAsync(long contactID, long tabId, CommentsData comment, object userState) {
            if ((this.UpdateCommentsTabOperationCompleted == null)) {
                this.UpdateCommentsTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommentsTabOperationCompleted);
            }
            this.InvokeAsync("UpdateCommentsTab", new object[] {
                        contactID,
                        tabId,
                        comment}, this.UpdateCommentsTabOperationCompleted, userState);
        }
        
        private void OnUpdateCommentsTabOperationCompleted(object arg) {
            if ((this.UpdateCommentsTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommentsTabCompleted(this, new UpdateCommentsTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/AddContactToAccounts", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddContactToAccounts(long lobjectID, string strAccounts, out string strError) {
            object[] results = this.Invoke("AddContactToAccounts", new object[] {
                        lobjectID,
                        strAccounts});
            strError = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddContactToAccountsAsync(long lobjectID, string strAccounts) {
            this.AddContactToAccountsAsync(lobjectID, strAccounts, null);
        }
        
        /// <remarks/>
        public void AddContactToAccountsAsync(long lobjectID, string strAccounts, object userState) {
            if ((this.AddContactToAccountsOperationCompleted == null)) {
                this.AddContactToAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContactToAccountsOperationCompleted);
            }
            this.InvokeAsync("AddContactToAccounts", new object[] {
                        lobjectID,
                        strAccounts}, this.AddContactToAccountsOperationCompleted, userState);
        }
        
        private void OnAddContactToAccountsOperationCompleted(object arg) {
            if ((this.AddContactToAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContactToAccountsCompleted(this, new AddContactToAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.talisma.com/RemoveContactFromAccount", RequestNamespace="http://www.talisma.com/", ResponseNamespace="http://www.talisma.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long RemoveContactFromAccount(long lobjectID, long lAccId, out string strError) {
            object[] results = this.Invoke("RemoveContactFromAccount", new object[] {
                        lobjectID,
                        lAccId});
            strError = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveContactFromAccountAsync(long lobjectID, long lAccId) {
            this.RemoveContactFromAccountAsync(lobjectID, lAccId, null);
        }
        
        /// <remarks/>
        public void RemoveContactFromAccountAsync(long lobjectID, long lAccId, object userState) {
            if ((this.RemoveContactFromAccountOperationCompleted == null)) {
                this.RemoveContactFromAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveContactFromAccountOperationCompleted);
            }
            this.InvokeAsync("RemoveContactFromAccount", new object[] {
                        lobjectID,
                        lAccId}, this.RemoveContactFromAccountOperationCompleted, userState);
        }
        
        private void OnRemoveContactFromAccountOperationCompleted(object arg) {
            if ((this.RemoveContactFromAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveContactFromAccountCompleted(this, new RemoveContactFromAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class PropertyInfo {
        
        private long propertyIDField;
        
        private string propValueField;
        
        private long rowIDField;
        
        private long relJoinIDField;
        
        private string propValAttrsField;
        
        /// <remarks/>
        public long propertyID {
            get {
                return this.propertyIDField;
            }
            set {
                this.propertyIDField = value;
            }
        }
        
        /// <remarks/>
        public string propValue {
            get {
                return this.propValueField;
            }
            set {
                this.propValueField = value;
            }
        }
        
        /// <remarks/>
        public long rowID {
            get {
                return this.rowIDField;
            }
            set {
                this.rowIDField = value;
            }
        }
        
        /// <remarks/>
        public long relJoinID {
            get {
                return this.relJoinIDField;
            }
            set {
                this.relJoinIDField = value;
            }
        }
        
        /// <remarks/>
        public string propValAttrs {
            get {
                return this.propValAttrsField;
            }
            set {
                this.propValAttrsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class CommentsData {
        
        private long userIDField;
        
        private System.DateTime dateField;
        
        private string commentField;
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public partial class AttachmentData {
        
        private string fileNameField;
        
        private string commentField;
        
        private byte[] fileBlobField;
        
        private bool deleteAttachmentField;
        
        private long attachmentIdField;
        
        private long fileSizeField;
        
        private System.DateTime dateModifiedField;
        
        private long createdByField;
        
        private System.DateTime createdOnField;
        
        private AttachmentEditOption editOptionField;
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileBlob {
            get {
                return this.fileBlobField;
            }
            set {
                this.fileBlobField = value;
            }
        }
        
        /// <remarks/>
        public bool deleteAttachment {
            get {
                return this.deleteAttachmentField;
            }
            set {
                this.deleteAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public long attachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
            }
        }
        
        /// <remarks/>
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public long createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        public AttachmentEditOption editOption {
            get {
                return this.editOptionField;
            }
            set {
                this.editOptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.talisma.com/")]
    public enum AttachmentEditOption {
        
        /// <remarks/>
        CreateNew,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        UpdateComment,
        
        /// <remarks/>
        UpdateFile,
        
        /// <remarks/>
        UpdateFileAndComment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateContactCompletedEventHandler(object sender, CreateContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long contactID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ResolveContactCompletedEventHandler(object sender, ResolveContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long contactId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ResolveContactExCompletedEventHandler(object sender, ResolveContactExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveContactExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveContactExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long contactId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteContactCompletedEventHandler(object sender, DeleteContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteContactsCompletedEventHandler(object sender, DeleteContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ContactLogonCompletedEventHandler(object sender, ContactLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool validContact {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string guid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long contactId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ContactLogoffCompletedEventHandler(object sender, ContactLogoffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactLogoffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactLogoffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ChangeContactPortalPasswordCompletedEventHandler(object sender, ChangeContactPortalPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeContactPortalPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeContactPortalPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendPortalPasswordCompletedEventHandler(object sender, SendPortalPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPortalPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPortalPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegisterContactForPortalCompletedEventHandler(object sender, RegisterContactForPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterContactForPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterContactForPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long contactId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPortalConfigDetailsCompletedEventHandler(object sender, GetPortalConfigDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPortalConfigDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPortalConfigDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] arrPropInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdatePropertyTabCompletedEventHandler(object sender, UpdatePropertyTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePropertyTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePropertyTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPropertiesTabCompletedEventHandler(object sender, GetPropertiesTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] propData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string propXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateRLTabCompletedEventHandler(object sender, UpdateRLTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRLTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRLTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetRLTabCompletedEventHandler(object sender, GetRLTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRLTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRLTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] propData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string rlpropXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLinkedTabCompletedEventHandler(object sender, GetLinkedTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertyInfo[] propData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLinkedTabExCompletedEventHandler(object sender, GetLinkedTabExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedTabExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedTabExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string propXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAttachmentTabCompletedEventHandler(object sender, GetAttachmentTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public AttachmentData[] attachments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentData[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAttachmentTabExCompletedEventHandler(object sender, GetAttachmentTabExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentTabExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentTabExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAttachmentFileCompletedEventHandler(object sender, GetAttachmentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] fileBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateAttachmentFileCompletedEventHandler(object sender, UpdateAttachmentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAttachmentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAttachmentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long lAttachmentID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateAttachmentCommentsCompletedEventHandler(object sender, UpdateAttachmentCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAttachmentCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAttachmentCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteAttachmentCompletedEventHandler(object sender, DeleteAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateAttachmentTabCompletedEventHandler(object sender, UpdateAttachmentTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAttachmentTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAttachmentTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public AttachmentData[] attachments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentData[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCommentsTabCompletedEventHandler(object sender, GetCommentsTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CommentsData[] comments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommentsData[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateCommentsTabCompletedEventHandler(object sender, UpdateCommentsTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommentsTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommentsTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddContactToAccountsCompletedEventHandler(object sender, AddContactToAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContactToAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContactToAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveContactFromAccountCompletedEventHandler(object sender, RemoveContactFromAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveContactFromAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveContactFromAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591